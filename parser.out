Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> oprex
Rule 1     oprex -> <empty>
Rule 2     oprex -> WHITESPACE
Rule 3     oprex -> NEWLINE
Rule 4     oprex -> NEWLINE main_expression
Rule 5     oprex -> NEWLINE INDENT main_expression DEDENT
Rule 6     main_expression -> global_flags expression
Rule 7     main_expression -> global_flags
Rule 8     main_expression -> expression
Rule 9     global_flags -> LPAREN FLAGSET RPAREN NEWLINE
Rule 10    expression -> string_expr
Rule 11    expression -> lookup_expr
Rule 12    expression -> flagged_expr
Rule 13    expression -> quantified_expr
Rule 14    string_expr -> string NEWLINE optional_block
Rule 15    string -> boundary STRING boundary
Rule 16    boundary -> <empty>
Rule 17    boundary -> DOT
Rule 18    boundary -> UNDERSCORE
Rule 19    quantified_expr -> quantifier WHITESPACE expression
Rule 20    quantified_expr -> quantifier COLON charclass
Rule 21    quantifier -> repeat_N_times
Rule 22    quantifier -> repeat_range
Rule 23    quantifier -> optionalize
Rule 24    repeat_N_times -> NUMBER of
Rule 25    repeat_range -> numrange of
Rule 26    repeat_range -> numrange backtrack MINUS of
Rule 27    repeat_range -> NUMBER backtrack PLUS DOT DOT of
Rule 28    repeat_range -> NUMBER backtrack PLUS DOT DOT NUMBER of
Rule 29    backtrack -> WHITESPACE LT LT
Rule 30    of -> WHITESPACE OF
Rule 31    numrange -> DOT DOT
Rule 32    numrange -> NUMBER DOT DOT
Rule 33    numrange -> DOT DOT NUMBER
Rule 34    numrange -> NUMBER DOT DOT NUMBER
Rule 35    optionalize -> QUESTMARK of
Rule 36    flagged_expr -> scoped_flags expression
Rule 37    scoped_flags -> LPAREN FLAGSET RPAREN WHITESPACE
Rule 38    lookup_expr -> lookup NEWLINE optional_block
Rule 39    lookup_expr -> SLASH lookup_chain NEWLINE optional_block
Rule 40    lookup_chain -> lookup SLASH
Rule 41    lookup_chain -> lookup SLASH lookup_chain
Rule 42    lookup -> lookup_type
Rule 43    lookup -> lookup_type QUESTMARK
Rule 44    lookup_type -> variable_lookup
Rule 45    lookup_type -> backreference
Rule 46    lookup_type -> subroutine_call
Rule 47    variable_lookup -> VARNAME
Rule 48    variable_lookup -> UNDERSCORE
Rule 49    variable_lookup -> DOT
Rule 50    backreference -> EQUALSIGN VARNAME
Rule 51    subroutine_call -> AMPERSAND VARNAME
Rule 52    charclass -> charitems NEWLINE optional_block
Rule 53    charitems -> WHITESPACE charitem
Rule 54    charitems -> WHITESPACE charitem charitems
Rule 55    charitem -> ranged_char
Rule 56    charitem -> single_char
Rule 57    charitem -> period_char
Rule 58    ranged_char -> CHAR DOT DOT CHAR
Rule 59    period_char -> DOT
Rule 60    single_char -> CHAR
Rule 61    optional_block -> begin_block definitions end_block
Rule 62    optional_block -> <empty>
Rule 63    begin_block -> INDENT
Rule 64    end_block -> DEDENT
Rule 65    definitions -> definition
Rule 66    definitions -> definition definitions
Rule 67    definition -> assignment
Rule 68    definition -> GLOBALMARK assignment
Rule 69    assignment -> declaration equals assignment
Rule 70    assignment -> declaration equals expression
Rule 71    assignment -> declaration COLON charclass
Rule 72    equals -> EQUALSIGN
Rule 73    equals -> WHITESPACE EQUALSIGN
Rule 74    equals -> EQUALSIGN WHITESPACE
Rule 75    equals -> WHITESPACE EQUALSIGN WHITESPACE
Rule 76    declaration -> VARNAME
Rule 77    declaration -> DOT VARNAME
Rule 78    declaration -> LT VARNAME GT
Rule 79    declaration -> DOT LT VARNAME GT

Terminals, with rules where they appear

AMPERSAND            : 51
CHAR                 : 58 58 60
COLON                : 20 71
DEDENT               : 5 64
DOT                  : 17 27 27 28 28 31 31 32 32 33 33 34 34 49 58 58 59 77 79
EQUALSIGN            : 50 72 73 74 75
FLAGSET              : 9 37
GLOBALMARK           : 68
GT                   : 78 79
INDENT               : 5 63
LPAREN               : 9 37
LT                   : 29 29 78 79
MINUS                : 26
NEWLINE              : 3 4 5 9 14 38 39 52
NUMBER               : 24 27 28 28 32 33 34 34
OF                   : 30
PLUS                 : 27 28
QUESTMARK            : 35 43
RPAREN               : 9 37
SLASH                : 39 40 41
STRING               : 15
UNDERSCORE           : 18 48
VARNAME              : 47 50 51 76 77 78 79
WHITESPACE           : 2 19 29 30 37 53 54 73 74 75 75
error                : 

Nonterminals, with rules where they appear

assignment           : 67 68 69
backreference        : 45
backtrack            : 26 27 28
begin_block          : 61
boundary             : 15 15
charclass            : 20 71
charitem             : 53 54
charitems            : 52 54
declaration          : 69 70 71
definition           : 65 66
definitions          : 61 66
end_block            : 61
equals               : 69 70
expression           : 6 8 19 36 70
flagged_expr         : 12
global_flags         : 6 7
lookup               : 38 40 41
lookup_chain         : 39 41
lookup_expr          : 11
lookup_type          : 42 43
main_expression      : 4 5
numrange             : 25 26
of                   : 24 25 26 27 28 35
oprex                : 0
optional_block       : 14 38 39 52
optionalize          : 23
period_char          : 57
quantified_expr      : 13
quantifier           : 19 20
ranged_char          : 55
repeat_N_times       : 21
repeat_range         : 22
scoped_flags         : 36
single_char          : 56
string               : 14
string_expr          : 10
subroutine_call      : 46
variable_lookup      : 44

Parsing method: LALR

state 0

    (0) S' -> . oprex
    (1) oprex -> .
    (2) oprex -> . WHITESPACE
    (3) oprex -> . NEWLINE
    (4) oprex -> . NEWLINE main_expression
    (5) oprex -> . NEWLINE INDENT main_expression DEDENT

    $end            reduce using rule 1 (oprex -> .)
    WHITESPACE      shift and go to state 2
    NEWLINE         shift and go to state 3

    oprex                          shift and go to state 1

state 1

    (0) S' -> oprex .



state 2

    (2) oprex -> WHITESPACE .

    $end            reduce using rule 2 (oprex -> WHITESPACE .)


state 3

    (3) oprex -> NEWLINE .
    (4) oprex -> NEWLINE . main_expression
    (5) oprex -> NEWLINE . INDENT main_expression DEDENT
    (6) main_expression -> . global_flags expression
    (7) main_expression -> . global_flags
    (8) main_expression -> . expression
    (9) global_flags -> . LPAREN FLAGSET RPAREN NEWLINE
    (10) expression -> . string_expr
    (11) expression -> . lookup_expr
    (12) expression -> . flagged_expr
    (13) expression -> . quantified_expr
    (14) string_expr -> . string NEWLINE optional_block
    (38) lookup_expr -> . lookup NEWLINE optional_block
    (39) lookup_expr -> . SLASH lookup_chain NEWLINE optional_block
    (36) flagged_expr -> . scoped_flags expression
    (19) quantified_expr -> . quantifier WHITESPACE expression
    (20) quantified_expr -> . quantifier COLON charclass
    (15) string -> . boundary STRING boundary
    (42) lookup -> . lookup_type
    (43) lookup -> . lookup_type QUESTMARK
    (37) scoped_flags -> . LPAREN FLAGSET RPAREN WHITESPACE
    (21) quantifier -> . repeat_N_times
    (22) quantifier -> . repeat_range
    (23) quantifier -> . optionalize
    (16) boundary -> .
    (17) boundary -> . DOT
    (18) boundary -> . UNDERSCORE
    (44) lookup_type -> . variable_lookup
    (45) lookup_type -> . backreference
    (46) lookup_type -> . subroutine_call
    (24) repeat_N_times -> . NUMBER of
    (25) repeat_range -> . numrange of
    (26) repeat_range -> . numrange backtrack MINUS of
    (27) repeat_range -> . NUMBER backtrack PLUS DOT DOT of
    (28) repeat_range -> . NUMBER backtrack PLUS DOT DOT NUMBER of
    (35) optionalize -> . QUESTMARK of
    (47) variable_lookup -> . VARNAME
    (48) variable_lookup -> . UNDERSCORE
    (49) variable_lookup -> . DOT
    (50) backreference -> . EQUALSIGN VARNAME
    (51) subroutine_call -> . AMPERSAND VARNAME
    (31) numrange -> . DOT DOT
    (32) numrange -> . NUMBER DOT DOT
    (33) numrange -> . DOT DOT NUMBER
    (34) numrange -> . NUMBER DOT DOT NUMBER

    $end            reduce using rule 3 (oprex -> NEWLINE .)
    INDENT          shift and go to state 28
    LPAREN          shift and go to state 22
    SLASH           shift and go to state 21
    STRING          reduce using rule 16 (boundary -> .)
    DOT             shift and go to state 13
    UNDERSCORE      shift and go to state 11
    NUMBER          shift and go to state 19
    QUESTMARK       shift and go to state 26
    VARNAME         shift and go to state 8
    EQUALSIGN       shift and go to state 31
    AMPERSAND       shift and go to state 20

    scoped_flags                   shift and go to state 4
    repeat_N_times                 shift and go to state 5
    flagged_expr                   shift and go to state 6
    global_flags                   shift and go to state 7
    repeat_range                   shift and go to state 9
    backreference                  shift and go to state 10
    lookup_expr                    shift and go to state 12
    optionalize                    shift and go to state 14
    main_expression                shift and go to state 15
    string_expr                    shift and go to state 32
    lookup                         shift and go to state 16
    subroutine_call                shift and go to state 25
    string                         shift and go to state 18
    numrange                       shift and go to state 24
    quantifier                     shift and go to state 23
    boundary                       shift and go to state 17
    quantified_expr                shift and go to state 27
    lookup_type                    shift and go to state 29
    expression                     shift and go to state 30
    variable_lookup                shift and go to state 33

state 4

    (36) flagged_expr -> scoped_flags . expression
    (10) expression -> . string_expr
    (11) expression -> . lookup_expr
    (12) expression -> . flagged_expr
    (13) expression -> . quantified_expr
    (14) string_expr -> . string NEWLINE optional_block
    (38) lookup_expr -> . lookup NEWLINE optional_block
    (39) lookup_expr -> . SLASH lookup_chain NEWLINE optional_block
    (36) flagged_expr -> . scoped_flags expression
    (19) quantified_expr -> . quantifier WHITESPACE expression
    (20) quantified_expr -> . quantifier COLON charclass
    (15) string -> . boundary STRING boundary
    (42) lookup -> . lookup_type
    (43) lookup -> . lookup_type QUESTMARK
    (37) scoped_flags -> . LPAREN FLAGSET RPAREN WHITESPACE
    (21) quantifier -> . repeat_N_times
    (22) quantifier -> . repeat_range
    (23) quantifier -> . optionalize
    (16) boundary -> .
    (17) boundary -> . DOT
    (18) boundary -> . UNDERSCORE
    (44) lookup_type -> . variable_lookup
    (45) lookup_type -> . backreference
    (46) lookup_type -> . subroutine_call
    (24) repeat_N_times -> . NUMBER of
    (25) repeat_range -> . numrange of
    (26) repeat_range -> . numrange backtrack MINUS of
    (27) repeat_range -> . NUMBER backtrack PLUS DOT DOT of
    (28) repeat_range -> . NUMBER backtrack PLUS DOT DOT NUMBER of
    (35) optionalize -> . QUESTMARK of
    (47) variable_lookup -> . VARNAME
    (48) variable_lookup -> . UNDERSCORE
    (49) variable_lookup -> . DOT
    (50) backreference -> . EQUALSIGN VARNAME
    (51) subroutine_call -> . AMPERSAND VARNAME
    (31) numrange -> . DOT DOT
    (32) numrange -> . NUMBER DOT DOT
    (33) numrange -> . DOT DOT NUMBER
    (34) numrange -> . NUMBER DOT DOT NUMBER

    SLASH           shift and go to state 21
    LPAREN          shift and go to state 34
    STRING          reduce using rule 16 (boundary -> .)
    DOT             shift and go to state 13
    UNDERSCORE      shift and go to state 11
    NUMBER          shift and go to state 19
    QUESTMARK       shift and go to state 26
    VARNAME         shift and go to state 8
    EQUALSIGN       shift and go to state 31
    AMPERSAND       shift and go to state 20

    scoped_flags                   shift and go to state 4
    repeat_N_times                 shift and go to state 5
    flagged_expr                   shift and go to state 6
    repeat_range                   shift and go to state 9
    backreference                  shift and go to state 10
    lookup_expr                    shift and go to state 12
    optionalize                    shift and go to state 14
    string_expr                    shift and go to state 32
    lookup                         shift and go to state 16
    subroutine_call                shift and go to state 25
    string                         shift and go to state 18
    numrange                       shift and go to state 24
    quantifier                     shift and go to state 23
    boundary                       shift and go to state 17
    quantified_expr                shift and go to state 27
    lookup_type                    shift and go to state 29
    expression                     shift and go to state 35
    variable_lookup                shift and go to state 33

state 5

    (21) quantifier -> repeat_N_times .

    WHITESPACE      reduce using rule 21 (quantifier -> repeat_N_times .)
    COLON           reduce using rule 21 (quantifier -> repeat_N_times .)


state 6

    (12) expression -> flagged_expr .

    GLOBALMARK      reduce using rule 12 (expression -> flagged_expr .)
    VARNAME         reduce using rule 12 (expression -> flagged_expr .)
    DOT             reduce using rule 12 (expression -> flagged_expr .)
    LT              reduce using rule 12 (expression -> flagged_expr .)
    DEDENT          reduce using rule 12 (expression -> flagged_expr .)
    $end            reduce using rule 12 (expression -> flagged_expr .)


state 7

    (6) main_expression -> global_flags . expression
    (7) main_expression -> global_flags .
    (10) expression -> . string_expr
    (11) expression -> . lookup_expr
    (12) expression -> . flagged_expr
    (13) expression -> . quantified_expr
    (14) string_expr -> . string NEWLINE optional_block
    (38) lookup_expr -> . lookup NEWLINE optional_block
    (39) lookup_expr -> . SLASH lookup_chain NEWLINE optional_block
    (36) flagged_expr -> . scoped_flags expression
    (19) quantified_expr -> . quantifier WHITESPACE expression
    (20) quantified_expr -> . quantifier COLON charclass
    (15) string -> . boundary STRING boundary
    (42) lookup -> . lookup_type
    (43) lookup -> . lookup_type QUESTMARK
    (37) scoped_flags -> . LPAREN FLAGSET RPAREN WHITESPACE
    (21) quantifier -> . repeat_N_times
    (22) quantifier -> . repeat_range
    (23) quantifier -> . optionalize
    (16) boundary -> .
    (17) boundary -> . DOT
    (18) boundary -> . UNDERSCORE
    (44) lookup_type -> . variable_lookup
    (45) lookup_type -> . backreference
    (46) lookup_type -> . subroutine_call
    (24) repeat_N_times -> . NUMBER of
    (25) repeat_range -> . numrange of
    (26) repeat_range -> . numrange backtrack MINUS of
    (27) repeat_range -> . NUMBER backtrack PLUS DOT DOT of
    (28) repeat_range -> . NUMBER backtrack PLUS DOT DOT NUMBER of
    (35) optionalize -> . QUESTMARK of
    (47) variable_lookup -> . VARNAME
    (48) variable_lookup -> . UNDERSCORE
    (49) variable_lookup -> . DOT
    (50) backreference -> . EQUALSIGN VARNAME
    (51) subroutine_call -> . AMPERSAND VARNAME
    (31) numrange -> . DOT DOT
    (32) numrange -> . NUMBER DOT DOT
    (33) numrange -> . DOT DOT NUMBER
    (34) numrange -> . NUMBER DOT DOT NUMBER

    $end            reduce using rule 7 (main_expression -> global_flags .)
    DEDENT          reduce using rule 7 (main_expression -> global_flags .)
    SLASH           shift and go to state 21
    LPAREN          shift and go to state 34
    STRING          reduce using rule 16 (boundary -> .)
    DOT             shift and go to state 13
    UNDERSCORE      shift and go to state 11
    NUMBER          shift and go to state 19
    QUESTMARK       shift and go to state 26
    VARNAME         shift and go to state 8
    EQUALSIGN       shift and go to state 31
    AMPERSAND       shift and go to state 20

    scoped_flags                   shift and go to state 4
    repeat_N_times                 shift and go to state 5
    flagged_expr                   shift and go to state 6
    repeat_range                   shift and go to state 9
    backreference                  shift and go to state 10
    lookup_expr                    shift and go to state 12
    optionalize                    shift and go to state 14
    string_expr                    shift and go to state 32
    lookup                         shift and go to state 16
    subroutine_call                shift and go to state 25
    string                         shift and go to state 18
    numrange                       shift and go to state 24
    quantifier                     shift and go to state 23
    boundary                       shift and go to state 17
    quantified_expr                shift and go to state 27
    lookup_type                    shift and go to state 29
    expression                     shift and go to state 36
    variable_lookup                shift and go to state 33

state 8

    (47) variable_lookup -> VARNAME .

    QUESTMARK       reduce using rule 47 (variable_lookup -> VARNAME .)
    NEWLINE         reduce using rule 47 (variable_lookup -> VARNAME .)
    SLASH           reduce using rule 47 (variable_lookup -> VARNAME .)


state 9

    (22) quantifier -> repeat_range .

    WHITESPACE      reduce using rule 22 (quantifier -> repeat_range .)
    COLON           reduce using rule 22 (quantifier -> repeat_range .)


state 10

    (45) lookup_type -> backreference .

    QUESTMARK       reduce using rule 45 (lookup_type -> backreference .)
    NEWLINE         reduce using rule 45 (lookup_type -> backreference .)
    SLASH           reduce using rule 45 (lookup_type -> backreference .)


state 11

    (18) boundary -> UNDERSCORE .
    (48) variable_lookup -> UNDERSCORE .

    STRING          reduce using rule 18 (boundary -> UNDERSCORE .)
    QUESTMARK       reduce using rule 48 (variable_lookup -> UNDERSCORE .)
    NEWLINE         reduce using rule 48 (variable_lookup -> UNDERSCORE .)


state 12

    (11) expression -> lookup_expr .

    GLOBALMARK      reduce using rule 11 (expression -> lookup_expr .)
    VARNAME         reduce using rule 11 (expression -> lookup_expr .)
    DOT             reduce using rule 11 (expression -> lookup_expr .)
    LT              reduce using rule 11 (expression -> lookup_expr .)
    DEDENT          reduce using rule 11 (expression -> lookup_expr .)
    $end            reduce using rule 11 (expression -> lookup_expr .)


state 13

    (17) boundary -> DOT .
    (49) variable_lookup -> DOT .
    (31) numrange -> DOT . DOT
    (33) numrange -> DOT . DOT NUMBER

    STRING          reduce using rule 17 (boundary -> DOT .)
    QUESTMARK       reduce using rule 49 (variable_lookup -> DOT .)
    NEWLINE         reduce using rule 49 (variable_lookup -> DOT .)
    DOT             shift and go to state 37


state 14

    (23) quantifier -> optionalize .

    WHITESPACE      reduce using rule 23 (quantifier -> optionalize .)
    COLON           reduce using rule 23 (quantifier -> optionalize .)


state 15

    (4) oprex -> NEWLINE main_expression .

    $end            reduce using rule 4 (oprex -> NEWLINE main_expression .)


state 16

    (38) lookup_expr -> lookup . NEWLINE optional_block

    NEWLINE         shift and go to state 38


state 17

    (15) string -> boundary . STRING boundary

    STRING          shift and go to state 39


state 18

    (14) string_expr -> string . NEWLINE optional_block

    NEWLINE         shift and go to state 40


state 19

    (24) repeat_N_times -> NUMBER . of
    (27) repeat_range -> NUMBER . backtrack PLUS DOT DOT of
    (28) repeat_range -> NUMBER . backtrack PLUS DOT DOT NUMBER of
    (32) numrange -> NUMBER . DOT DOT
    (34) numrange -> NUMBER . DOT DOT NUMBER
    (30) of -> . WHITESPACE OF
    (29) backtrack -> . WHITESPACE LT LT

    DOT             shift and go to state 44
    WHITESPACE      shift and go to state 41

    of                             shift and go to state 43
    backtrack                      shift and go to state 42

state 20

    (51) subroutine_call -> AMPERSAND . VARNAME

    VARNAME         shift and go to state 45


state 21

    (39) lookup_expr -> SLASH . lookup_chain NEWLINE optional_block
    (40) lookup_chain -> . lookup SLASH
    (41) lookup_chain -> . lookup SLASH lookup_chain
    (42) lookup -> . lookup_type
    (43) lookup -> . lookup_type QUESTMARK
    (44) lookup_type -> . variable_lookup
    (45) lookup_type -> . backreference
    (46) lookup_type -> . subroutine_call
    (47) variable_lookup -> . VARNAME
    (48) variable_lookup -> . UNDERSCORE
    (49) variable_lookup -> . DOT
    (50) backreference -> . EQUALSIGN VARNAME
    (51) subroutine_call -> . AMPERSAND VARNAME

    VARNAME         shift and go to state 8
    UNDERSCORE      shift and go to state 46
    DOT             shift and go to state 47
    EQUALSIGN       shift and go to state 31
    AMPERSAND       shift and go to state 20

    lookup_type                    shift and go to state 29
    backreference                  shift and go to state 10
    lookup                         shift and go to state 48
    subroutine_call                shift and go to state 25
    lookup_chain                   shift and go to state 49
    variable_lookup                shift and go to state 33

state 22

    (9) global_flags -> LPAREN . FLAGSET RPAREN NEWLINE
    (37) scoped_flags -> LPAREN . FLAGSET RPAREN WHITESPACE

    FLAGSET         shift and go to state 50


state 23

    (19) quantified_expr -> quantifier . WHITESPACE expression
    (20) quantified_expr -> quantifier . COLON charclass

    WHITESPACE      shift and go to state 52
    COLON           shift and go to state 51


state 24

    (25) repeat_range -> numrange . of
    (26) repeat_range -> numrange . backtrack MINUS of
    (30) of -> . WHITESPACE OF
    (29) backtrack -> . WHITESPACE LT LT

    WHITESPACE      shift and go to state 41

    of                             shift and go to state 54
    backtrack                      shift and go to state 53

state 25

    (46) lookup_type -> subroutine_call .

    QUESTMARK       reduce using rule 46 (lookup_type -> subroutine_call .)
    NEWLINE         reduce using rule 46 (lookup_type -> subroutine_call .)
    SLASH           reduce using rule 46 (lookup_type -> subroutine_call .)


state 26

    (35) optionalize -> QUESTMARK . of
    (30) of -> . WHITESPACE OF

    WHITESPACE      shift and go to state 56

    of                             shift and go to state 55

state 27

    (13) expression -> quantified_expr .

    GLOBALMARK      reduce using rule 13 (expression -> quantified_expr .)
    VARNAME         reduce using rule 13 (expression -> quantified_expr .)
    DOT             reduce using rule 13 (expression -> quantified_expr .)
    LT              reduce using rule 13 (expression -> quantified_expr .)
    DEDENT          reduce using rule 13 (expression -> quantified_expr .)
    $end            reduce using rule 13 (expression -> quantified_expr .)


state 28

    (5) oprex -> NEWLINE INDENT . main_expression DEDENT
    (6) main_expression -> . global_flags expression
    (7) main_expression -> . global_flags
    (8) main_expression -> . expression
    (9) global_flags -> . LPAREN FLAGSET RPAREN NEWLINE
    (10) expression -> . string_expr
    (11) expression -> . lookup_expr
    (12) expression -> . flagged_expr
    (13) expression -> . quantified_expr
    (14) string_expr -> . string NEWLINE optional_block
    (38) lookup_expr -> . lookup NEWLINE optional_block
    (39) lookup_expr -> . SLASH lookup_chain NEWLINE optional_block
    (36) flagged_expr -> . scoped_flags expression
    (19) quantified_expr -> . quantifier WHITESPACE expression
    (20) quantified_expr -> . quantifier COLON charclass
    (15) string -> . boundary STRING boundary
    (42) lookup -> . lookup_type
    (43) lookup -> . lookup_type QUESTMARK
    (37) scoped_flags -> . LPAREN FLAGSET RPAREN WHITESPACE
    (21) quantifier -> . repeat_N_times
    (22) quantifier -> . repeat_range
    (23) quantifier -> . optionalize
    (16) boundary -> .
    (17) boundary -> . DOT
    (18) boundary -> . UNDERSCORE
    (44) lookup_type -> . variable_lookup
    (45) lookup_type -> . backreference
    (46) lookup_type -> . subroutine_call
    (24) repeat_N_times -> . NUMBER of
    (25) repeat_range -> . numrange of
    (26) repeat_range -> . numrange backtrack MINUS of
    (27) repeat_range -> . NUMBER backtrack PLUS DOT DOT of
    (28) repeat_range -> . NUMBER backtrack PLUS DOT DOT NUMBER of
    (35) optionalize -> . QUESTMARK of
    (47) variable_lookup -> . VARNAME
    (48) variable_lookup -> . UNDERSCORE
    (49) variable_lookup -> . DOT
    (50) backreference -> . EQUALSIGN VARNAME
    (51) subroutine_call -> . AMPERSAND VARNAME
    (31) numrange -> . DOT DOT
    (32) numrange -> . NUMBER DOT DOT
    (33) numrange -> . DOT DOT NUMBER
    (34) numrange -> . NUMBER DOT DOT NUMBER

    LPAREN          shift and go to state 22
    SLASH           shift and go to state 21
    STRING          reduce using rule 16 (boundary -> .)
    DOT             shift and go to state 13
    UNDERSCORE      shift and go to state 11
    NUMBER          shift and go to state 19
    QUESTMARK       shift and go to state 26
    VARNAME         shift and go to state 8
    EQUALSIGN       shift and go to state 31
    AMPERSAND       shift and go to state 20

    scoped_flags                   shift and go to state 4
    repeat_N_times                 shift and go to state 5
    flagged_expr                   shift and go to state 6
    global_flags                   shift and go to state 7
    repeat_range                   shift and go to state 9
    backreference                  shift and go to state 10
    lookup_expr                    shift and go to state 12
    optionalize                    shift and go to state 14
    main_expression                shift and go to state 57
    string_expr                    shift and go to state 32
    lookup                         shift and go to state 16
    subroutine_call                shift and go to state 25
    string                         shift and go to state 18
    numrange                       shift and go to state 24
    quantifier                     shift and go to state 23
    boundary                       shift and go to state 17
    quantified_expr                shift and go to state 27
    lookup_type                    shift and go to state 29
    expression                     shift and go to state 30
    variable_lookup                shift and go to state 33

state 29

    (42) lookup -> lookup_type .
    (43) lookup -> lookup_type . QUESTMARK

    NEWLINE         reduce using rule 42 (lookup -> lookup_type .)
    SLASH           reduce using rule 42 (lookup -> lookup_type .)
    QUESTMARK       shift and go to state 58


state 30

    (8) main_expression -> expression .

    $end            reduce using rule 8 (main_expression -> expression .)
    DEDENT          reduce using rule 8 (main_expression -> expression .)


state 31

    (50) backreference -> EQUALSIGN . VARNAME

    VARNAME         shift and go to state 59


state 32

    (10) expression -> string_expr .

    GLOBALMARK      reduce using rule 10 (expression -> string_expr .)
    VARNAME         reduce using rule 10 (expression -> string_expr .)
    DOT             reduce using rule 10 (expression -> string_expr .)
    LT              reduce using rule 10 (expression -> string_expr .)
    DEDENT          reduce using rule 10 (expression -> string_expr .)
    $end            reduce using rule 10 (expression -> string_expr .)


state 33

    (44) lookup_type -> variable_lookup .

    QUESTMARK       reduce using rule 44 (lookup_type -> variable_lookup .)
    NEWLINE         reduce using rule 44 (lookup_type -> variable_lookup .)
    SLASH           reduce using rule 44 (lookup_type -> variable_lookup .)


state 34

    (37) scoped_flags -> LPAREN . FLAGSET RPAREN WHITESPACE

    FLAGSET         shift and go to state 60


state 35

    (36) flagged_expr -> scoped_flags expression .

    $end            reduce using rule 36 (flagged_expr -> scoped_flags expression .)
    DEDENT          reduce using rule 36 (flagged_expr -> scoped_flags expression .)
    GLOBALMARK      reduce using rule 36 (flagged_expr -> scoped_flags expression .)
    VARNAME         reduce using rule 36 (flagged_expr -> scoped_flags expression .)
    DOT             reduce using rule 36 (flagged_expr -> scoped_flags expression .)
    LT              reduce using rule 36 (flagged_expr -> scoped_flags expression .)


state 36

    (6) main_expression -> global_flags expression .

    $end            reduce using rule 6 (main_expression -> global_flags expression .)
    DEDENT          reduce using rule 6 (main_expression -> global_flags expression .)


state 37

    (31) numrange -> DOT DOT .
    (33) numrange -> DOT DOT . NUMBER

    WHITESPACE      reduce using rule 31 (numrange -> DOT DOT .)
    NUMBER          shift and go to state 61


state 38

    (38) lookup_expr -> lookup NEWLINE . optional_block
    (61) optional_block -> . begin_block definitions end_block
    (62) optional_block -> .
    (63) begin_block -> . INDENT

    $end            reduce using rule 62 (optional_block -> .)
    DEDENT          reduce using rule 62 (optional_block -> .)
    GLOBALMARK      reduce using rule 62 (optional_block -> .)
    VARNAME         reduce using rule 62 (optional_block -> .)
    DOT             reduce using rule 62 (optional_block -> .)
    LT              reduce using rule 62 (optional_block -> .)
    INDENT          shift and go to state 63

    optional_block                 shift and go to state 64
    begin_block                    shift and go to state 62

state 39

    (15) string -> boundary STRING . boundary
    (16) boundary -> .
    (17) boundary -> . DOT
    (18) boundary -> . UNDERSCORE

    NEWLINE         reduce using rule 16 (boundary -> .)
    DOT             shift and go to state 66
    UNDERSCORE      shift and go to state 67

    boundary                       shift and go to state 65

state 40

    (14) string_expr -> string NEWLINE . optional_block
    (61) optional_block -> . begin_block definitions end_block
    (62) optional_block -> .
    (63) begin_block -> . INDENT

    $end            reduce using rule 62 (optional_block -> .)
    DEDENT          reduce using rule 62 (optional_block -> .)
    GLOBALMARK      reduce using rule 62 (optional_block -> .)
    VARNAME         reduce using rule 62 (optional_block -> .)
    DOT             reduce using rule 62 (optional_block -> .)
    LT              reduce using rule 62 (optional_block -> .)
    INDENT          shift and go to state 63

    begin_block                    shift and go to state 62
    optional_block                 shift and go to state 68

state 41

    (30) of -> WHITESPACE . OF
    (29) backtrack -> WHITESPACE . LT LT

    OF              shift and go to state 69
    LT              shift and go to state 70


state 42

    (27) repeat_range -> NUMBER backtrack . PLUS DOT DOT of
    (28) repeat_range -> NUMBER backtrack . PLUS DOT DOT NUMBER of

    PLUS            shift and go to state 71


state 43

    (24) repeat_N_times -> NUMBER of .

    WHITESPACE      reduce using rule 24 (repeat_N_times -> NUMBER of .)
    COLON           reduce using rule 24 (repeat_N_times -> NUMBER of .)


state 44

    (32) numrange -> NUMBER DOT . DOT
    (34) numrange -> NUMBER DOT . DOT NUMBER

    DOT             shift and go to state 72


state 45

    (51) subroutine_call -> AMPERSAND VARNAME .

    QUESTMARK       reduce using rule 51 (subroutine_call -> AMPERSAND VARNAME .)
    SLASH           reduce using rule 51 (subroutine_call -> AMPERSAND VARNAME .)
    NEWLINE         reduce using rule 51 (subroutine_call -> AMPERSAND VARNAME .)


state 46

    (48) variable_lookup -> UNDERSCORE .

    QUESTMARK       reduce using rule 48 (variable_lookup -> UNDERSCORE .)
    SLASH           reduce using rule 48 (variable_lookup -> UNDERSCORE .)


state 47

    (49) variable_lookup -> DOT .

    QUESTMARK       reduce using rule 49 (variable_lookup -> DOT .)
    SLASH           reduce using rule 49 (variable_lookup -> DOT .)


state 48

    (40) lookup_chain -> lookup . SLASH
    (41) lookup_chain -> lookup . SLASH lookup_chain

    SLASH           shift and go to state 73


state 49

    (39) lookup_expr -> SLASH lookup_chain . NEWLINE optional_block

    NEWLINE         shift and go to state 74


state 50

    (9) global_flags -> LPAREN FLAGSET . RPAREN NEWLINE
    (37) scoped_flags -> LPAREN FLAGSET . RPAREN WHITESPACE

    RPAREN          shift and go to state 75


state 51

    (20) quantified_expr -> quantifier COLON . charclass
    (52) charclass -> . charitems NEWLINE optional_block
    (53) charitems -> . WHITESPACE charitem
    (54) charitems -> . WHITESPACE charitem charitems

    WHITESPACE      shift and go to state 76

    charitems                      shift and go to state 78
    charclass                      shift and go to state 77

state 52

    (19) quantified_expr -> quantifier WHITESPACE . expression
    (10) expression -> . string_expr
    (11) expression -> . lookup_expr
    (12) expression -> . flagged_expr
    (13) expression -> . quantified_expr
    (14) string_expr -> . string NEWLINE optional_block
    (38) lookup_expr -> . lookup NEWLINE optional_block
    (39) lookup_expr -> . SLASH lookup_chain NEWLINE optional_block
    (36) flagged_expr -> . scoped_flags expression
    (19) quantified_expr -> . quantifier WHITESPACE expression
    (20) quantified_expr -> . quantifier COLON charclass
    (15) string -> . boundary STRING boundary
    (42) lookup -> . lookup_type
    (43) lookup -> . lookup_type QUESTMARK
    (37) scoped_flags -> . LPAREN FLAGSET RPAREN WHITESPACE
    (21) quantifier -> . repeat_N_times
    (22) quantifier -> . repeat_range
    (23) quantifier -> . optionalize
    (16) boundary -> .
    (17) boundary -> . DOT
    (18) boundary -> . UNDERSCORE
    (44) lookup_type -> . variable_lookup
    (45) lookup_type -> . backreference
    (46) lookup_type -> . subroutine_call
    (24) repeat_N_times -> . NUMBER of
    (25) repeat_range -> . numrange of
    (26) repeat_range -> . numrange backtrack MINUS of
    (27) repeat_range -> . NUMBER backtrack PLUS DOT DOT of
    (28) repeat_range -> . NUMBER backtrack PLUS DOT DOT NUMBER of
    (35) optionalize -> . QUESTMARK of
    (47) variable_lookup -> . VARNAME
    (48) variable_lookup -> . UNDERSCORE
    (49) variable_lookup -> . DOT
    (50) backreference -> . EQUALSIGN VARNAME
    (51) subroutine_call -> . AMPERSAND VARNAME
    (31) numrange -> . DOT DOT
    (32) numrange -> . NUMBER DOT DOT
    (33) numrange -> . DOT DOT NUMBER
    (34) numrange -> . NUMBER DOT DOT NUMBER

    SLASH           shift and go to state 21
    LPAREN          shift and go to state 34
    STRING          reduce using rule 16 (boundary -> .)
    DOT             shift and go to state 13
    UNDERSCORE      shift and go to state 11
    NUMBER          shift and go to state 19
    QUESTMARK       shift and go to state 26
    VARNAME         shift and go to state 8
    EQUALSIGN       shift and go to state 31
    AMPERSAND       shift and go to state 20

    scoped_flags                   shift and go to state 4
    repeat_N_times                 shift and go to state 5
    flagged_expr                   shift and go to state 6
    repeat_range                   shift and go to state 9
    backreference                  shift and go to state 10
    lookup_expr                    shift and go to state 12
    optionalize                    shift and go to state 14
    string_expr                    shift and go to state 32
    lookup                         shift and go to state 16
    subroutine_call                shift and go to state 25
    string                         shift and go to state 18
    numrange                       shift and go to state 24
    quantifier                     shift and go to state 23
    boundary                       shift and go to state 17
    quantified_expr                shift and go to state 27
    lookup_type                    shift and go to state 29
    expression                     shift and go to state 79
    variable_lookup                shift and go to state 33

state 53

    (26) repeat_range -> numrange backtrack . MINUS of

    MINUS           shift and go to state 80


state 54

    (25) repeat_range -> numrange of .

    WHITESPACE      reduce using rule 25 (repeat_range -> numrange of .)
    COLON           reduce using rule 25 (repeat_range -> numrange of .)


state 55

    (35) optionalize -> QUESTMARK of .

    WHITESPACE      reduce using rule 35 (optionalize -> QUESTMARK of .)
    COLON           reduce using rule 35 (optionalize -> QUESTMARK of .)


state 56

    (30) of -> WHITESPACE . OF

    OF              shift and go to state 69


state 57

    (5) oprex -> NEWLINE INDENT main_expression . DEDENT

    DEDENT          shift and go to state 81


state 58

    (43) lookup -> lookup_type QUESTMARK .

    NEWLINE         reduce using rule 43 (lookup -> lookup_type QUESTMARK .)
    SLASH           reduce using rule 43 (lookup -> lookup_type QUESTMARK .)


state 59

    (50) backreference -> EQUALSIGN VARNAME .

    QUESTMARK       reduce using rule 50 (backreference -> EQUALSIGN VARNAME .)
    SLASH           reduce using rule 50 (backreference -> EQUALSIGN VARNAME .)
    NEWLINE         reduce using rule 50 (backreference -> EQUALSIGN VARNAME .)


state 60

    (37) scoped_flags -> LPAREN FLAGSET . RPAREN WHITESPACE

    RPAREN          shift and go to state 82


state 61

    (33) numrange -> DOT DOT NUMBER .

    WHITESPACE      reduce using rule 33 (numrange -> DOT DOT NUMBER .)


state 62

    (61) optional_block -> begin_block . definitions end_block
    (65) definitions -> . definition
    (66) definitions -> . definition definitions
    (67) definition -> . assignment
    (68) definition -> . GLOBALMARK assignment
    (69) assignment -> . declaration equals assignment
    (70) assignment -> . declaration equals expression
    (71) assignment -> . declaration COLON charclass
    (76) declaration -> . VARNAME
    (77) declaration -> . DOT VARNAME
    (78) declaration -> . LT VARNAME GT
    (79) declaration -> . DOT LT VARNAME GT

    GLOBALMARK      shift and go to state 85
    VARNAME         shift and go to state 86
    DOT             shift and go to state 90
    LT              shift and go to state 87

    definition                     shift and go to state 83
    assignment                     shift and go to state 84
    declaration                    shift and go to state 88
    definitions                    shift and go to state 89

state 63

    (63) begin_block -> INDENT .

    GLOBALMARK      reduce using rule 63 (begin_block -> INDENT .)
    VARNAME         reduce using rule 63 (begin_block -> INDENT .)
    DOT             reduce using rule 63 (begin_block -> INDENT .)
    LT              reduce using rule 63 (begin_block -> INDENT .)


state 64

    (38) lookup_expr -> lookup NEWLINE optional_block .

    $end            reduce using rule 38 (lookup_expr -> lookup NEWLINE optional_block .)
    DEDENT          reduce using rule 38 (lookup_expr -> lookup NEWLINE optional_block .)
    GLOBALMARK      reduce using rule 38 (lookup_expr -> lookup NEWLINE optional_block .)
    VARNAME         reduce using rule 38 (lookup_expr -> lookup NEWLINE optional_block .)
    DOT             reduce using rule 38 (lookup_expr -> lookup NEWLINE optional_block .)
    LT              reduce using rule 38 (lookup_expr -> lookup NEWLINE optional_block .)


state 65

    (15) string -> boundary STRING boundary .

    NEWLINE         reduce using rule 15 (string -> boundary STRING boundary .)


state 66

    (17) boundary -> DOT .

    NEWLINE         reduce using rule 17 (boundary -> DOT .)


state 67

    (18) boundary -> UNDERSCORE .

    NEWLINE         reduce using rule 18 (boundary -> UNDERSCORE .)


state 68

    (14) string_expr -> string NEWLINE optional_block .

    GLOBALMARK      reduce using rule 14 (string_expr -> string NEWLINE optional_block .)
    VARNAME         reduce using rule 14 (string_expr -> string NEWLINE optional_block .)
    DOT             reduce using rule 14 (string_expr -> string NEWLINE optional_block .)
    LT              reduce using rule 14 (string_expr -> string NEWLINE optional_block .)
    DEDENT          reduce using rule 14 (string_expr -> string NEWLINE optional_block .)
    $end            reduce using rule 14 (string_expr -> string NEWLINE optional_block .)


state 69

    (30) of -> WHITESPACE OF .

    WHITESPACE      reduce using rule 30 (of -> WHITESPACE OF .)
    COLON           reduce using rule 30 (of -> WHITESPACE OF .)


state 70

    (29) backtrack -> WHITESPACE LT . LT

    LT              shift and go to state 91


state 71

    (27) repeat_range -> NUMBER backtrack PLUS . DOT DOT of
    (28) repeat_range -> NUMBER backtrack PLUS . DOT DOT NUMBER of

    DOT             shift and go to state 92


state 72

    (32) numrange -> NUMBER DOT DOT .
    (34) numrange -> NUMBER DOT DOT . NUMBER

    WHITESPACE      reduce using rule 32 (numrange -> NUMBER DOT DOT .)
    NUMBER          shift and go to state 93


state 73

    (40) lookup_chain -> lookup SLASH .
    (41) lookup_chain -> lookup SLASH . lookup_chain
    (40) lookup_chain -> . lookup SLASH
    (41) lookup_chain -> . lookup SLASH lookup_chain
    (42) lookup -> . lookup_type
    (43) lookup -> . lookup_type QUESTMARK
    (44) lookup_type -> . variable_lookup
    (45) lookup_type -> . backreference
    (46) lookup_type -> . subroutine_call
    (47) variable_lookup -> . VARNAME
    (48) variable_lookup -> . UNDERSCORE
    (49) variable_lookup -> . DOT
    (50) backreference -> . EQUALSIGN VARNAME
    (51) subroutine_call -> . AMPERSAND VARNAME

    NEWLINE         reduce using rule 40 (lookup_chain -> lookup SLASH .)
    VARNAME         shift and go to state 8
    UNDERSCORE      shift and go to state 46
    DOT             shift and go to state 47
    EQUALSIGN       shift and go to state 31
    AMPERSAND       shift and go to state 20

    lookup_type                    shift and go to state 29
    backreference                  shift and go to state 10
    lookup                         shift and go to state 48
    subroutine_call                shift and go to state 25
    lookup_chain                   shift and go to state 94
    variable_lookup                shift and go to state 33

state 74

    (39) lookup_expr -> SLASH lookup_chain NEWLINE . optional_block
    (61) optional_block -> . begin_block definitions end_block
    (62) optional_block -> .
    (63) begin_block -> . INDENT

    $end            reduce using rule 62 (optional_block -> .)
    DEDENT          reduce using rule 62 (optional_block -> .)
    GLOBALMARK      reduce using rule 62 (optional_block -> .)
    VARNAME         reduce using rule 62 (optional_block -> .)
    DOT             reduce using rule 62 (optional_block -> .)
    LT              reduce using rule 62 (optional_block -> .)
    INDENT          shift and go to state 63

    optional_block                 shift and go to state 95
    begin_block                    shift and go to state 62

state 75

    (9) global_flags -> LPAREN FLAGSET RPAREN . NEWLINE
    (37) scoped_flags -> LPAREN FLAGSET RPAREN . WHITESPACE

    NEWLINE         shift and go to state 96
    WHITESPACE      shift and go to state 97


state 76

    (53) charitems -> WHITESPACE . charitem
    (54) charitems -> WHITESPACE . charitem charitems
    (55) charitem -> . ranged_char
    (56) charitem -> . single_char
    (57) charitem -> . period_char
    (58) ranged_char -> . CHAR DOT DOT CHAR
    (60) single_char -> . CHAR
    (59) period_char -> . DOT

    CHAR            shift and go to state 103
    DOT             shift and go to state 102

    single_char                    shift and go to state 101
    charitem                       shift and go to state 99
    ranged_char                    shift and go to state 100
    period_char                    shift and go to state 98

state 77

    (20) quantified_expr -> quantifier COLON charclass .

    $end            reduce using rule 20 (quantified_expr -> quantifier COLON charclass .)
    DEDENT          reduce using rule 20 (quantified_expr -> quantifier COLON charclass .)
    GLOBALMARK      reduce using rule 20 (quantified_expr -> quantifier COLON charclass .)
    VARNAME         reduce using rule 20 (quantified_expr -> quantifier COLON charclass .)
    DOT             reduce using rule 20 (quantified_expr -> quantifier COLON charclass .)
    LT              reduce using rule 20 (quantified_expr -> quantifier COLON charclass .)


state 78

    (52) charclass -> charitems . NEWLINE optional_block

    NEWLINE         shift and go to state 104


state 79

    (19) quantified_expr -> quantifier WHITESPACE expression .

    $end            reduce using rule 19 (quantified_expr -> quantifier WHITESPACE expression .)
    DEDENT          reduce using rule 19 (quantified_expr -> quantifier WHITESPACE expression .)
    GLOBALMARK      reduce using rule 19 (quantified_expr -> quantifier WHITESPACE expression .)
    VARNAME         reduce using rule 19 (quantified_expr -> quantifier WHITESPACE expression .)
    DOT             reduce using rule 19 (quantified_expr -> quantifier WHITESPACE expression .)
    LT              reduce using rule 19 (quantified_expr -> quantifier WHITESPACE expression .)


state 80

    (26) repeat_range -> numrange backtrack MINUS . of
    (30) of -> . WHITESPACE OF

    WHITESPACE      shift and go to state 56

    of                             shift and go to state 105

state 81

    (5) oprex -> NEWLINE INDENT main_expression DEDENT .

    $end            reduce using rule 5 (oprex -> NEWLINE INDENT main_expression DEDENT .)


state 82

    (37) scoped_flags -> LPAREN FLAGSET RPAREN . WHITESPACE

    WHITESPACE      shift and go to state 97


state 83

    (65) definitions -> definition .
    (66) definitions -> definition . definitions
    (65) definitions -> . definition
    (66) definitions -> . definition definitions
    (67) definition -> . assignment
    (68) definition -> . GLOBALMARK assignment
    (69) assignment -> . declaration equals assignment
    (70) assignment -> . declaration equals expression
    (71) assignment -> . declaration COLON charclass
    (76) declaration -> . VARNAME
    (77) declaration -> . DOT VARNAME
    (78) declaration -> . LT VARNAME GT
    (79) declaration -> . DOT LT VARNAME GT

    DEDENT          reduce using rule 65 (definitions -> definition .)
    GLOBALMARK      shift and go to state 85
    VARNAME         shift and go to state 86
    DOT             shift and go to state 90
    LT              shift and go to state 87

    definition                     shift and go to state 83
    assignment                     shift and go to state 84
    declaration                    shift and go to state 88
    definitions                    shift and go to state 106

state 84

    (67) definition -> assignment .

    GLOBALMARK      reduce using rule 67 (definition -> assignment .)
    VARNAME         reduce using rule 67 (definition -> assignment .)
    DOT             reduce using rule 67 (definition -> assignment .)
    LT              reduce using rule 67 (definition -> assignment .)
    DEDENT          reduce using rule 67 (definition -> assignment .)


state 85

    (68) definition -> GLOBALMARK . assignment
    (69) assignment -> . declaration equals assignment
    (70) assignment -> . declaration equals expression
    (71) assignment -> . declaration COLON charclass
    (76) declaration -> . VARNAME
    (77) declaration -> . DOT VARNAME
    (78) declaration -> . LT VARNAME GT
    (79) declaration -> . DOT LT VARNAME GT

    VARNAME         shift and go to state 86
    DOT             shift and go to state 90
    LT              shift and go to state 87

    assignment                     shift and go to state 107
    declaration                    shift and go to state 88

state 86

    (76) declaration -> VARNAME .

    COLON           reduce using rule 76 (declaration -> VARNAME .)
    EQUALSIGN       reduce using rule 76 (declaration -> VARNAME .)
    WHITESPACE      reduce using rule 76 (declaration -> VARNAME .)


state 87

    (78) declaration -> LT . VARNAME GT

    VARNAME         shift and go to state 108


state 88

    (69) assignment -> declaration . equals assignment
    (70) assignment -> declaration . equals expression
    (71) assignment -> declaration . COLON charclass
    (72) equals -> . EQUALSIGN
    (73) equals -> . WHITESPACE EQUALSIGN
    (74) equals -> . EQUALSIGN WHITESPACE
    (75) equals -> . WHITESPACE EQUALSIGN WHITESPACE

    COLON           shift and go to state 111
    EQUALSIGN       shift and go to state 112
    WHITESPACE      shift and go to state 109

    equals                         shift and go to state 110

state 89

    (61) optional_block -> begin_block definitions . end_block
    (64) end_block -> . DEDENT

    DEDENT          shift and go to state 114

    end_block                      shift and go to state 113

state 90

    (77) declaration -> DOT . VARNAME
    (79) declaration -> DOT . LT VARNAME GT

    VARNAME         shift and go to state 115
    LT              shift and go to state 116


state 91

    (29) backtrack -> WHITESPACE LT LT .

    MINUS           reduce using rule 29 (backtrack -> WHITESPACE LT LT .)
    PLUS            reduce using rule 29 (backtrack -> WHITESPACE LT LT .)


state 92

    (27) repeat_range -> NUMBER backtrack PLUS DOT . DOT of
    (28) repeat_range -> NUMBER backtrack PLUS DOT . DOT NUMBER of

    DOT             shift and go to state 117


state 93

    (34) numrange -> NUMBER DOT DOT NUMBER .

    WHITESPACE      reduce using rule 34 (numrange -> NUMBER DOT DOT NUMBER .)


state 94

    (41) lookup_chain -> lookup SLASH lookup_chain .

    NEWLINE         reduce using rule 41 (lookup_chain -> lookup SLASH lookup_chain .)


state 95

    (39) lookup_expr -> SLASH lookup_chain NEWLINE optional_block .

    $end            reduce using rule 39 (lookup_expr -> SLASH lookup_chain NEWLINE optional_block .)
    DEDENT          reduce using rule 39 (lookup_expr -> SLASH lookup_chain NEWLINE optional_block .)
    GLOBALMARK      reduce using rule 39 (lookup_expr -> SLASH lookup_chain NEWLINE optional_block .)
    VARNAME         reduce using rule 39 (lookup_expr -> SLASH lookup_chain NEWLINE optional_block .)
    DOT             reduce using rule 39 (lookup_expr -> SLASH lookup_chain NEWLINE optional_block .)
    LT              reduce using rule 39 (lookup_expr -> SLASH lookup_chain NEWLINE optional_block .)


state 96

    (9) global_flags -> LPAREN FLAGSET RPAREN NEWLINE .

    SLASH           reduce using rule 9 (global_flags -> LPAREN FLAGSET RPAREN NEWLINE .)
    LPAREN          reduce using rule 9 (global_flags -> LPAREN FLAGSET RPAREN NEWLINE .)
    DOT             reduce using rule 9 (global_flags -> LPAREN FLAGSET RPAREN NEWLINE .)
    UNDERSCORE      reduce using rule 9 (global_flags -> LPAREN FLAGSET RPAREN NEWLINE .)
    NUMBER          reduce using rule 9 (global_flags -> LPAREN FLAGSET RPAREN NEWLINE .)
    QUESTMARK       reduce using rule 9 (global_flags -> LPAREN FLAGSET RPAREN NEWLINE .)
    VARNAME         reduce using rule 9 (global_flags -> LPAREN FLAGSET RPAREN NEWLINE .)
    EQUALSIGN       reduce using rule 9 (global_flags -> LPAREN FLAGSET RPAREN NEWLINE .)
    AMPERSAND       reduce using rule 9 (global_flags -> LPAREN FLAGSET RPAREN NEWLINE .)
    STRING          reduce using rule 9 (global_flags -> LPAREN FLAGSET RPAREN NEWLINE .)
    $end            reduce using rule 9 (global_flags -> LPAREN FLAGSET RPAREN NEWLINE .)
    DEDENT          reduce using rule 9 (global_flags -> LPAREN FLAGSET RPAREN NEWLINE .)


state 97

    (37) scoped_flags -> LPAREN FLAGSET RPAREN WHITESPACE .

    SLASH           reduce using rule 37 (scoped_flags -> LPAREN FLAGSET RPAREN WHITESPACE .)
    LPAREN          reduce using rule 37 (scoped_flags -> LPAREN FLAGSET RPAREN WHITESPACE .)
    DOT             reduce using rule 37 (scoped_flags -> LPAREN FLAGSET RPAREN WHITESPACE .)
    UNDERSCORE      reduce using rule 37 (scoped_flags -> LPAREN FLAGSET RPAREN WHITESPACE .)
    NUMBER          reduce using rule 37 (scoped_flags -> LPAREN FLAGSET RPAREN WHITESPACE .)
    QUESTMARK       reduce using rule 37 (scoped_flags -> LPAREN FLAGSET RPAREN WHITESPACE .)
    VARNAME         reduce using rule 37 (scoped_flags -> LPAREN FLAGSET RPAREN WHITESPACE .)
    EQUALSIGN       reduce using rule 37 (scoped_flags -> LPAREN FLAGSET RPAREN WHITESPACE .)
    AMPERSAND       reduce using rule 37 (scoped_flags -> LPAREN FLAGSET RPAREN WHITESPACE .)
    STRING          reduce using rule 37 (scoped_flags -> LPAREN FLAGSET RPAREN WHITESPACE .)


state 98

    (57) charitem -> period_char .

    WHITESPACE      reduce using rule 57 (charitem -> period_char .)
    NEWLINE         reduce using rule 57 (charitem -> period_char .)


state 99

    (53) charitems -> WHITESPACE charitem .
    (54) charitems -> WHITESPACE charitem . charitems
    (53) charitems -> . WHITESPACE charitem
    (54) charitems -> . WHITESPACE charitem charitems

    NEWLINE         reduce using rule 53 (charitems -> WHITESPACE charitem .)
    WHITESPACE      shift and go to state 76

    charitems                      shift and go to state 118

state 100

    (55) charitem -> ranged_char .

    WHITESPACE      reduce using rule 55 (charitem -> ranged_char .)
    NEWLINE         reduce using rule 55 (charitem -> ranged_char .)


state 101

    (56) charitem -> single_char .

    WHITESPACE      reduce using rule 56 (charitem -> single_char .)
    NEWLINE         reduce using rule 56 (charitem -> single_char .)


state 102

    (59) period_char -> DOT .

    WHITESPACE      reduce using rule 59 (period_char -> DOT .)
    NEWLINE         reduce using rule 59 (period_char -> DOT .)


state 103

    (58) ranged_char -> CHAR . DOT DOT CHAR
    (60) single_char -> CHAR .

    DOT             shift and go to state 119
    WHITESPACE      reduce using rule 60 (single_char -> CHAR .)
    NEWLINE         reduce using rule 60 (single_char -> CHAR .)


state 104

    (52) charclass -> charitems NEWLINE . optional_block
    (61) optional_block -> . begin_block definitions end_block
    (62) optional_block -> .
    (63) begin_block -> . INDENT

    $end            reduce using rule 62 (optional_block -> .)
    DEDENT          reduce using rule 62 (optional_block -> .)
    GLOBALMARK      reduce using rule 62 (optional_block -> .)
    VARNAME         reduce using rule 62 (optional_block -> .)
    DOT             reduce using rule 62 (optional_block -> .)
    LT              reduce using rule 62 (optional_block -> .)
    INDENT          shift and go to state 63

    begin_block                    shift and go to state 62
    optional_block                 shift and go to state 120

state 105

    (26) repeat_range -> numrange backtrack MINUS of .

    WHITESPACE      reduce using rule 26 (repeat_range -> numrange backtrack MINUS of .)
    COLON           reduce using rule 26 (repeat_range -> numrange backtrack MINUS of .)


state 106

    (66) definitions -> definition definitions .

    DEDENT          reduce using rule 66 (definitions -> definition definitions .)


state 107

    (68) definition -> GLOBALMARK assignment .

    GLOBALMARK      reduce using rule 68 (definition -> GLOBALMARK assignment .)
    VARNAME         reduce using rule 68 (definition -> GLOBALMARK assignment .)
    DOT             reduce using rule 68 (definition -> GLOBALMARK assignment .)
    LT              reduce using rule 68 (definition -> GLOBALMARK assignment .)
    DEDENT          reduce using rule 68 (definition -> GLOBALMARK assignment .)


state 108

    (78) declaration -> LT VARNAME . GT

    GT              shift and go to state 121


state 109

    (73) equals -> WHITESPACE . EQUALSIGN
    (75) equals -> WHITESPACE . EQUALSIGN WHITESPACE

    EQUALSIGN       shift and go to state 122


state 110

    (69) assignment -> declaration equals . assignment
    (70) assignment -> declaration equals . expression
    (69) assignment -> . declaration equals assignment
    (70) assignment -> . declaration equals expression
    (71) assignment -> . declaration COLON charclass
    (10) expression -> . string_expr
    (11) expression -> . lookup_expr
    (12) expression -> . flagged_expr
    (13) expression -> . quantified_expr
    (76) declaration -> . VARNAME
    (77) declaration -> . DOT VARNAME
    (78) declaration -> . LT VARNAME GT
    (79) declaration -> . DOT LT VARNAME GT
    (14) string_expr -> . string NEWLINE optional_block
    (38) lookup_expr -> . lookup NEWLINE optional_block
    (39) lookup_expr -> . SLASH lookup_chain NEWLINE optional_block
    (36) flagged_expr -> . scoped_flags expression
    (19) quantified_expr -> . quantifier WHITESPACE expression
    (20) quantified_expr -> . quantifier COLON charclass
    (15) string -> . boundary STRING boundary
    (42) lookup -> . lookup_type
    (43) lookup -> . lookup_type QUESTMARK
    (37) scoped_flags -> . LPAREN FLAGSET RPAREN WHITESPACE
    (21) quantifier -> . repeat_N_times
    (22) quantifier -> . repeat_range
    (23) quantifier -> . optionalize
    (16) boundary -> .
    (17) boundary -> . DOT
    (18) boundary -> . UNDERSCORE
    (44) lookup_type -> . variable_lookup
    (45) lookup_type -> . backreference
    (46) lookup_type -> . subroutine_call
    (24) repeat_N_times -> . NUMBER of
    (25) repeat_range -> . numrange of
    (26) repeat_range -> . numrange backtrack MINUS of
    (27) repeat_range -> . NUMBER backtrack PLUS DOT DOT of
    (28) repeat_range -> . NUMBER backtrack PLUS DOT DOT NUMBER of
    (35) optionalize -> . QUESTMARK of
    (47) variable_lookup -> . VARNAME
    (48) variable_lookup -> . UNDERSCORE
    (49) variable_lookup -> . DOT
    (50) backreference -> . EQUALSIGN VARNAME
    (51) subroutine_call -> . AMPERSAND VARNAME
    (31) numrange -> . DOT DOT
    (32) numrange -> . NUMBER DOT DOT
    (33) numrange -> . DOT DOT NUMBER
    (34) numrange -> . NUMBER DOT DOT NUMBER

    VARNAME         shift and go to state 123
    DOT             shift and go to state 124
    LT              shift and go to state 87
    SLASH           shift and go to state 21
    LPAREN          shift and go to state 34
    STRING          reduce using rule 16 (boundary -> .)
    UNDERSCORE      shift and go to state 11
    NUMBER          shift and go to state 19
    QUESTMARK       shift and go to state 26
    EQUALSIGN       shift and go to state 31
    AMPERSAND       shift and go to state 20

    scoped_flags                   shift and go to state 4
    repeat_N_times                 shift and go to state 5
    flagged_expr                   shift and go to state 6
    repeat_range                   shift and go to state 9
    backreference                  shift and go to state 10
    lookup_expr                    shift and go to state 12
    optionalize                    shift and go to state 14
    string_expr                    shift and go to state 32
    lookup                         shift and go to state 16
    boundary                       shift and go to state 17
    string                         shift and go to state 18
    assignment                     shift and go to state 125
    numrange                       shift and go to state 24
    declaration                    shift and go to state 88
    quantifier                     shift and go to state 23
    subroutine_call                shift and go to state 25
    quantified_expr                shift and go to state 27
    lookup_type                    shift and go to state 29
    expression                     shift and go to state 126
    variable_lookup                shift and go to state 33

state 111

    (71) assignment -> declaration COLON . charclass
    (52) charclass -> . charitems NEWLINE optional_block
    (53) charitems -> . WHITESPACE charitem
    (54) charitems -> . WHITESPACE charitem charitems

    WHITESPACE      shift and go to state 76

    charitems                      shift and go to state 78
    charclass                      shift and go to state 127

state 112

    (72) equals -> EQUALSIGN .
    (74) equals -> EQUALSIGN . WHITESPACE

    VARNAME         reduce using rule 72 (equals -> EQUALSIGN .)
    DOT             reduce using rule 72 (equals -> EQUALSIGN .)
    LT              reduce using rule 72 (equals -> EQUALSIGN .)
    SLASH           reduce using rule 72 (equals -> EQUALSIGN .)
    LPAREN          reduce using rule 72 (equals -> EQUALSIGN .)
    UNDERSCORE      reduce using rule 72 (equals -> EQUALSIGN .)
    NUMBER          reduce using rule 72 (equals -> EQUALSIGN .)
    QUESTMARK       reduce using rule 72 (equals -> EQUALSIGN .)
    EQUALSIGN       reduce using rule 72 (equals -> EQUALSIGN .)
    AMPERSAND       reduce using rule 72 (equals -> EQUALSIGN .)
    STRING          reduce using rule 72 (equals -> EQUALSIGN .)
    WHITESPACE      shift and go to state 128


state 113

    (61) optional_block -> begin_block definitions end_block .

    $end            reduce using rule 61 (optional_block -> begin_block definitions end_block .)
    DEDENT          reduce using rule 61 (optional_block -> begin_block definitions end_block .)
    GLOBALMARK      reduce using rule 61 (optional_block -> begin_block definitions end_block .)
    VARNAME         reduce using rule 61 (optional_block -> begin_block definitions end_block .)
    DOT             reduce using rule 61 (optional_block -> begin_block definitions end_block .)
    LT              reduce using rule 61 (optional_block -> begin_block definitions end_block .)


state 114

    (64) end_block -> DEDENT .

    $end            reduce using rule 64 (end_block -> DEDENT .)
    DEDENT          reduce using rule 64 (end_block -> DEDENT .)
    GLOBALMARK      reduce using rule 64 (end_block -> DEDENT .)
    VARNAME         reduce using rule 64 (end_block -> DEDENT .)
    DOT             reduce using rule 64 (end_block -> DEDENT .)
    LT              reduce using rule 64 (end_block -> DEDENT .)


state 115

    (77) declaration -> DOT VARNAME .

    COLON           reduce using rule 77 (declaration -> DOT VARNAME .)
    EQUALSIGN       reduce using rule 77 (declaration -> DOT VARNAME .)
    WHITESPACE      reduce using rule 77 (declaration -> DOT VARNAME .)


state 116

    (79) declaration -> DOT LT . VARNAME GT

    VARNAME         shift and go to state 129


state 117

    (27) repeat_range -> NUMBER backtrack PLUS DOT DOT . of
    (28) repeat_range -> NUMBER backtrack PLUS DOT DOT . NUMBER of
    (30) of -> . WHITESPACE OF

    NUMBER          shift and go to state 131
    WHITESPACE      shift and go to state 56

    of                             shift and go to state 130

state 118

    (54) charitems -> WHITESPACE charitem charitems .

    NEWLINE         reduce using rule 54 (charitems -> WHITESPACE charitem charitems .)


state 119

    (58) ranged_char -> CHAR DOT . DOT CHAR

    DOT             shift and go to state 132


state 120

    (52) charclass -> charitems NEWLINE optional_block .

    GLOBALMARK      reduce using rule 52 (charclass -> charitems NEWLINE optional_block .)
    VARNAME         reduce using rule 52 (charclass -> charitems NEWLINE optional_block .)
    DOT             reduce using rule 52 (charclass -> charitems NEWLINE optional_block .)
    LT              reduce using rule 52 (charclass -> charitems NEWLINE optional_block .)
    DEDENT          reduce using rule 52 (charclass -> charitems NEWLINE optional_block .)
    $end            reduce using rule 52 (charclass -> charitems NEWLINE optional_block .)


state 121

    (78) declaration -> LT VARNAME GT .

    COLON           reduce using rule 78 (declaration -> LT VARNAME GT .)
    EQUALSIGN       reduce using rule 78 (declaration -> LT VARNAME GT .)
    WHITESPACE      reduce using rule 78 (declaration -> LT VARNAME GT .)


state 122

    (73) equals -> WHITESPACE EQUALSIGN .
    (75) equals -> WHITESPACE EQUALSIGN . WHITESPACE

    VARNAME         reduce using rule 73 (equals -> WHITESPACE EQUALSIGN .)
    DOT             reduce using rule 73 (equals -> WHITESPACE EQUALSIGN .)
    LT              reduce using rule 73 (equals -> WHITESPACE EQUALSIGN .)
    SLASH           reduce using rule 73 (equals -> WHITESPACE EQUALSIGN .)
    LPAREN          reduce using rule 73 (equals -> WHITESPACE EQUALSIGN .)
    UNDERSCORE      reduce using rule 73 (equals -> WHITESPACE EQUALSIGN .)
    NUMBER          reduce using rule 73 (equals -> WHITESPACE EQUALSIGN .)
    QUESTMARK       reduce using rule 73 (equals -> WHITESPACE EQUALSIGN .)
    EQUALSIGN       reduce using rule 73 (equals -> WHITESPACE EQUALSIGN .)
    AMPERSAND       reduce using rule 73 (equals -> WHITESPACE EQUALSIGN .)
    STRING          reduce using rule 73 (equals -> WHITESPACE EQUALSIGN .)
    WHITESPACE      shift and go to state 133


state 123

    (76) declaration -> VARNAME .
    (47) variable_lookup -> VARNAME .

    COLON           reduce using rule 76 (declaration -> VARNAME .)
    EQUALSIGN       reduce using rule 76 (declaration -> VARNAME .)
    WHITESPACE      reduce using rule 76 (declaration -> VARNAME .)
    QUESTMARK       reduce using rule 47 (variable_lookup -> VARNAME .)
    NEWLINE         reduce using rule 47 (variable_lookup -> VARNAME .)


state 124

    (77) declaration -> DOT . VARNAME
    (79) declaration -> DOT . LT VARNAME GT
    (17) boundary -> DOT .
    (49) variable_lookup -> DOT .
    (31) numrange -> DOT . DOT
    (33) numrange -> DOT . DOT NUMBER

    VARNAME         shift and go to state 115
    LT              shift and go to state 116
    STRING          reduce using rule 17 (boundary -> DOT .)
    QUESTMARK       reduce using rule 49 (variable_lookup -> DOT .)
    NEWLINE         reduce using rule 49 (variable_lookup -> DOT .)
    DOT             shift and go to state 37


state 125

    (69) assignment -> declaration equals assignment .

    GLOBALMARK      reduce using rule 69 (assignment -> declaration equals assignment .)
    VARNAME         reduce using rule 69 (assignment -> declaration equals assignment .)
    DOT             reduce using rule 69 (assignment -> declaration equals assignment .)
    LT              reduce using rule 69 (assignment -> declaration equals assignment .)
    DEDENT          reduce using rule 69 (assignment -> declaration equals assignment .)


state 126

    (70) assignment -> declaration equals expression .

    GLOBALMARK      reduce using rule 70 (assignment -> declaration equals expression .)
    VARNAME         reduce using rule 70 (assignment -> declaration equals expression .)
    DOT             reduce using rule 70 (assignment -> declaration equals expression .)
    LT              reduce using rule 70 (assignment -> declaration equals expression .)
    DEDENT          reduce using rule 70 (assignment -> declaration equals expression .)


state 127

    (71) assignment -> declaration COLON charclass .

    GLOBALMARK      reduce using rule 71 (assignment -> declaration COLON charclass .)
    VARNAME         reduce using rule 71 (assignment -> declaration COLON charclass .)
    DOT             reduce using rule 71 (assignment -> declaration COLON charclass .)
    LT              reduce using rule 71 (assignment -> declaration COLON charclass .)
    DEDENT          reduce using rule 71 (assignment -> declaration COLON charclass .)


state 128

    (74) equals -> EQUALSIGN WHITESPACE .

    VARNAME         reduce using rule 74 (equals -> EQUALSIGN WHITESPACE .)
    DOT             reduce using rule 74 (equals -> EQUALSIGN WHITESPACE .)
    LT              reduce using rule 74 (equals -> EQUALSIGN WHITESPACE .)
    SLASH           reduce using rule 74 (equals -> EQUALSIGN WHITESPACE .)
    LPAREN          reduce using rule 74 (equals -> EQUALSIGN WHITESPACE .)
    UNDERSCORE      reduce using rule 74 (equals -> EQUALSIGN WHITESPACE .)
    NUMBER          reduce using rule 74 (equals -> EQUALSIGN WHITESPACE .)
    QUESTMARK       reduce using rule 74 (equals -> EQUALSIGN WHITESPACE .)
    EQUALSIGN       reduce using rule 74 (equals -> EQUALSIGN WHITESPACE .)
    AMPERSAND       reduce using rule 74 (equals -> EQUALSIGN WHITESPACE .)
    STRING          reduce using rule 74 (equals -> EQUALSIGN WHITESPACE .)


state 129

    (79) declaration -> DOT LT VARNAME . GT

    GT              shift and go to state 134


state 130

    (27) repeat_range -> NUMBER backtrack PLUS DOT DOT of .

    WHITESPACE      reduce using rule 27 (repeat_range -> NUMBER backtrack PLUS DOT DOT of .)
    COLON           reduce using rule 27 (repeat_range -> NUMBER backtrack PLUS DOT DOT of .)


state 131

    (28) repeat_range -> NUMBER backtrack PLUS DOT DOT NUMBER . of
    (30) of -> . WHITESPACE OF

    WHITESPACE      shift and go to state 56

    of                             shift and go to state 135

state 132

    (58) ranged_char -> CHAR DOT DOT . CHAR

    CHAR            shift and go to state 136


state 133

    (75) equals -> WHITESPACE EQUALSIGN WHITESPACE .

    VARNAME         reduce using rule 75 (equals -> WHITESPACE EQUALSIGN WHITESPACE .)
    DOT             reduce using rule 75 (equals -> WHITESPACE EQUALSIGN WHITESPACE .)
    LT              reduce using rule 75 (equals -> WHITESPACE EQUALSIGN WHITESPACE .)
    SLASH           reduce using rule 75 (equals -> WHITESPACE EQUALSIGN WHITESPACE .)
    LPAREN          reduce using rule 75 (equals -> WHITESPACE EQUALSIGN WHITESPACE .)
    UNDERSCORE      reduce using rule 75 (equals -> WHITESPACE EQUALSIGN WHITESPACE .)
    NUMBER          reduce using rule 75 (equals -> WHITESPACE EQUALSIGN WHITESPACE .)
    QUESTMARK       reduce using rule 75 (equals -> WHITESPACE EQUALSIGN WHITESPACE .)
    EQUALSIGN       reduce using rule 75 (equals -> WHITESPACE EQUALSIGN WHITESPACE .)
    AMPERSAND       reduce using rule 75 (equals -> WHITESPACE EQUALSIGN WHITESPACE .)
    STRING          reduce using rule 75 (equals -> WHITESPACE EQUALSIGN WHITESPACE .)


state 134

    (79) declaration -> DOT LT VARNAME GT .

    COLON           reduce using rule 79 (declaration -> DOT LT VARNAME GT .)
    EQUALSIGN       reduce using rule 79 (declaration -> DOT LT VARNAME GT .)
    WHITESPACE      reduce using rule 79 (declaration -> DOT LT VARNAME GT .)


state 135

    (28) repeat_range -> NUMBER backtrack PLUS DOT DOT NUMBER of .

    WHITESPACE      reduce using rule 28 (repeat_range -> NUMBER backtrack PLUS DOT DOT NUMBER of .)
    COLON           reduce using rule 28 (repeat_range -> NUMBER backtrack PLUS DOT DOT NUMBER of .)


state 136

    (58) ranged_char -> CHAR DOT DOT CHAR .

    WHITESPACE      reduce using rule 58 (ranged_char -> CHAR DOT DOT CHAR .)
    NEWLINE         reduce using rule 58 (ranged_char -> CHAR DOT DOT CHAR .)

