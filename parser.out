Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> oprex
Rule 1     oprex -> <empty>
Rule 2     oprex -> WHITESPACE
Rule 3     oprex -> NEWLINE
Rule 4     oprex -> NEWLINE main_expression
Rule 5     oprex -> NEWLINE INDENT main_expression DEDENT
Rule 6     main_expression -> global_flags expression
Rule 7     main_expression -> global_flags
Rule 8     main_expression -> expression
Rule 9     global_flags -> LPAREN FLAGSET RPAREN NEWLINE
Rule 10    expression -> string_expr
Rule 11    expression -> lookup_expr
Rule 12    expression -> flagged_expr
Rule 13    expression -> quantified_expr
Rule 14    string_expr -> str_b STRING str_b NEWLINE
Rule 15    str_b -> <empty>
Rule 16    str_b -> DOT
Rule 17    str_b -> UNDERSCORE
Rule 18    quantified_expr -> quantifier WHITESPACE expression
Rule 19    quantified_expr -> quantifier COLON charclass
Rule 20    quantifier -> repeat_N_times
Rule 21    quantifier -> repeat_range
Rule 22    quantifier -> optionalize
Rule 23    repeat_N_times -> NUMBER of
Rule 24    repeat_range -> numrange of
Rule 25    repeat_range -> numrange backtrack MINUS of
Rule 26    repeat_range -> NUMBER backtrack PLUS DOT DOT of
Rule 27    repeat_range -> NUMBER backtrack PLUS DOT DOT NUMBER of
Rule 28    backtrack -> WHITESPACE LT LT
Rule 29    of -> WHITESPACE OF
Rule 30    numrange -> DOT DOT
Rule 31    numrange -> NUMBER DOT DOT
Rule 32    numrange -> DOT DOT NUMBER
Rule 33    numrange -> NUMBER DOT DOT NUMBER
Rule 34    optionalize -> QUESTMARK of
Rule 35    alternation_expr -> ALTBEGIN NEWLINE alternatives ALTEND
Rule 36    alternatives -> alternative
Rule 37    alternatives -> alternative alternatives
Rule 38    alternative -> OR
Rule 39    flagged_expr -> scoped_flags expression
Rule 40    scoped_flags -> LPAREN FLAGSET RPAREN WHITESPACE
Rule 41    lookup_expr -> lookup NEWLINE optional_block
Rule 42    lookup_expr -> SLASH lookup_chain NEWLINE optional_block
Rule 43    lookup_chain -> lookup SLASH
Rule 44    lookup_chain -> lookup SLASH lookup_chain
Rule 45    lookup -> lookup_type
Rule 46    lookup -> lookup_type QUESTMARK
Rule 47    lookup_type -> variable_lookup
Rule 48    lookup_type -> backreference
Rule 49    lookup_type -> subroutine_call
Rule 50    variable_lookup -> VARNAME
Rule 51    variable_lookup -> UNDERSCORE
Rule 52    variable_lookup -> DOT
Rule 53    backreference -> EQUALSIGN VARNAME
Rule 54    subroutine_call -> AMPERSAND VARNAME
Rule 55    charclass -> charitems NEWLINE optional_block
Rule 56    charitems -> WHITESPACE charitem
Rule 57    charitems -> WHITESPACE charitem charitems
Rule 58    charitem -> ranged_char
Rule 59    charitem -> single_char
Rule 60    charitem -> period_char
Rule 61    ranged_char -> CHAR DOT DOT CHAR
Rule 62    period_char -> DOT
Rule 63    single_char -> CHAR
Rule 64    optional_block -> begin_block definitions end_block
Rule 65    optional_block -> <empty>
Rule 66    begin_block -> INDENT
Rule 67    end_block -> DEDENT
Rule 68    definitions -> definition
Rule 69    definitions -> definition definitions
Rule 70    definition -> assignment
Rule 71    definition -> GLOBALMARK assignment
Rule 72    assignment -> declaration equals assignment
Rule 73    assignment -> declaration equals expression
Rule 74    assignment -> declaration COLON charclass
Rule 75    equals -> EQUALSIGN
Rule 76    equals -> WHITESPACE EQUALSIGN
Rule 77    equals -> EQUALSIGN WHITESPACE
Rule 78    equals -> WHITESPACE EQUALSIGN WHITESPACE
Rule 79    declaration -> VARNAME
Rule 80    declaration -> DOT VARNAME
Rule 81    declaration -> LT VARNAME GT
Rule 82    declaration -> DOT LT VARNAME GT

Terminals, with rules where they appear

ALTBEGIN             : 35
ALTEND               : 35
AMPERSAND            : 54
CHAR                 : 61 61 63
COLON                : 19 74
DEDENT               : 5 67
DOT                  : 16 26 26 27 27 30 30 31 31 32 32 33 33 52 61 61 62 80 82
EQUALSIGN            : 53 75 76 77 78
FLAGSET              : 9 40
GLOBALMARK           : 71
GT                   : 81 82
INDENT               : 5 66
LPAREN               : 9 40
LT                   : 28 28 81 82
MINUS                : 25
NEWLINE              : 3 4 5 9 14 35 41 42 55
NUMBER               : 23 26 27 27 31 32 33 33
OF                   : 29
OR                   : 38
PLUS                 : 26 27
QUESTMARK            : 34 46
RPAREN               : 9 40
SLASH                : 42 43 44
STRING               : 14
UNDERSCORE           : 17 51
VARNAME              : 50 53 54 79 80 81 82
WHITESPACE           : 2 18 28 29 40 56 57 76 77 78 78
error                : 

Nonterminals, with rules where they appear

alternation_expr     : 
alternative          : 36 37
alternatives         : 35 37
assignment           : 70 71 72
backreference        : 48
backtrack            : 25 26 27
begin_block          : 64
charclass            : 19 74
charitem             : 56 57
charitems            : 55 57
declaration          : 72 73 74
definition           : 68 69
definitions          : 64 69
end_block            : 64
equals               : 72 73
expression           : 6 8 18 39 73
flagged_expr         : 12
global_flags         : 6 7
lookup               : 41 43 44
lookup_chain         : 42 44
lookup_expr          : 11
lookup_type          : 45 46
main_expression      : 4 5
numrange             : 24 25
of                   : 23 24 25 26 27 34
oprex                : 0
optional_block       : 41 42 55
optionalize          : 22
period_char          : 60
quantified_expr      : 13
quantifier           : 18 19
ranged_char          : 58
repeat_N_times       : 20
repeat_range         : 21
scoped_flags         : 39
single_char          : 59
str_b                : 14 14
string_expr          : 10
subroutine_call      : 49
variable_lookup      : 47

Parsing method: LALR

state 0

    (0) S' -> . oprex
    (1) oprex -> .
    (2) oprex -> . WHITESPACE
    (3) oprex -> . NEWLINE
    (4) oprex -> . NEWLINE main_expression
    (5) oprex -> . NEWLINE INDENT main_expression DEDENT

    $end            reduce using rule 1 (oprex -> .)
    WHITESPACE      shift and go to state 2
    NEWLINE         shift and go to state 3

    oprex                          shift and go to state 1

state 1

    (0) S' -> oprex .



state 2

    (2) oprex -> WHITESPACE .

    $end            reduce using rule 2 (oprex -> WHITESPACE .)


state 3

    (3) oprex -> NEWLINE .
    (4) oprex -> NEWLINE . main_expression
    (5) oprex -> NEWLINE . INDENT main_expression DEDENT
    (6) main_expression -> . global_flags expression
    (7) main_expression -> . global_flags
    (8) main_expression -> . expression
    (9) global_flags -> . LPAREN FLAGSET RPAREN NEWLINE
    (10) expression -> . string_expr
    (11) expression -> . lookup_expr
    (12) expression -> . flagged_expr
    (13) expression -> . quantified_expr
    (14) string_expr -> . str_b STRING str_b NEWLINE
    (41) lookup_expr -> . lookup NEWLINE optional_block
    (42) lookup_expr -> . SLASH lookup_chain NEWLINE optional_block
    (39) flagged_expr -> . scoped_flags expression
    (18) quantified_expr -> . quantifier WHITESPACE expression
    (19) quantified_expr -> . quantifier COLON charclass
    (15) str_b -> .
    (16) str_b -> . DOT
    (17) str_b -> . UNDERSCORE
    (45) lookup -> . lookup_type
    (46) lookup -> . lookup_type QUESTMARK
    (40) scoped_flags -> . LPAREN FLAGSET RPAREN WHITESPACE
    (20) quantifier -> . repeat_N_times
    (21) quantifier -> . repeat_range
    (22) quantifier -> . optionalize
    (47) lookup_type -> . variable_lookup
    (48) lookup_type -> . backreference
    (49) lookup_type -> . subroutine_call
    (23) repeat_N_times -> . NUMBER of
    (24) repeat_range -> . numrange of
    (25) repeat_range -> . numrange backtrack MINUS of
    (26) repeat_range -> . NUMBER backtrack PLUS DOT DOT of
    (27) repeat_range -> . NUMBER backtrack PLUS DOT DOT NUMBER of
    (34) optionalize -> . QUESTMARK of
    (50) variable_lookup -> . VARNAME
    (51) variable_lookup -> . UNDERSCORE
    (52) variable_lookup -> . DOT
    (53) backreference -> . EQUALSIGN VARNAME
    (54) subroutine_call -> . AMPERSAND VARNAME
    (30) numrange -> . DOT DOT
    (31) numrange -> . NUMBER DOT DOT
    (32) numrange -> . DOT DOT NUMBER
    (33) numrange -> . NUMBER DOT DOT NUMBER

    $end            reduce using rule 3 (oprex -> NEWLINE .)
    INDENT          shift and go to state 27
    LPAREN          shift and go to state 22
    SLASH           shift and go to state 21
    STRING          reduce using rule 15 (str_b -> .)
    DOT             shift and go to state 13
    UNDERSCORE      shift and go to state 11
    NUMBER          shift and go to state 19
    QUESTMARK       shift and go to state 25
    VARNAME         shift and go to state 8
    EQUALSIGN       shift and go to state 30
    AMPERSAND       shift and go to state 20

    scoped_flags                   shift and go to state 4
    repeat_N_times                 shift and go to state 5
    flagged_expr                   shift and go to state 6
    global_flags                   shift and go to state 7
    repeat_range                   shift and go to state 9
    backreference                  shift and go to state 10
    lookup_expr                    shift and go to state 12
    optionalize                    shift and go to state 14
    main_expression                shift and go to state 15
    string_expr                    shift and go to state 31
    str_b                          shift and go to state 16
    lookup                         shift and go to state 17
    subroutine_call                shift and go to state 18
    numrange                       shift and go to state 24
    quantifier                     shift and go to state 23
    quantified_expr                shift and go to state 26
    lookup_type                    shift and go to state 28
    expression                     shift and go to state 29
    variable_lookup                shift and go to state 32

state 4

    (39) flagged_expr -> scoped_flags . expression
    (10) expression -> . string_expr
    (11) expression -> . lookup_expr
    (12) expression -> . flagged_expr
    (13) expression -> . quantified_expr
    (14) string_expr -> . str_b STRING str_b NEWLINE
    (41) lookup_expr -> . lookup NEWLINE optional_block
    (42) lookup_expr -> . SLASH lookup_chain NEWLINE optional_block
    (39) flagged_expr -> . scoped_flags expression
    (18) quantified_expr -> . quantifier WHITESPACE expression
    (19) quantified_expr -> . quantifier COLON charclass
    (15) str_b -> .
    (16) str_b -> . DOT
    (17) str_b -> . UNDERSCORE
    (45) lookup -> . lookup_type
    (46) lookup -> . lookup_type QUESTMARK
    (40) scoped_flags -> . LPAREN FLAGSET RPAREN WHITESPACE
    (20) quantifier -> . repeat_N_times
    (21) quantifier -> . repeat_range
    (22) quantifier -> . optionalize
    (47) lookup_type -> . variable_lookup
    (48) lookup_type -> . backreference
    (49) lookup_type -> . subroutine_call
    (23) repeat_N_times -> . NUMBER of
    (24) repeat_range -> . numrange of
    (25) repeat_range -> . numrange backtrack MINUS of
    (26) repeat_range -> . NUMBER backtrack PLUS DOT DOT of
    (27) repeat_range -> . NUMBER backtrack PLUS DOT DOT NUMBER of
    (34) optionalize -> . QUESTMARK of
    (50) variable_lookup -> . VARNAME
    (51) variable_lookup -> . UNDERSCORE
    (52) variable_lookup -> . DOT
    (53) backreference -> . EQUALSIGN VARNAME
    (54) subroutine_call -> . AMPERSAND VARNAME
    (30) numrange -> . DOT DOT
    (31) numrange -> . NUMBER DOT DOT
    (32) numrange -> . DOT DOT NUMBER
    (33) numrange -> . NUMBER DOT DOT NUMBER

    SLASH           shift and go to state 21
    STRING          reduce using rule 15 (str_b -> .)
    DOT             shift and go to state 13
    UNDERSCORE      shift and go to state 11
    LPAREN          shift and go to state 33
    NUMBER          shift and go to state 19
    QUESTMARK       shift and go to state 25
    VARNAME         shift and go to state 8
    EQUALSIGN       shift and go to state 30
    AMPERSAND       shift and go to state 20

    scoped_flags                   shift and go to state 4
    repeat_N_times                 shift and go to state 5
    flagged_expr                   shift and go to state 6
    repeat_range                   shift and go to state 9
    backreference                  shift and go to state 10
    lookup_expr                    shift and go to state 12
    optionalize                    shift and go to state 14
    string_expr                    shift and go to state 31
    str_b                          shift and go to state 16
    lookup                         shift and go to state 17
    subroutine_call                shift and go to state 18
    numrange                       shift and go to state 24
    quantifier                     shift and go to state 23
    quantified_expr                shift and go to state 26
    lookup_type                    shift and go to state 28
    expression                     shift and go to state 34
    variable_lookup                shift and go to state 32

state 5

    (20) quantifier -> repeat_N_times .

    WHITESPACE      reduce using rule 20 (quantifier -> repeat_N_times .)
    COLON           reduce using rule 20 (quantifier -> repeat_N_times .)


state 6

    (12) expression -> flagged_expr .

    $end            reduce using rule 12 (expression -> flagged_expr .)
    DEDENT          reduce using rule 12 (expression -> flagged_expr .)
    GLOBALMARK      reduce using rule 12 (expression -> flagged_expr .)
    VARNAME         reduce using rule 12 (expression -> flagged_expr .)
    DOT             reduce using rule 12 (expression -> flagged_expr .)
    LT              reduce using rule 12 (expression -> flagged_expr .)


state 7

    (6) main_expression -> global_flags . expression
    (7) main_expression -> global_flags .
    (10) expression -> . string_expr
    (11) expression -> . lookup_expr
    (12) expression -> . flagged_expr
    (13) expression -> . quantified_expr
    (14) string_expr -> . str_b STRING str_b NEWLINE
    (41) lookup_expr -> . lookup NEWLINE optional_block
    (42) lookup_expr -> . SLASH lookup_chain NEWLINE optional_block
    (39) flagged_expr -> . scoped_flags expression
    (18) quantified_expr -> . quantifier WHITESPACE expression
    (19) quantified_expr -> . quantifier COLON charclass
    (15) str_b -> .
    (16) str_b -> . DOT
    (17) str_b -> . UNDERSCORE
    (45) lookup -> . lookup_type
    (46) lookup -> . lookup_type QUESTMARK
    (40) scoped_flags -> . LPAREN FLAGSET RPAREN WHITESPACE
    (20) quantifier -> . repeat_N_times
    (21) quantifier -> . repeat_range
    (22) quantifier -> . optionalize
    (47) lookup_type -> . variable_lookup
    (48) lookup_type -> . backreference
    (49) lookup_type -> . subroutine_call
    (23) repeat_N_times -> . NUMBER of
    (24) repeat_range -> . numrange of
    (25) repeat_range -> . numrange backtrack MINUS of
    (26) repeat_range -> . NUMBER backtrack PLUS DOT DOT of
    (27) repeat_range -> . NUMBER backtrack PLUS DOT DOT NUMBER of
    (34) optionalize -> . QUESTMARK of
    (50) variable_lookup -> . VARNAME
    (51) variable_lookup -> . UNDERSCORE
    (52) variable_lookup -> . DOT
    (53) backreference -> . EQUALSIGN VARNAME
    (54) subroutine_call -> . AMPERSAND VARNAME
    (30) numrange -> . DOT DOT
    (31) numrange -> . NUMBER DOT DOT
    (32) numrange -> . DOT DOT NUMBER
    (33) numrange -> . NUMBER DOT DOT NUMBER

    DEDENT          reduce using rule 7 (main_expression -> global_flags .)
    $end            reduce using rule 7 (main_expression -> global_flags .)
    SLASH           shift and go to state 21
    STRING          reduce using rule 15 (str_b -> .)
    DOT             shift and go to state 13
    UNDERSCORE      shift and go to state 11
    LPAREN          shift and go to state 33
    NUMBER          shift and go to state 19
    QUESTMARK       shift and go to state 25
    VARNAME         shift and go to state 8
    EQUALSIGN       shift and go to state 30
    AMPERSAND       shift and go to state 20

    scoped_flags                   shift and go to state 4
    repeat_N_times                 shift and go to state 5
    flagged_expr                   shift and go to state 6
    repeat_range                   shift and go to state 9
    backreference                  shift and go to state 10
    lookup_expr                    shift and go to state 12
    optionalize                    shift and go to state 14
    string_expr                    shift and go to state 31
    str_b                          shift and go to state 16
    lookup                         shift and go to state 17
    subroutine_call                shift and go to state 18
    numrange                       shift and go to state 24
    quantifier                     shift and go to state 23
    quantified_expr                shift and go to state 26
    lookup_type                    shift and go to state 28
    expression                     shift and go to state 35
    variable_lookup                shift and go to state 32

state 8

    (50) variable_lookup -> VARNAME .

    QUESTMARK       reduce using rule 50 (variable_lookup -> VARNAME .)
    SLASH           reduce using rule 50 (variable_lookup -> VARNAME .)
    NEWLINE         reduce using rule 50 (variable_lookup -> VARNAME .)


state 9

    (21) quantifier -> repeat_range .

    WHITESPACE      reduce using rule 21 (quantifier -> repeat_range .)
    COLON           reduce using rule 21 (quantifier -> repeat_range .)


state 10

    (48) lookup_type -> backreference .

    QUESTMARK       reduce using rule 48 (lookup_type -> backreference .)
    NEWLINE         reduce using rule 48 (lookup_type -> backreference .)
    SLASH           reduce using rule 48 (lookup_type -> backreference .)


state 11

    (17) str_b -> UNDERSCORE .
    (51) variable_lookup -> UNDERSCORE .

    STRING          reduce using rule 17 (str_b -> UNDERSCORE .)
    QUESTMARK       reduce using rule 51 (variable_lookup -> UNDERSCORE .)
    NEWLINE         reduce using rule 51 (variable_lookup -> UNDERSCORE .)


state 12

    (11) expression -> lookup_expr .

    $end            reduce using rule 11 (expression -> lookup_expr .)
    DEDENT          reduce using rule 11 (expression -> lookup_expr .)
    GLOBALMARK      reduce using rule 11 (expression -> lookup_expr .)
    VARNAME         reduce using rule 11 (expression -> lookup_expr .)
    DOT             reduce using rule 11 (expression -> lookup_expr .)
    LT              reduce using rule 11 (expression -> lookup_expr .)


state 13

    (16) str_b -> DOT .
    (52) variable_lookup -> DOT .
    (30) numrange -> DOT . DOT
    (32) numrange -> DOT . DOT NUMBER

    STRING          reduce using rule 16 (str_b -> DOT .)
    QUESTMARK       reduce using rule 52 (variable_lookup -> DOT .)
    NEWLINE         reduce using rule 52 (variable_lookup -> DOT .)
    DOT             shift and go to state 36


state 14

    (22) quantifier -> optionalize .

    WHITESPACE      reduce using rule 22 (quantifier -> optionalize .)
    COLON           reduce using rule 22 (quantifier -> optionalize .)


state 15

    (4) oprex -> NEWLINE main_expression .

    $end            reduce using rule 4 (oprex -> NEWLINE main_expression .)


state 16

    (14) string_expr -> str_b . STRING str_b NEWLINE

    STRING          shift and go to state 37


state 17

    (41) lookup_expr -> lookup . NEWLINE optional_block

    NEWLINE         shift and go to state 38


state 18

    (49) lookup_type -> subroutine_call .

    QUESTMARK       reduce using rule 49 (lookup_type -> subroutine_call .)
    NEWLINE         reduce using rule 49 (lookup_type -> subroutine_call .)
    SLASH           reduce using rule 49 (lookup_type -> subroutine_call .)


state 19

    (23) repeat_N_times -> NUMBER . of
    (26) repeat_range -> NUMBER . backtrack PLUS DOT DOT of
    (27) repeat_range -> NUMBER . backtrack PLUS DOT DOT NUMBER of
    (31) numrange -> NUMBER . DOT DOT
    (33) numrange -> NUMBER . DOT DOT NUMBER
    (29) of -> . WHITESPACE OF
    (28) backtrack -> . WHITESPACE LT LT

    DOT             shift and go to state 42
    WHITESPACE      shift and go to state 39

    of                             shift and go to state 41
    backtrack                      shift and go to state 40

state 20

    (54) subroutine_call -> AMPERSAND . VARNAME

    VARNAME         shift and go to state 43


state 21

    (42) lookup_expr -> SLASH . lookup_chain NEWLINE optional_block
    (43) lookup_chain -> . lookup SLASH
    (44) lookup_chain -> . lookup SLASH lookup_chain
    (45) lookup -> . lookup_type
    (46) lookup -> . lookup_type QUESTMARK
    (47) lookup_type -> . variable_lookup
    (48) lookup_type -> . backreference
    (49) lookup_type -> . subroutine_call
    (50) variable_lookup -> . VARNAME
    (51) variable_lookup -> . UNDERSCORE
    (52) variable_lookup -> . DOT
    (53) backreference -> . EQUALSIGN VARNAME
    (54) subroutine_call -> . AMPERSAND VARNAME

    VARNAME         shift and go to state 8
    UNDERSCORE      shift and go to state 44
    DOT             shift and go to state 45
    EQUALSIGN       shift and go to state 30
    AMPERSAND       shift and go to state 20

    lookup_type                    shift and go to state 28
    backreference                  shift and go to state 10
    lookup                         shift and go to state 46
    subroutine_call                shift and go to state 18
    lookup_chain                   shift and go to state 47
    variable_lookup                shift and go to state 32

state 22

    (9) global_flags -> LPAREN . FLAGSET RPAREN NEWLINE
    (40) scoped_flags -> LPAREN . FLAGSET RPAREN WHITESPACE

    FLAGSET         shift and go to state 48


state 23

    (18) quantified_expr -> quantifier . WHITESPACE expression
    (19) quantified_expr -> quantifier . COLON charclass

    WHITESPACE      shift and go to state 50
    COLON           shift and go to state 49


state 24

    (24) repeat_range -> numrange . of
    (25) repeat_range -> numrange . backtrack MINUS of
    (29) of -> . WHITESPACE OF
    (28) backtrack -> . WHITESPACE LT LT

    WHITESPACE      shift and go to state 39

    of                             shift and go to state 52
    backtrack                      shift and go to state 51

state 25

    (34) optionalize -> QUESTMARK . of
    (29) of -> . WHITESPACE OF

    WHITESPACE      shift and go to state 54

    of                             shift and go to state 53

state 26

    (13) expression -> quantified_expr .

    $end            reduce using rule 13 (expression -> quantified_expr .)
    DEDENT          reduce using rule 13 (expression -> quantified_expr .)
    GLOBALMARK      reduce using rule 13 (expression -> quantified_expr .)
    VARNAME         reduce using rule 13 (expression -> quantified_expr .)
    DOT             reduce using rule 13 (expression -> quantified_expr .)
    LT              reduce using rule 13 (expression -> quantified_expr .)


state 27

    (5) oprex -> NEWLINE INDENT . main_expression DEDENT
    (6) main_expression -> . global_flags expression
    (7) main_expression -> . global_flags
    (8) main_expression -> . expression
    (9) global_flags -> . LPAREN FLAGSET RPAREN NEWLINE
    (10) expression -> . string_expr
    (11) expression -> . lookup_expr
    (12) expression -> . flagged_expr
    (13) expression -> . quantified_expr
    (14) string_expr -> . str_b STRING str_b NEWLINE
    (41) lookup_expr -> . lookup NEWLINE optional_block
    (42) lookup_expr -> . SLASH lookup_chain NEWLINE optional_block
    (39) flagged_expr -> . scoped_flags expression
    (18) quantified_expr -> . quantifier WHITESPACE expression
    (19) quantified_expr -> . quantifier COLON charclass
    (15) str_b -> .
    (16) str_b -> . DOT
    (17) str_b -> . UNDERSCORE
    (45) lookup -> . lookup_type
    (46) lookup -> . lookup_type QUESTMARK
    (40) scoped_flags -> . LPAREN FLAGSET RPAREN WHITESPACE
    (20) quantifier -> . repeat_N_times
    (21) quantifier -> . repeat_range
    (22) quantifier -> . optionalize
    (47) lookup_type -> . variable_lookup
    (48) lookup_type -> . backreference
    (49) lookup_type -> . subroutine_call
    (23) repeat_N_times -> . NUMBER of
    (24) repeat_range -> . numrange of
    (25) repeat_range -> . numrange backtrack MINUS of
    (26) repeat_range -> . NUMBER backtrack PLUS DOT DOT of
    (27) repeat_range -> . NUMBER backtrack PLUS DOT DOT NUMBER of
    (34) optionalize -> . QUESTMARK of
    (50) variable_lookup -> . VARNAME
    (51) variable_lookup -> . UNDERSCORE
    (52) variable_lookup -> . DOT
    (53) backreference -> . EQUALSIGN VARNAME
    (54) subroutine_call -> . AMPERSAND VARNAME
    (30) numrange -> . DOT DOT
    (31) numrange -> . NUMBER DOT DOT
    (32) numrange -> . DOT DOT NUMBER
    (33) numrange -> . NUMBER DOT DOT NUMBER

    LPAREN          shift and go to state 22
    SLASH           shift and go to state 21
    STRING          reduce using rule 15 (str_b -> .)
    DOT             shift and go to state 13
    UNDERSCORE      shift and go to state 11
    NUMBER          shift and go to state 19
    QUESTMARK       shift and go to state 25
    VARNAME         shift and go to state 8
    EQUALSIGN       shift and go to state 30
    AMPERSAND       shift and go to state 20

    scoped_flags                   shift and go to state 4
    repeat_N_times                 shift and go to state 5
    flagged_expr                   shift and go to state 6
    global_flags                   shift and go to state 7
    repeat_range                   shift and go to state 9
    backreference                  shift and go to state 10
    lookup_expr                    shift and go to state 12
    optionalize                    shift and go to state 14
    main_expression                shift and go to state 55
    string_expr                    shift and go to state 31
    str_b                          shift and go to state 16
    lookup                         shift and go to state 17
    subroutine_call                shift and go to state 18
    numrange                       shift and go to state 24
    quantifier                     shift and go to state 23
    quantified_expr                shift and go to state 26
    lookup_type                    shift and go to state 28
    expression                     shift and go to state 29
    variable_lookup                shift and go to state 32

state 28

    (45) lookup -> lookup_type .
    (46) lookup -> lookup_type . QUESTMARK

    NEWLINE         reduce using rule 45 (lookup -> lookup_type .)
    SLASH           reduce using rule 45 (lookup -> lookup_type .)
    QUESTMARK       shift and go to state 56


state 29

    (8) main_expression -> expression .

    DEDENT          reduce using rule 8 (main_expression -> expression .)
    $end            reduce using rule 8 (main_expression -> expression .)


state 30

    (53) backreference -> EQUALSIGN . VARNAME

    VARNAME         shift and go to state 57


state 31

    (10) expression -> string_expr .

    $end            reduce using rule 10 (expression -> string_expr .)
    DEDENT          reduce using rule 10 (expression -> string_expr .)
    GLOBALMARK      reduce using rule 10 (expression -> string_expr .)
    VARNAME         reduce using rule 10 (expression -> string_expr .)
    DOT             reduce using rule 10 (expression -> string_expr .)
    LT              reduce using rule 10 (expression -> string_expr .)


state 32

    (47) lookup_type -> variable_lookup .

    QUESTMARK       reduce using rule 47 (lookup_type -> variable_lookup .)
    NEWLINE         reduce using rule 47 (lookup_type -> variable_lookup .)
    SLASH           reduce using rule 47 (lookup_type -> variable_lookup .)


state 33

    (40) scoped_flags -> LPAREN . FLAGSET RPAREN WHITESPACE

    FLAGSET         shift and go to state 58


state 34

    (39) flagged_expr -> scoped_flags expression .

    $end            reduce using rule 39 (flagged_expr -> scoped_flags expression .)
    DEDENT          reduce using rule 39 (flagged_expr -> scoped_flags expression .)
    GLOBALMARK      reduce using rule 39 (flagged_expr -> scoped_flags expression .)
    VARNAME         reduce using rule 39 (flagged_expr -> scoped_flags expression .)
    DOT             reduce using rule 39 (flagged_expr -> scoped_flags expression .)
    LT              reduce using rule 39 (flagged_expr -> scoped_flags expression .)


state 35

    (6) main_expression -> global_flags expression .

    DEDENT          reduce using rule 6 (main_expression -> global_flags expression .)
    $end            reduce using rule 6 (main_expression -> global_flags expression .)


state 36

    (30) numrange -> DOT DOT .
    (32) numrange -> DOT DOT . NUMBER

    WHITESPACE      reduce using rule 30 (numrange -> DOT DOT .)
    NUMBER          shift and go to state 59


state 37

    (14) string_expr -> str_b STRING . str_b NEWLINE
    (15) str_b -> .
    (16) str_b -> . DOT
    (17) str_b -> . UNDERSCORE

    NEWLINE         reduce using rule 15 (str_b -> .)
    DOT             shift and go to state 61
    UNDERSCORE      shift and go to state 60

    str_b                          shift and go to state 62

state 38

    (41) lookup_expr -> lookup NEWLINE . optional_block
    (64) optional_block -> . begin_block definitions end_block
    (65) optional_block -> .
    (66) begin_block -> . INDENT

    $end            reduce using rule 65 (optional_block -> .)
    DEDENT          reduce using rule 65 (optional_block -> .)
    GLOBALMARK      reduce using rule 65 (optional_block -> .)
    VARNAME         reduce using rule 65 (optional_block -> .)
    DOT             reduce using rule 65 (optional_block -> .)
    LT              reduce using rule 65 (optional_block -> .)
    INDENT          shift and go to state 64

    optional_block                 shift and go to state 65
    begin_block                    shift and go to state 63

state 39

    (29) of -> WHITESPACE . OF
    (28) backtrack -> WHITESPACE . LT LT

    OF              shift and go to state 66
    LT              shift and go to state 67


state 40

    (26) repeat_range -> NUMBER backtrack . PLUS DOT DOT of
    (27) repeat_range -> NUMBER backtrack . PLUS DOT DOT NUMBER of

    PLUS            shift and go to state 68


state 41

    (23) repeat_N_times -> NUMBER of .

    WHITESPACE      reduce using rule 23 (repeat_N_times -> NUMBER of .)
    COLON           reduce using rule 23 (repeat_N_times -> NUMBER of .)


state 42

    (31) numrange -> NUMBER DOT . DOT
    (33) numrange -> NUMBER DOT . DOT NUMBER

    DOT             shift and go to state 69


state 43

    (54) subroutine_call -> AMPERSAND VARNAME .

    QUESTMARK       reduce using rule 54 (subroutine_call -> AMPERSAND VARNAME .)
    NEWLINE         reduce using rule 54 (subroutine_call -> AMPERSAND VARNAME .)
    SLASH           reduce using rule 54 (subroutine_call -> AMPERSAND VARNAME .)


state 44

    (51) variable_lookup -> UNDERSCORE .

    QUESTMARK       reduce using rule 51 (variable_lookup -> UNDERSCORE .)
    SLASH           reduce using rule 51 (variable_lookup -> UNDERSCORE .)


state 45

    (52) variable_lookup -> DOT .

    QUESTMARK       reduce using rule 52 (variable_lookup -> DOT .)
    SLASH           reduce using rule 52 (variable_lookup -> DOT .)


state 46

    (43) lookup_chain -> lookup . SLASH
    (44) lookup_chain -> lookup . SLASH lookup_chain

    SLASH           shift and go to state 70


state 47

    (42) lookup_expr -> SLASH lookup_chain . NEWLINE optional_block

    NEWLINE         shift and go to state 71


state 48

    (9) global_flags -> LPAREN FLAGSET . RPAREN NEWLINE
    (40) scoped_flags -> LPAREN FLAGSET . RPAREN WHITESPACE

    RPAREN          shift and go to state 72


state 49

    (19) quantified_expr -> quantifier COLON . charclass
    (55) charclass -> . charitems NEWLINE optional_block
    (56) charitems -> . WHITESPACE charitem
    (57) charitems -> . WHITESPACE charitem charitems

    WHITESPACE      shift and go to state 73

    charitems                      shift and go to state 75
    charclass                      shift and go to state 74

state 50

    (18) quantified_expr -> quantifier WHITESPACE . expression
    (10) expression -> . string_expr
    (11) expression -> . lookup_expr
    (12) expression -> . flagged_expr
    (13) expression -> . quantified_expr
    (14) string_expr -> . str_b STRING str_b NEWLINE
    (41) lookup_expr -> . lookup NEWLINE optional_block
    (42) lookup_expr -> . SLASH lookup_chain NEWLINE optional_block
    (39) flagged_expr -> . scoped_flags expression
    (18) quantified_expr -> . quantifier WHITESPACE expression
    (19) quantified_expr -> . quantifier COLON charclass
    (15) str_b -> .
    (16) str_b -> . DOT
    (17) str_b -> . UNDERSCORE
    (45) lookup -> . lookup_type
    (46) lookup -> . lookup_type QUESTMARK
    (40) scoped_flags -> . LPAREN FLAGSET RPAREN WHITESPACE
    (20) quantifier -> . repeat_N_times
    (21) quantifier -> . repeat_range
    (22) quantifier -> . optionalize
    (47) lookup_type -> . variable_lookup
    (48) lookup_type -> . backreference
    (49) lookup_type -> . subroutine_call
    (23) repeat_N_times -> . NUMBER of
    (24) repeat_range -> . numrange of
    (25) repeat_range -> . numrange backtrack MINUS of
    (26) repeat_range -> . NUMBER backtrack PLUS DOT DOT of
    (27) repeat_range -> . NUMBER backtrack PLUS DOT DOT NUMBER of
    (34) optionalize -> . QUESTMARK of
    (50) variable_lookup -> . VARNAME
    (51) variable_lookup -> . UNDERSCORE
    (52) variable_lookup -> . DOT
    (53) backreference -> . EQUALSIGN VARNAME
    (54) subroutine_call -> . AMPERSAND VARNAME
    (30) numrange -> . DOT DOT
    (31) numrange -> . NUMBER DOT DOT
    (32) numrange -> . DOT DOT NUMBER
    (33) numrange -> . NUMBER DOT DOT NUMBER

    SLASH           shift and go to state 21
    STRING          reduce using rule 15 (str_b -> .)
    DOT             shift and go to state 13
    UNDERSCORE      shift and go to state 11
    LPAREN          shift and go to state 33
    NUMBER          shift and go to state 19
    QUESTMARK       shift and go to state 25
    VARNAME         shift and go to state 8
    EQUALSIGN       shift and go to state 30
    AMPERSAND       shift and go to state 20

    scoped_flags                   shift and go to state 4
    repeat_N_times                 shift and go to state 5
    flagged_expr                   shift and go to state 6
    repeat_range                   shift and go to state 9
    backreference                  shift and go to state 10
    lookup_expr                    shift and go to state 12
    optionalize                    shift and go to state 14
    string_expr                    shift and go to state 31
    str_b                          shift and go to state 16
    lookup                         shift and go to state 17
    subroutine_call                shift and go to state 18
    numrange                       shift and go to state 24
    quantifier                     shift and go to state 23
    quantified_expr                shift and go to state 26
    lookup_type                    shift and go to state 28
    expression                     shift and go to state 76
    variable_lookup                shift and go to state 32

state 51

    (25) repeat_range -> numrange backtrack . MINUS of

    MINUS           shift and go to state 77


state 52

    (24) repeat_range -> numrange of .

    WHITESPACE      reduce using rule 24 (repeat_range -> numrange of .)
    COLON           reduce using rule 24 (repeat_range -> numrange of .)


state 53

    (34) optionalize -> QUESTMARK of .

    WHITESPACE      reduce using rule 34 (optionalize -> QUESTMARK of .)
    COLON           reduce using rule 34 (optionalize -> QUESTMARK of .)


state 54

    (29) of -> WHITESPACE . OF

    OF              shift and go to state 66


state 55

    (5) oprex -> NEWLINE INDENT main_expression . DEDENT

    DEDENT          shift and go to state 78


state 56

    (46) lookup -> lookup_type QUESTMARK .

    NEWLINE         reduce using rule 46 (lookup -> lookup_type QUESTMARK .)
    SLASH           reduce using rule 46 (lookup -> lookup_type QUESTMARK .)


state 57

    (53) backreference -> EQUALSIGN VARNAME .

    QUESTMARK       reduce using rule 53 (backreference -> EQUALSIGN VARNAME .)
    NEWLINE         reduce using rule 53 (backreference -> EQUALSIGN VARNAME .)
    SLASH           reduce using rule 53 (backreference -> EQUALSIGN VARNAME .)


state 58

    (40) scoped_flags -> LPAREN FLAGSET . RPAREN WHITESPACE

    RPAREN          shift and go to state 79


state 59

    (32) numrange -> DOT DOT NUMBER .

    WHITESPACE      reduce using rule 32 (numrange -> DOT DOT NUMBER .)


state 60

    (17) str_b -> UNDERSCORE .

    NEWLINE         reduce using rule 17 (str_b -> UNDERSCORE .)


state 61

    (16) str_b -> DOT .

    NEWLINE         reduce using rule 16 (str_b -> DOT .)


state 62

    (14) string_expr -> str_b STRING str_b . NEWLINE

    NEWLINE         shift and go to state 80


state 63

    (64) optional_block -> begin_block . definitions end_block
    (68) definitions -> . definition
    (69) definitions -> . definition definitions
    (70) definition -> . assignment
    (71) definition -> . GLOBALMARK assignment
    (72) assignment -> . declaration equals assignment
    (73) assignment -> . declaration equals expression
    (74) assignment -> . declaration COLON charclass
    (79) declaration -> . VARNAME
    (80) declaration -> . DOT VARNAME
    (81) declaration -> . LT VARNAME GT
    (82) declaration -> . DOT LT VARNAME GT

    GLOBALMARK      shift and go to state 83
    VARNAME         shift and go to state 84
    DOT             shift and go to state 88
    LT              shift and go to state 85

    definition                     shift and go to state 81
    assignment                     shift and go to state 82
    declaration                    shift and go to state 86
    definitions                    shift and go to state 87

state 64

    (66) begin_block -> INDENT .

    GLOBALMARK      reduce using rule 66 (begin_block -> INDENT .)
    VARNAME         reduce using rule 66 (begin_block -> INDENT .)
    DOT             reduce using rule 66 (begin_block -> INDENT .)
    LT              reduce using rule 66 (begin_block -> INDENT .)


state 65

    (41) lookup_expr -> lookup NEWLINE optional_block .

    $end            reduce using rule 41 (lookup_expr -> lookup NEWLINE optional_block .)
    DEDENT          reduce using rule 41 (lookup_expr -> lookup NEWLINE optional_block .)
    GLOBALMARK      reduce using rule 41 (lookup_expr -> lookup NEWLINE optional_block .)
    VARNAME         reduce using rule 41 (lookup_expr -> lookup NEWLINE optional_block .)
    DOT             reduce using rule 41 (lookup_expr -> lookup NEWLINE optional_block .)
    LT              reduce using rule 41 (lookup_expr -> lookup NEWLINE optional_block .)


state 66

    (29) of -> WHITESPACE OF .

    WHITESPACE      reduce using rule 29 (of -> WHITESPACE OF .)
    COLON           reduce using rule 29 (of -> WHITESPACE OF .)


state 67

    (28) backtrack -> WHITESPACE LT . LT

    LT              shift and go to state 89


state 68

    (26) repeat_range -> NUMBER backtrack PLUS . DOT DOT of
    (27) repeat_range -> NUMBER backtrack PLUS . DOT DOT NUMBER of

    DOT             shift and go to state 90


state 69

    (31) numrange -> NUMBER DOT DOT .
    (33) numrange -> NUMBER DOT DOT . NUMBER

    WHITESPACE      reduce using rule 31 (numrange -> NUMBER DOT DOT .)
    NUMBER          shift and go to state 91


state 70

    (43) lookup_chain -> lookup SLASH .
    (44) lookup_chain -> lookup SLASH . lookup_chain
    (43) lookup_chain -> . lookup SLASH
    (44) lookup_chain -> . lookup SLASH lookup_chain
    (45) lookup -> . lookup_type
    (46) lookup -> . lookup_type QUESTMARK
    (47) lookup_type -> . variable_lookup
    (48) lookup_type -> . backreference
    (49) lookup_type -> . subroutine_call
    (50) variable_lookup -> . VARNAME
    (51) variable_lookup -> . UNDERSCORE
    (52) variable_lookup -> . DOT
    (53) backreference -> . EQUALSIGN VARNAME
    (54) subroutine_call -> . AMPERSAND VARNAME

    NEWLINE         reduce using rule 43 (lookup_chain -> lookup SLASH .)
    VARNAME         shift and go to state 8
    UNDERSCORE      shift and go to state 44
    DOT             shift and go to state 45
    EQUALSIGN       shift and go to state 30
    AMPERSAND       shift and go to state 20

    lookup_type                    shift and go to state 28
    backreference                  shift and go to state 10
    lookup                         shift and go to state 46
    subroutine_call                shift and go to state 18
    lookup_chain                   shift and go to state 92
    variable_lookup                shift and go to state 32

state 71

    (42) lookup_expr -> SLASH lookup_chain NEWLINE . optional_block
    (64) optional_block -> . begin_block definitions end_block
    (65) optional_block -> .
    (66) begin_block -> . INDENT

    $end            reduce using rule 65 (optional_block -> .)
    DEDENT          reduce using rule 65 (optional_block -> .)
    GLOBALMARK      reduce using rule 65 (optional_block -> .)
    VARNAME         reduce using rule 65 (optional_block -> .)
    DOT             reduce using rule 65 (optional_block -> .)
    LT              reduce using rule 65 (optional_block -> .)
    INDENT          shift and go to state 64

    optional_block                 shift and go to state 93
    begin_block                    shift and go to state 63

state 72

    (9) global_flags -> LPAREN FLAGSET RPAREN . NEWLINE
    (40) scoped_flags -> LPAREN FLAGSET RPAREN . WHITESPACE

    NEWLINE         shift and go to state 94
    WHITESPACE      shift and go to state 95


state 73

    (56) charitems -> WHITESPACE . charitem
    (57) charitems -> WHITESPACE . charitem charitems
    (58) charitem -> . ranged_char
    (59) charitem -> . single_char
    (60) charitem -> . period_char
    (61) ranged_char -> . CHAR DOT DOT CHAR
    (63) single_char -> . CHAR
    (62) period_char -> . DOT

    CHAR            shift and go to state 101
    DOT             shift and go to state 100

    single_char                    shift and go to state 99
    charitem                       shift and go to state 97
    ranged_char                    shift and go to state 98
    period_char                    shift and go to state 96

state 74

    (19) quantified_expr -> quantifier COLON charclass .

    GLOBALMARK      reduce using rule 19 (quantified_expr -> quantifier COLON charclass .)
    VARNAME         reduce using rule 19 (quantified_expr -> quantifier COLON charclass .)
    DOT             reduce using rule 19 (quantified_expr -> quantifier COLON charclass .)
    LT              reduce using rule 19 (quantified_expr -> quantifier COLON charclass .)
    DEDENT          reduce using rule 19 (quantified_expr -> quantifier COLON charclass .)
    $end            reduce using rule 19 (quantified_expr -> quantifier COLON charclass .)


state 75

    (55) charclass -> charitems . NEWLINE optional_block

    NEWLINE         shift and go to state 102


state 76

    (18) quantified_expr -> quantifier WHITESPACE expression .

    GLOBALMARK      reduce using rule 18 (quantified_expr -> quantifier WHITESPACE expression .)
    VARNAME         reduce using rule 18 (quantified_expr -> quantifier WHITESPACE expression .)
    DOT             reduce using rule 18 (quantified_expr -> quantifier WHITESPACE expression .)
    LT              reduce using rule 18 (quantified_expr -> quantifier WHITESPACE expression .)
    DEDENT          reduce using rule 18 (quantified_expr -> quantifier WHITESPACE expression .)
    $end            reduce using rule 18 (quantified_expr -> quantifier WHITESPACE expression .)


state 77

    (25) repeat_range -> numrange backtrack MINUS . of
    (29) of -> . WHITESPACE OF

    WHITESPACE      shift and go to state 54

    of                             shift and go to state 103

state 78

    (5) oprex -> NEWLINE INDENT main_expression DEDENT .

    $end            reduce using rule 5 (oprex -> NEWLINE INDENT main_expression DEDENT .)


state 79

    (40) scoped_flags -> LPAREN FLAGSET RPAREN . WHITESPACE

    WHITESPACE      shift and go to state 95


state 80

    (14) string_expr -> str_b STRING str_b NEWLINE .

    GLOBALMARK      reduce using rule 14 (string_expr -> str_b STRING str_b NEWLINE .)
    VARNAME         reduce using rule 14 (string_expr -> str_b STRING str_b NEWLINE .)
    DOT             reduce using rule 14 (string_expr -> str_b STRING str_b NEWLINE .)
    LT              reduce using rule 14 (string_expr -> str_b STRING str_b NEWLINE .)
    DEDENT          reduce using rule 14 (string_expr -> str_b STRING str_b NEWLINE .)
    $end            reduce using rule 14 (string_expr -> str_b STRING str_b NEWLINE .)


state 81

    (68) definitions -> definition .
    (69) definitions -> definition . definitions
    (68) definitions -> . definition
    (69) definitions -> . definition definitions
    (70) definition -> . assignment
    (71) definition -> . GLOBALMARK assignment
    (72) assignment -> . declaration equals assignment
    (73) assignment -> . declaration equals expression
    (74) assignment -> . declaration COLON charclass
    (79) declaration -> . VARNAME
    (80) declaration -> . DOT VARNAME
    (81) declaration -> . LT VARNAME GT
    (82) declaration -> . DOT LT VARNAME GT

    DEDENT          reduce using rule 68 (definitions -> definition .)
    GLOBALMARK      shift and go to state 83
    VARNAME         shift and go to state 84
    DOT             shift and go to state 88
    LT              shift and go to state 85

    definition                     shift and go to state 81
    assignment                     shift and go to state 82
    declaration                    shift and go to state 86
    definitions                    shift and go to state 104

state 82

    (70) definition -> assignment .

    GLOBALMARK      reduce using rule 70 (definition -> assignment .)
    VARNAME         reduce using rule 70 (definition -> assignment .)
    DOT             reduce using rule 70 (definition -> assignment .)
    LT              reduce using rule 70 (definition -> assignment .)
    DEDENT          reduce using rule 70 (definition -> assignment .)


state 83

    (71) definition -> GLOBALMARK . assignment
    (72) assignment -> . declaration equals assignment
    (73) assignment -> . declaration equals expression
    (74) assignment -> . declaration COLON charclass
    (79) declaration -> . VARNAME
    (80) declaration -> . DOT VARNAME
    (81) declaration -> . LT VARNAME GT
    (82) declaration -> . DOT LT VARNAME GT

    VARNAME         shift and go to state 84
    DOT             shift and go to state 88
    LT              shift and go to state 85

    assignment                     shift and go to state 105
    declaration                    shift and go to state 86

state 84

    (79) declaration -> VARNAME .

    COLON           reduce using rule 79 (declaration -> VARNAME .)
    EQUALSIGN       reduce using rule 79 (declaration -> VARNAME .)
    WHITESPACE      reduce using rule 79 (declaration -> VARNAME .)


state 85

    (81) declaration -> LT . VARNAME GT

    VARNAME         shift and go to state 106


state 86

    (72) assignment -> declaration . equals assignment
    (73) assignment -> declaration . equals expression
    (74) assignment -> declaration . COLON charclass
    (75) equals -> . EQUALSIGN
    (76) equals -> . WHITESPACE EQUALSIGN
    (77) equals -> . EQUALSIGN WHITESPACE
    (78) equals -> . WHITESPACE EQUALSIGN WHITESPACE

    COLON           shift and go to state 109
    EQUALSIGN       shift and go to state 110
    WHITESPACE      shift and go to state 107

    equals                         shift and go to state 108

state 87

    (64) optional_block -> begin_block definitions . end_block
    (67) end_block -> . DEDENT

    DEDENT          shift and go to state 112

    end_block                      shift and go to state 111

state 88

    (80) declaration -> DOT . VARNAME
    (82) declaration -> DOT . LT VARNAME GT

    VARNAME         shift and go to state 113
    LT              shift and go to state 114


state 89

    (28) backtrack -> WHITESPACE LT LT .

    MINUS           reduce using rule 28 (backtrack -> WHITESPACE LT LT .)
    PLUS            reduce using rule 28 (backtrack -> WHITESPACE LT LT .)


state 90

    (26) repeat_range -> NUMBER backtrack PLUS DOT . DOT of
    (27) repeat_range -> NUMBER backtrack PLUS DOT . DOT NUMBER of

    DOT             shift and go to state 115


state 91

    (33) numrange -> NUMBER DOT DOT NUMBER .

    WHITESPACE      reduce using rule 33 (numrange -> NUMBER DOT DOT NUMBER .)


state 92

    (44) lookup_chain -> lookup SLASH lookup_chain .

    NEWLINE         reduce using rule 44 (lookup_chain -> lookup SLASH lookup_chain .)


state 93

    (42) lookup_expr -> SLASH lookup_chain NEWLINE optional_block .

    $end            reduce using rule 42 (lookup_expr -> SLASH lookup_chain NEWLINE optional_block .)
    DEDENT          reduce using rule 42 (lookup_expr -> SLASH lookup_chain NEWLINE optional_block .)
    GLOBALMARK      reduce using rule 42 (lookup_expr -> SLASH lookup_chain NEWLINE optional_block .)
    VARNAME         reduce using rule 42 (lookup_expr -> SLASH lookup_chain NEWLINE optional_block .)
    DOT             reduce using rule 42 (lookup_expr -> SLASH lookup_chain NEWLINE optional_block .)
    LT              reduce using rule 42 (lookup_expr -> SLASH lookup_chain NEWLINE optional_block .)


state 94

    (9) global_flags -> LPAREN FLAGSET RPAREN NEWLINE .

    SLASH           reduce using rule 9 (global_flags -> LPAREN FLAGSET RPAREN NEWLINE .)
    DOT             reduce using rule 9 (global_flags -> LPAREN FLAGSET RPAREN NEWLINE .)
    UNDERSCORE      reduce using rule 9 (global_flags -> LPAREN FLAGSET RPAREN NEWLINE .)
    LPAREN          reduce using rule 9 (global_flags -> LPAREN FLAGSET RPAREN NEWLINE .)
    NUMBER          reduce using rule 9 (global_flags -> LPAREN FLAGSET RPAREN NEWLINE .)
    QUESTMARK       reduce using rule 9 (global_flags -> LPAREN FLAGSET RPAREN NEWLINE .)
    VARNAME         reduce using rule 9 (global_flags -> LPAREN FLAGSET RPAREN NEWLINE .)
    EQUALSIGN       reduce using rule 9 (global_flags -> LPAREN FLAGSET RPAREN NEWLINE .)
    AMPERSAND       reduce using rule 9 (global_flags -> LPAREN FLAGSET RPAREN NEWLINE .)
    STRING          reduce using rule 9 (global_flags -> LPAREN FLAGSET RPAREN NEWLINE .)
    $end            reduce using rule 9 (global_flags -> LPAREN FLAGSET RPAREN NEWLINE .)
    DEDENT          reduce using rule 9 (global_flags -> LPAREN FLAGSET RPAREN NEWLINE .)


state 95

    (40) scoped_flags -> LPAREN FLAGSET RPAREN WHITESPACE .

    SLASH           reduce using rule 40 (scoped_flags -> LPAREN FLAGSET RPAREN WHITESPACE .)
    DOT             reduce using rule 40 (scoped_flags -> LPAREN FLAGSET RPAREN WHITESPACE .)
    UNDERSCORE      reduce using rule 40 (scoped_flags -> LPAREN FLAGSET RPAREN WHITESPACE .)
    LPAREN          reduce using rule 40 (scoped_flags -> LPAREN FLAGSET RPAREN WHITESPACE .)
    NUMBER          reduce using rule 40 (scoped_flags -> LPAREN FLAGSET RPAREN WHITESPACE .)
    QUESTMARK       reduce using rule 40 (scoped_flags -> LPAREN FLAGSET RPAREN WHITESPACE .)
    VARNAME         reduce using rule 40 (scoped_flags -> LPAREN FLAGSET RPAREN WHITESPACE .)
    EQUALSIGN       reduce using rule 40 (scoped_flags -> LPAREN FLAGSET RPAREN WHITESPACE .)
    AMPERSAND       reduce using rule 40 (scoped_flags -> LPAREN FLAGSET RPAREN WHITESPACE .)
    STRING          reduce using rule 40 (scoped_flags -> LPAREN FLAGSET RPAREN WHITESPACE .)


state 96

    (60) charitem -> period_char .

    WHITESPACE      reduce using rule 60 (charitem -> period_char .)
    NEWLINE         reduce using rule 60 (charitem -> period_char .)


state 97

    (56) charitems -> WHITESPACE charitem .
    (57) charitems -> WHITESPACE charitem . charitems
    (56) charitems -> . WHITESPACE charitem
    (57) charitems -> . WHITESPACE charitem charitems

    NEWLINE         reduce using rule 56 (charitems -> WHITESPACE charitem .)
    WHITESPACE      shift and go to state 73

    charitems                      shift and go to state 116

state 98

    (58) charitem -> ranged_char .

    WHITESPACE      reduce using rule 58 (charitem -> ranged_char .)
    NEWLINE         reduce using rule 58 (charitem -> ranged_char .)


state 99

    (59) charitem -> single_char .

    WHITESPACE      reduce using rule 59 (charitem -> single_char .)
    NEWLINE         reduce using rule 59 (charitem -> single_char .)


state 100

    (62) period_char -> DOT .

    WHITESPACE      reduce using rule 62 (period_char -> DOT .)
    NEWLINE         reduce using rule 62 (period_char -> DOT .)


state 101

    (61) ranged_char -> CHAR . DOT DOT CHAR
    (63) single_char -> CHAR .

    DOT             shift and go to state 117
    WHITESPACE      reduce using rule 63 (single_char -> CHAR .)
    NEWLINE         reduce using rule 63 (single_char -> CHAR .)


state 102

    (55) charclass -> charitems NEWLINE . optional_block
    (64) optional_block -> . begin_block definitions end_block
    (65) optional_block -> .
    (66) begin_block -> . INDENT

    $end            reduce using rule 65 (optional_block -> .)
    DEDENT          reduce using rule 65 (optional_block -> .)
    GLOBALMARK      reduce using rule 65 (optional_block -> .)
    VARNAME         reduce using rule 65 (optional_block -> .)
    DOT             reduce using rule 65 (optional_block -> .)
    LT              reduce using rule 65 (optional_block -> .)
    INDENT          shift and go to state 64

    begin_block                    shift and go to state 63
    optional_block                 shift and go to state 118

state 103

    (25) repeat_range -> numrange backtrack MINUS of .

    WHITESPACE      reduce using rule 25 (repeat_range -> numrange backtrack MINUS of .)
    COLON           reduce using rule 25 (repeat_range -> numrange backtrack MINUS of .)


state 104

    (69) definitions -> definition definitions .

    DEDENT          reduce using rule 69 (definitions -> definition definitions .)


state 105

    (71) definition -> GLOBALMARK assignment .

    GLOBALMARK      reduce using rule 71 (definition -> GLOBALMARK assignment .)
    VARNAME         reduce using rule 71 (definition -> GLOBALMARK assignment .)
    DOT             reduce using rule 71 (definition -> GLOBALMARK assignment .)
    LT              reduce using rule 71 (definition -> GLOBALMARK assignment .)
    DEDENT          reduce using rule 71 (definition -> GLOBALMARK assignment .)


state 106

    (81) declaration -> LT VARNAME . GT

    GT              shift and go to state 119


state 107

    (76) equals -> WHITESPACE . EQUALSIGN
    (78) equals -> WHITESPACE . EQUALSIGN WHITESPACE

    EQUALSIGN       shift and go to state 120


state 108

    (72) assignment -> declaration equals . assignment
    (73) assignment -> declaration equals . expression
    (72) assignment -> . declaration equals assignment
    (73) assignment -> . declaration equals expression
    (74) assignment -> . declaration COLON charclass
    (10) expression -> . string_expr
    (11) expression -> . lookup_expr
    (12) expression -> . flagged_expr
    (13) expression -> . quantified_expr
    (79) declaration -> . VARNAME
    (80) declaration -> . DOT VARNAME
    (81) declaration -> . LT VARNAME GT
    (82) declaration -> . DOT LT VARNAME GT
    (14) string_expr -> . str_b STRING str_b NEWLINE
    (41) lookup_expr -> . lookup NEWLINE optional_block
    (42) lookup_expr -> . SLASH lookup_chain NEWLINE optional_block
    (39) flagged_expr -> . scoped_flags expression
    (18) quantified_expr -> . quantifier WHITESPACE expression
    (19) quantified_expr -> . quantifier COLON charclass
    (15) str_b -> .
    (16) str_b -> . DOT
    (17) str_b -> . UNDERSCORE
    (45) lookup -> . lookup_type
    (46) lookup -> . lookup_type QUESTMARK
    (40) scoped_flags -> . LPAREN FLAGSET RPAREN WHITESPACE
    (20) quantifier -> . repeat_N_times
    (21) quantifier -> . repeat_range
    (22) quantifier -> . optionalize
    (47) lookup_type -> . variable_lookup
    (48) lookup_type -> . backreference
    (49) lookup_type -> . subroutine_call
    (23) repeat_N_times -> . NUMBER of
    (24) repeat_range -> . numrange of
    (25) repeat_range -> . numrange backtrack MINUS of
    (26) repeat_range -> . NUMBER backtrack PLUS DOT DOT of
    (27) repeat_range -> . NUMBER backtrack PLUS DOT DOT NUMBER of
    (34) optionalize -> . QUESTMARK of
    (50) variable_lookup -> . VARNAME
    (51) variable_lookup -> . UNDERSCORE
    (52) variable_lookup -> . DOT
    (53) backreference -> . EQUALSIGN VARNAME
    (54) subroutine_call -> . AMPERSAND VARNAME
    (30) numrange -> . DOT DOT
    (31) numrange -> . NUMBER DOT DOT
    (32) numrange -> . DOT DOT NUMBER
    (33) numrange -> . NUMBER DOT DOT NUMBER

    VARNAME         shift and go to state 121
    DOT             shift and go to state 122
    LT              shift and go to state 85
    SLASH           shift and go to state 21
    STRING          reduce using rule 15 (str_b -> .)
    UNDERSCORE      shift and go to state 11
    LPAREN          shift and go to state 33
    NUMBER          shift and go to state 19
    QUESTMARK       shift and go to state 25
    EQUALSIGN       shift and go to state 30
    AMPERSAND       shift and go to state 20

    scoped_flags                   shift and go to state 4
    repeat_N_times                 shift and go to state 5
    flagged_expr                   shift and go to state 6
    repeat_range                   shift and go to state 9
    backreference                  shift and go to state 10
    lookup_expr                    shift and go to state 12
    optionalize                    shift and go to state 14
    string_expr                    shift and go to state 31
    str_b                          shift and go to state 16
    lookup                         shift and go to state 17
    subroutine_call                shift and go to state 18
    assignment                     shift and go to state 123
    numrange                       shift and go to state 24
    declaration                    shift and go to state 86
    quantifier                     shift and go to state 23
    quantified_expr                shift and go to state 26
    lookup_type                    shift and go to state 28
    expression                     shift and go to state 124
    variable_lookup                shift and go to state 32

state 109

    (74) assignment -> declaration COLON . charclass
    (55) charclass -> . charitems NEWLINE optional_block
    (56) charitems -> . WHITESPACE charitem
    (57) charitems -> . WHITESPACE charitem charitems

    WHITESPACE      shift and go to state 73

    charitems                      shift and go to state 75
    charclass                      shift and go to state 125

state 110

    (75) equals -> EQUALSIGN .
    (77) equals -> EQUALSIGN . WHITESPACE

    VARNAME         reduce using rule 75 (equals -> EQUALSIGN .)
    DOT             reduce using rule 75 (equals -> EQUALSIGN .)
    LT              reduce using rule 75 (equals -> EQUALSIGN .)
    SLASH           reduce using rule 75 (equals -> EQUALSIGN .)
    UNDERSCORE      reduce using rule 75 (equals -> EQUALSIGN .)
    LPAREN          reduce using rule 75 (equals -> EQUALSIGN .)
    NUMBER          reduce using rule 75 (equals -> EQUALSIGN .)
    QUESTMARK       reduce using rule 75 (equals -> EQUALSIGN .)
    EQUALSIGN       reduce using rule 75 (equals -> EQUALSIGN .)
    AMPERSAND       reduce using rule 75 (equals -> EQUALSIGN .)
    STRING          reduce using rule 75 (equals -> EQUALSIGN .)
    WHITESPACE      shift and go to state 126


state 111

    (64) optional_block -> begin_block definitions end_block .

    $end            reduce using rule 64 (optional_block -> begin_block definitions end_block .)
    DEDENT          reduce using rule 64 (optional_block -> begin_block definitions end_block .)
    GLOBALMARK      reduce using rule 64 (optional_block -> begin_block definitions end_block .)
    VARNAME         reduce using rule 64 (optional_block -> begin_block definitions end_block .)
    DOT             reduce using rule 64 (optional_block -> begin_block definitions end_block .)
    LT              reduce using rule 64 (optional_block -> begin_block definitions end_block .)


state 112

    (67) end_block -> DEDENT .

    $end            reduce using rule 67 (end_block -> DEDENT .)
    DEDENT          reduce using rule 67 (end_block -> DEDENT .)
    GLOBALMARK      reduce using rule 67 (end_block -> DEDENT .)
    VARNAME         reduce using rule 67 (end_block -> DEDENT .)
    DOT             reduce using rule 67 (end_block -> DEDENT .)
    LT              reduce using rule 67 (end_block -> DEDENT .)


state 113

    (80) declaration -> DOT VARNAME .

    COLON           reduce using rule 80 (declaration -> DOT VARNAME .)
    EQUALSIGN       reduce using rule 80 (declaration -> DOT VARNAME .)
    WHITESPACE      reduce using rule 80 (declaration -> DOT VARNAME .)


state 114

    (82) declaration -> DOT LT . VARNAME GT

    VARNAME         shift and go to state 127


state 115

    (26) repeat_range -> NUMBER backtrack PLUS DOT DOT . of
    (27) repeat_range -> NUMBER backtrack PLUS DOT DOT . NUMBER of
    (29) of -> . WHITESPACE OF

    NUMBER          shift and go to state 129
    WHITESPACE      shift and go to state 54

    of                             shift and go to state 128

state 116

    (57) charitems -> WHITESPACE charitem charitems .

    NEWLINE         reduce using rule 57 (charitems -> WHITESPACE charitem charitems .)


state 117

    (61) ranged_char -> CHAR DOT . DOT CHAR

    DOT             shift and go to state 130


state 118

    (55) charclass -> charitems NEWLINE optional_block .

    $end            reduce using rule 55 (charclass -> charitems NEWLINE optional_block .)
    DEDENT          reduce using rule 55 (charclass -> charitems NEWLINE optional_block .)
    GLOBALMARK      reduce using rule 55 (charclass -> charitems NEWLINE optional_block .)
    VARNAME         reduce using rule 55 (charclass -> charitems NEWLINE optional_block .)
    DOT             reduce using rule 55 (charclass -> charitems NEWLINE optional_block .)
    LT              reduce using rule 55 (charclass -> charitems NEWLINE optional_block .)


state 119

    (81) declaration -> LT VARNAME GT .

    COLON           reduce using rule 81 (declaration -> LT VARNAME GT .)
    EQUALSIGN       reduce using rule 81 (declaration -> LT VARNAME GT .)
    WHITESPACE      reduce using rule 81 (declaration -> LT VARNAME GT .)


state 120

    (76) equals -> WHITESPACE EQUALSIGN .
    (78) equals -> WHITESPACE EQUALSIGN . WHITESPACE

    VARNAME         reduce using rule 76 (equals -> WHITESPACE EQUALSIGN .)
    DOT             reduce using rule 76 (equals -> WHITESPACE EQUALSIGN .)
    LT              reduce using rule 76 (equals -> WHITESPACE EQUALSIGN .)
    SLASH           reduce using rule 76 (equals -> WHITESPACE EQUALSIGN .)
    UNDERSCORE      reduce using rule 76 (equals -> WHITESPACE EQUALSIGN .)
    LPAREN          reduce using rule 76 (equals -> WHITESPACE EQUALSIGN .)
    NUMBER          reduce using rule 76 (equals -> WHITESPACE EQUALSIGN .)
    QUESTMARK       reduce using rule 76 (equals -> WHITESPACE EQUALSIGN .)
    EQUALSIGN       reduce using rule 76 (equals -> WHITESPACE EQUALSIGN .)
    AMPERSAND       reduce using rule 76 (equals -> WHITESPACE EQUALSIGN .)
    STRING          reduce using rule 76 (equals -> WHITESPACE EQUALSIGN .)
    WHITESPACE      shift and go to state 131


state 121

    (79) declaration -> VARNAME .
    (50) variable_lookup -> VARNAME .

    COLON           reduce using rule 79 (declaration -> VARNAME .)
    EQUALSIGN       reduce using rule 79 (declaration -> VARNAME .)
    WHITESPACE      reduce using rule 79 (declaration -> VARNAME .)
    QUESTMARK       reduce using rule 50 (variable_lookup -> VARNAME .)
    NEWLINE         reduce using rule 50 (variable_lookup -> VARNAME .)


state 122

    (80) declaration -> DOT . VARNAME
    (82) declaration -> DOT . LT VARNAME GT
    (16) str_b -> DOT .
    (52) variable_lookup -> DOT .
    (30) numrange -> DOT . DOT
    (32) numrange -> DOT . DOT NUMBER

    VARNAME         shift and go to state 113
    LT              shift and go to state 114
    STRING          reduce using rule 16 (str_b -> DOT .)
    QUESTMARK       reduce using rule 52 (variable_lookup -> DOT .)
    NEWLINE         reduce using rule 52 (variable_lookup -> DOT .)
    DOT             shift and go to state 36


state 123

    (72) assignment -> declaration equals assignment .

    GLOBALMARK      reduce using rule 72 (assignment -> declaration equals assignment .)
    VARNAME         reduce using rule 72 (assignment -> declaration equals assignment .)
    DOT             reduce using rule 72 (assignment -> declaration equals assignment .)
    LT              reduce using rule 72 (assignment -> declaration equals assignment .)
    DEDENT          reduce using rule 72 (assignment -> declaration equals assignment .)


state 124

    (73) assignment -> declaration equals expression .

    GLOBALMARK      reduce using rule 73 (assignment -> declaration equals expression .)
    VARNAME         reduce using rule 73 (assignment -> declaration equals expression .)
    DOT             reduce using rule 73 (assignment -> declaration equals expression .)
    LT              reduce using rule 73 (assignment -> declaration equals expression .)
    DEDENT          reduce using rule 73 (assignment -> declaration equals expression .)


state 125

    (74) assignment -> declaration COLON charclass .

    GLOBALMARK      reduce using rule 74 (assignment -> declaration COLON charclass .)
    VARNAME         reduce using rule 74 (assignment -> declaration COLON charclass .)
    DOT             reduce using rule 74 (assignment -> declaration COLON charclass .)
    LT              reduce using rule 74 (assignment -> declaration COLON charclass .)
    DEDENT          reduce using rule 74 (assignment -> declaration COLON charclass .)


state 126

    (77) equals -> EQUALSIGN WHITESPACE .

    VARNAME         reduce using rule 77 (equals -> EQUALSIGN WHITESPACE .)
    DOT             reduce using rule 77 (equals -> EQUALSIGN WHITESPACE .)
    LT              reduce using rule 77 (equals -> EQUALSIGN WHITESPACE .)
    SLASH           reduce using rule 77 (equals -> EQUALSIGN WHITESPACE .)
    UNDERSCORE      reduce using rule 77 (equals -> EQUALSIGN WHITESPACE .)
    LPAREN          reduce using rule 77 (equals -> EQUALSIGN WHITESPACE .)
    NUMBER          reduce using rule 77 (equals -> EQUALSIGN WHITESPACE .)
    QUESTMARK       reduce using rule 77 (equals -> EQUALSIGN WHITESPACE .)
    EQUALSIGN       reduce using rule 77 (equals -> EQUALSIGN WHITESPACE .)
    AMPERSAND       reduce using rule 77 (equals -> EQUALSIGN WHITESPACE .)
    STRING          reduce using rule 77 (equals -> EQUALSIGN WHITESPACE .)


state 127

    (82) declaration -> DOT LT VARNAME . GT

    GT              shift and go to state 132


state 128

    (26) repeat_range -> NUMBER backtrack PLUS DOT DOT of .

    WHITESPACE      reduce using rule 26 (repeat_range -> NUMBER backtrack PLUS DOT DOT of .)
    COLON           reduce using rule 26 (repeat_range -> NUMBER backtrack PLUS DOT DOT of .)


state 129

    (27) repeat_range -> NUMBER backtrack PLUS DOT DOT NUMBER . of
    (29) of -> . WHITESPACE OF

    WHITESPACE      shift and go to state 54

    of                             shift and go to state 133

state 130

    (61) ranged_char -> CHAR DOT DOT . CHAR

    CHAR            shift and go to state 134


state 131

    (78) equals -> WHITESPACE EQUALSIGN WHITESPACE .

    VARNAME         reduce using rule 78 (equals -> WHITESPACE EQUALSIGN WHITESPACE .)
    DOT             reduce using rule 78 (equals -> WHITESPACE EQUALSIGN WHITESPACE .)
    LT              reduce using rule 78 (equals -> WHITESPACE EQUALSIGN WHITESPACE .)
    SLASH           reduce using rule 78 (equals -> WHITESPACE EQUALSIGN WHITESPACE .)
    UNDERSCORE      reduce using rule 78 (equals -> WHITESPACE EQUALSIGN WHITESPACE .)
    LPAREN          reduce using rule 78 (equals -> WHITESPACE EQUALSIGN WHITESPACE .)
    NUMBER          reduce using rule 78 (equals -> WHITESPACE EQUALSIGN WHITESPACE .)
    QUESTMARK       reduce using rule 78 (equals -> WHITESPACE EQUALSIGN WHITESPACE .)
    EQUALSIGN       reduce using rule 78 (equals -> WHITESPACE EQUALSIGN WHITESPACE .)
    AMPERSAND       reduce using rule 78 (equals -> WHITESPACE EQUALSIGN WHITESPACE .)
    STRING          reduce using rule 78 (equals -> WHITESPACE EQUALSIGN WHITESPACE .)


state 132

    (82) declaration -> DOT LT VARNAME GT .

    COLON           reduce using rule 82 (declaration -> DOT LT VARNAME GT .)
    EQUALSIGN       reduce using rule 82 (declaration -> DOT LT VARNAME GT .)
    WHITESPACE      reduce using rule 82 (declaration -> DOT LT VARNAME GT .)


state 133

    (27) repeat_range -> NUMBER backtrack PLUS DOT DOT NUMBER of .

    WHITESPACE      reduce using rule 27 (repeat_range -> NUMBER backtrack PLUS DOT DOT NUMBER of .)
    COLON           reduce using rule 27 (repeat_range -> NUMBER backtrack PLUS DOT DOT NUMBER of .)


state 134

    (61) ranged_char -> CHAR DOT DOT CHAR .

    WHITESPACE      reduce using rule 61 (ranged_char -> CHAR DOT DOT CHAR .)
    NEWLINE         reduce using rule 61 (ranged_char -> CHAR DOT DOT CHAR .)

