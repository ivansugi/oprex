Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    EXCLAMARK

Grammar

Rule 0     S' -> oprex
Rule 1     oprex -> <empty>
Rule 2     oprex -> WHITESPACE
Rule 3     oprex -> NEWLINE
Rule 4     oprex -> NEWLINE expression
Rule 5     oprex -> NEWLINE INDENT expression DEDENT
Rule 6     expression -> repeat_expr
Rule 7     expression -> string_expr
Rule 8     expression -> lookup_expr
Rule 9     repeat_expr -> quantifier WHITESPACE expression
Rule 10    repeat_expr -> quantifier COLON charclass
Rule 11    string_expr -> STRING NEWLINE optional_block
Rule 12    lookup_expr -> lookup NEWLINE optional_block
Rule 13    lookup_expr -> SLASH lookup_chain NEWLINE optional_block
Rule 14    quantifier -> repeat_N_times
Rule 15    quantifier -> repeat_range
Rule 16    quantifier -> optionalize
Rule 17    repeat_N_times -> NUMBER of
Rule 18    repeat_range -> numrange of
Rule 19    repeat_range -> numrange WHITESPACE BACKTRACK MINUS of
Rule 20    repeat_range -> NUMBER WHITESPACE BACKTRACK PLUS DOT DOT of
Rule 21    repeat_range -> NUMBER WHITESPACE BACKTRACK PLUS DOT DOT NUMBER of
Rule 22    optionalize -> QUESTMARK of
Rule 23    numrange -> DOT DOT
Rule 24    numrange -> NUMBER DOT DOT
Rule 25    numrange -> DOT DOT NUMBER
Rule 26    numrange -> NUMBER DOT DOT NUMBER
Rule 27    of -> WHITESPACE VARNAME
Rule 28    lookup_chain -> lookup SLASH
Rule 29    lookup_chain -> lookup SLASH lookup_chain
Rule 30    lookup -> VARNAME
Rule 31    lookup -> VARNAME QUESTMARK
Rule 32    optional_block -> begin_block definitions end_block
Rule 33    optional_block -> <empty>
Rule 34    begin_block -> INDENT
Rule 35    end_block -> DEDENT
Rule 36    definitions -> definition
Rule 37    definitions -> definition definitions
Rule 38    definition -> assignment
Rule 39    definition -> GLOBALMARK assignment
Rule 40    assignment -> declaration EQUALSIGN assignment
Rule 41    assignment -> declaration EQUALSIGN expression
Rule 42    assignment -> declaration COLON charclass
Rule 43    declaration -> VARNAME
Rule 44    declaration -> DOT VARNAME
Rule 45    declaration -> LPAREN VARNAME RPAREN
Rule 46    declaration -> DOT LPAREN VARNAME RPAREN
Rule 47    charclass -> CHARCLASS NEWLINE optional_block

Terminals, with rules where they appear

BACKTRACK            : 19 20 21
CHARCLASS            : 47
COLON                : 10 42
DEDENT               : 5 35
DOT                  : 20 20 21 21 23 23 24 24 25 25 26 26 44 46
EQUALSIGN            : 40 41
EXCLAMARK            : 
GLOBALMARK           : 39
INDENT               : 5 34
LPAREN               : 45 46
MINUS                : 19
NEWLINE              : 3 4 5 11 12 13 47
NUMBER               : 17 20 21 21 24 25 26 26
PLUS                 : 20 21
QUESTMARK            : 22 31
RPAREN               : 45 46
SLASH                : 13 28 29
STRING               : 11
VARNAME              : 27 30 31 43 44 45 46
WHITESPACE           : 2 9 19 20 21 27
error                : 

Nonterminals, with rules where they appear

assignment           : 38 39 40
begin_block          : 32
charclass            : 10 42
declaration          : 40 41 42
definition           : 36 37
definitions          : 32 37
end_block            : 32
expression           : 4 5 9 41
lookup               : 12 28 29
lookup_chain         : 13 29
lookup_expr          : 8
numrange             : 18 19
of                   : 17 18 19 20 21 22
oprex                : 0
optional_block       : 11 12 13 47
optionalize          : 16
quantifier           : 9 10
repeat_N_times       : 14
repeat_expr          : 6
repeat_range         : 15
string_expr          : 7

Parsing method: LALR

state 0

    (0) S' -> . oprex
    (1) oprex -> .
    (2) oprex -> . WHITESPACE
    (3) oprex -> . NEWLINE
    (4) oprex -> . NEWLINE expression
    (5) oprex -> . NEWLINE INDENT expression DEDENT

    $end            reduce using rule 1 (oprex -> .)
    WHITESPACE      shift and go to state 2
    NEWLINE         shift and go to state 3

    oprex                          shift and go to state 1

state 1

    (0) S' -> oprex .



state 2

    (2) oprex -> WHITESPACE .

    $end            reduce using rule 2 (oprex -> WHITESPACE .)


state 3

    (3) oprex -> NEWLINE .
    (4) oprex -> NEWLINE . expression
    (5) oprex -> NEWLINE . INDENT expression DEDENT
    (6) expression -> . repeat_expr
    (7) expression -> . string_expr
    (8) expression -> . lookup_expr
    (9) repeat_expr -> . quantifier WHITESPACE expression
    (10) repeat_expr -> . quantifier COLON charclass
    (11) string_expr -> . STRING NEWLINE optional_block
    (12) lookup_expr -> . lookup NEWLINE optional_block
    (13) lookup_expr -> . SLASH lookup_chain NEWLINE optional_block
    (14) quantifier -> . repeat_N_times
    (15) quantifier -> . repeat_range
    (16) quantifier -> . optionalize
    (30) lookup -> . VARNAME
    (31) lookup -> . VARNAME QUESTMARK
    (17) repeat_N_times -> . NUMBER of
    (18) repeat_range -> . numrange of
    (19) repeat_range -> . numrange WHITESPACE BACKTRACK MINUS of
    (20) repeat_range -> . NUMBER WHITESPACE BACKTRACK PLUS DOT DOT of
    (21) repeat_range -> . NUMBER WHITESPACE BACKTRACK PLUS DOT DOT NUMBER of
    (22) optionalize -> . QUESTMARK of
    (23) numrange -> . DOT DOT
    (24) numrange -> . NUMBER DOT DOT
    (25) numrange -> . DOT DOT NUMBER
    (26) numrange -> . NUMBER DOT DOT NUMBER

    $end            reduce using rule 3 (oprex -> NEWLINE .)
    INDENT          shift and go to state 18
    STRING          shift and go to state 13
    SLASH           shift and go to state 15
    VARNAME         shift and go to state 6
    NUMBER          shift and go to state 8
    QUESTMARK       shift and go to state 17
    DOT             shift and go to state 10

    optionalize                    shift and go to state 11
    repeat_N_times                 shift and go to state 4
    expression                     shift and go to state 19
    repeat_range                   shift and go to state 7
    numrange                       shift and go to state 14
    repeat_expr                    shift and go to state 5
    lookup                         shift and go to state 12
    quantifier                     shift and go to state 16
    lookup_expr                    shift and go to state 9
    string_expr                    shift and go to state 20

state 4

    (14) quantifier -> repeat_N_times .

    WHITESPACE      reduce using rule 14 (quantifier -> repeat_N_times .)
    COLON           reduce using rule 14 (quantifier -> repeat_N_times .)


state 5

    (6) expression -> repeat_expr .

    GLOBALMARK      reduce using rule 6 (expression -> repeat_expr .)
    VARNAME         reduce using rule 6 (expression -> repeat_expr .)
    DOT             reduce using rule 6 (expression -> repeat_expr .)
    LPAREN          reduce using rule 6 (expression -> repeat_expr .)
    DEDENT          reduce using rule 6 (expression -> repeat_expr .)
    $end            reduce using rule 6 (expression -> repeat_expr .)


state 6

    (30) lookup -> VARNAME .
    (31) lookup -> VARNAME . QUESTMARK

    NEWLINE         reduce using rule 30 (lookup -> VARNAME .)
    SLASH           reduce using rule 30 (lookup -> VARNAME .)
    QUESTMARK       shift and go to state 21


state 7

    (15) quantifier -> repeat_range .

    WHITESPACE      reduce using rule 15 (quantifier -> repeat_range .)
    COLON           reduce using rule 15 (quantifier -> repeat_range .)


state 8

    (17) repeat_N_times -> NUMBER . of
    (20) repeat_range -> NUMBER . WHITESPACE BACKTRACK PLUS DOT DOT of
    (21) repeat_range -> NUMBER . WHITESPACE BACKTRACK PLUS DOT DOT NUMBER of
    (24) numrange -> NUMBER . DOT DOT
    (26) numrange -> NUMBER . DOT DOT NUMBER
    (27) of -> . WHITESPACE VARNAME

    WHITESPACE      shift and go to state 22
    DOT             shift and go to state 24

    of                             shift and go to state 23

state 9

    (8) expression -> lookup_expr .

    GLOBALMARK      reduce using rule 8 (expression -> lookup_expr .)
    VARNAME         reduce using rule 8 (expression -> lookup_expr .)
    DOT             reduce using rule 8 (expression -> lookup_expr .)
    LPAREN          reduce using rule 8 (expression -> lookup_expr .)
    DEDENT          reduce using rule 8 (expression -> lookup_expr .)
    $end            reduce using rule 8 (expression -> lookup_expr .)


state 10

    (23) numrange -> DOT . DOT
    (25) numrange -> DOT . DOT NUMBER

    DOT             shift and go to state 25


state 11

    (16) quantifier -> optionalize .

    WHITESPACE      reduce using rule 16 (quantifier -> optionalize .)
    COLON           reduce using rule 16 (quantifier -> optionalize .)


state 12

    (12) lookup_expr -> lookup . NEWLINE optional_block

    NEWLINE         shift and go to state 26


state 13

    (11) string_expr -> STRING . NEWLINE optional_block

    NEWLINE         shift and go to state 27


state 14

    (18) repeat_range -> numrange . of
    (19) repeat_range -> numrange . WHITESPACE BACKTRACK MINUS of
    (27) of -> . WHITESPACE VARNAME

    WHITESPACE      shift and go to state 28

    of                             shift and go to state 29

state 15

    (13) lookup_expr -> SLASH . lookup_chain NEWLINE optional_block
    (28) lookup_chain -> . lookup SLASH
    (29) lookup_chain -> . lookup SLASH lookup_chain
    (30) lookup -> . VARNAME
    (31) lookup -> . VARNAME QUESTMARK

    VARNAME         shift and go to state 6

    lookup                         shift and go to state 30
    lookup_chain                   shift and go to state 31

state 16

    (9) repeat_expr -> quantifier . WHITESPACE expression
    (10) repeat_expr -> quantifier . COLON charclass

    WHITESPACE      shift and go to state 33
    COLON           shift and go to state 32


state 17

    (22) optionalize -> QUESTMARK . of
    (27) of -> . WHITESPACE VARNAME

    WHITESPACE      shift and go to state 35

    of                             shift and go to state 34

state 18

    (5) oprex -> NEWLINE INDENT . expression DEDENT
    (6) expression -> . repeat_expr
    (7) expression -> . string_expr
    (8) expression -> . lookup_expr
    (9) repeat_expr -> . quantifier WHITESPACE expression
    (10) repeat_expr -> . quantifier COLON charclass
    (11) string_expr -> . STRING NEWLINE optional_block
    (12) lookup_expr -> . lookup NEWLINE optional_block
    (13) lookup_expr -> . SLASH lookup_chain NEWLINE optional_block
    (14) quantifier -> . repeat_N_times
    (15) quantifier -> . repeat_range
    (16) quantifier -> . optionalize
    (30) lookup -> . VARNAME
    (31) lookup -> . VARNAME QUESTMARK
    (17) repeat_N_times -> . NUMBER of
    (18) repeat_range -> . numrange of
    (19) repeat_range -> . numrange WHITESPACE BACKTRACK MINUS of
    (20) repeat_range -> . NUMBER WHITESPACE BACKTRACK PLUS DOT DOT of
    (21) repeat_range -> . NUMBER WHITESPACE BACKTRACK PLUS DOT DOT NUMBER of
    (22) optionalize -> . QUESTMARK of
    (23) numrange -> . DOT DOT
    (24) numrange -> . NUMBER DOT DOT
    (25) numrange -> . DOT DOT NUMBER
    (26) numrange -> . NUMBER DOT DOT NUMBER

    STRING          shift and go to state 13
    SLASH           shift and go to state 15
    VARNAME         shift and go to state 6
    NUMBER          shift and go to state 8
    QUESTMARK       shift and go to state 17
    DOT             shift and go to state 10

    optionalize                    shift and go to state 11
    repeat_N_times                 shift and go to state 4
    expression                     shift and go to state 36
    repeat_range                   shift and go to state 7
    numrange                       shift and go to state 14
    repeat_expr                    shift and go to state 5
    lookup                         shift and go to state 12
    quantifier                     shift and go to state 16
    lookup_expr                    shift and go to state 9
    string_expr                    shift and go to state 20

state 19

    (4) oprex -> NEWLINE expression .

    $end            reduce using rule 4 (oprex -> NEWLINE expression .)


state 20

    (7) expression -> string_expr .

    GLOBALMARK      reduce using rule 7 (expression -> string_expr .)
    VARNAME         reduce using rule 7 (expression -> string_expr .)
    DOT             reduce using rule 7 (expression -> string_expr .)
    LPAREN          reduce using rule 7 (expression -> string_expr .)
    DEDENT          reduce using rule 7 (expression -> string_expr .)
    $end            reduce using rule 7 (expression -> string_expr .)


state 21

    (31) lookup -> VARNAME QUESTMARK .

    NEWLINE         reduce using rule 31 (lookup -> VARNAME QUESTMARK .)
    SLASH           reduce using rule 31 (lookup -> VARNAME QUESTMARK .)


state 22

    (20) repeat_range -> NUMBER WHITESPACE . BACKTRACK PLUS DOT DOT of
    (21) repeat_range -> NUMBER WHITESPACE . BACKTRACK PLUS DOT DOT NUMBER of
    (27) of -> WHITESPACE . VARNAME

    BACKTRACK       shift and go to state 37
    VARNAME         shift and go to state 38


state 23

    (17) repeat_N_times -> NUMBER of .

    WHITESPACE      reduce using rule 17 (repeat_N_times -> NUMBER of .)
    COLON           reduce using rule 17 (repeat_N_times -> NUMBER of .)


state 24

    (24) numrange -> NUMBER DOT . DOT
    (26) numrange -> NUMBER DOT . DOT NUMBER

    DOT             shift and go to state 39


state 25

    (23) numrange -> DOT DOT .
    (25) numrange -> DOT DOT . NUMBER

    WHITESPACE      reduce using rule 23 (numrange -> DOT DOT .)
    NUMBER          shift and go to state 40


state 26

    (12) lookup_expr -> lookup NEWLINE . optional_block
    (32) optional_block -> . begin_block definitions end_block
    (33) optional_block -> .
    (34) begin_block -> . INDENT

    $end            reduce using rule 33 (optional_block -> .)
    DEDENT          reduce using rule 33 (optional_block -> .)
    GLOBALMARK      reduce using rule 33 (optional_block -> .)
    VARNAME         reduce using rule 33 (optional_block -> .)
    DOT             reduce using rule 33 (optional_block -> .)
    LPAREN          reduce using rule 33 (optional_block -> .)
    INDENT          shift and go to state 42

    optional_block                 shift and go to state 43
    begin_block                    shift and go to state 41

state 27

    (11) string_expr -> STRING NEWLINE . optional_block
    (32) optional_block -> . begin_block definitions end_block
    (33) optional_block -> .
    (34) begin_block -> . INDENT

    $end            reduce using rule 33 (optional_block -> .)
    DEDENT          reduce using rule 33 (optional_block -> .)
    GLOBALMARK      reduce using rule 33 (optional_block -> .)
    VARNAME         reduce using rule 33 (optional_block -> .)
    DOT             reduce using rule 33 (optional_block -> .)
    LPAREN          reduce using rule 33 (optional_block -> .)
    INDENT          shift and go to state 42

    begin_block                    shift and go to state 41
    optional_block                 shift and go to state 44

state 28

    (19) repeat_range -> numrange WHITESPACE . BACKTRACK MINUS of
    (27) of -> WHITESPACE . VARNAME

    BACKTRACK       shift and go to state 45
    VARNAME         shift and go to state 38


state 29

    (18) repeat_range -> numrange of .

    WHITESPACE      reduce using rule 18 (repeat_range -> numrange of .)
    COLON           reduce using rule 18 (repeat_range -> numrange of .)


state 30

    (28) lookup_chain -> lookup . SLASH
    (29) lookup_chain -> lookup . SLASH lookup_chain

    SLASH           shift and go to state 46


state 31

    (13) lookup_expr -> SLASH lookup_chain . NEWLINE optional_block

    NEWLINE         shift and go to state 47


state 32

    (10) repeat_expr -> quantifier COLON . charclass
    (47) charclass -> . CHARCLASS NEWLINE optional_block

    CHARCLASS       shift and go to state 49

    charclass                      shift and go to state 48

state 33

    (9) repeat_expr -> quantifier WHITESPACE . expression
    (6) expression -> . repeat_expr
    (7) expression -> . string_expr
    (8) expression -> . lookup_expr
    (9) repeat_expr -> . quantifier WHITESPACE expression
    (10) repeat_expr -> . quantifier COLON charclass
    (11) string_expr -> . STRING NEWLINE optional_block
    (12) lookup_expr -> . lookup NEWLINE optional_block
    (13) lookup_expr -> . SLASH lookup_chain NEWLINE optional_block
    (14) quantifier -> . repeat_N_times
    (15) quantifier -> . repeat_range
    (16) quantifier -> . optionalize
    (30) lookup -> . VARNAME
    (31) lookup -> . VARNAME QUESTMARK
    (17) repeat_N_times -> . NUMBER of
    (18) repeat_range -> . numrange of
    (19) repeat_range -> . numrange WHITESPACE BACKTRACK MINUS of
    (20) repeat_range -> . NUMBER WHITESPACE BACKTRACK PLUS DOT DOT of
    (21) repeat_range -> . NUMBER WHITESPACE BACKTRACK PLUS DOT DOT NUMBER of
    (22) optionalize -> . QUESTMARK of
    (23) numrange -> . DOT DOT
    (24) numrange -> . NUMBER DOT DOT
    (25) numrange -> . DOT DOT NUMBER
    (26) numrange -> . NUMBER DOT DOT NUMBER

    STRING          shift and go to state 13
    SLASH           shift and go to state 15
    VARNAME         shift and go to state 6
    NUMBER          shift and go to state 8
    QUESTMARK       shift and go to state 17
    DOT             shift and go to state 10

    optionalize                    shift and go to state 11
    repeat_N_times                 shift and go to state 4
    expression                     shift and go to state 50
    repeat_range                   shift and go to state 7
    numrange                       shift and go to state 14
    repeat_expr                    shift and go to state 5
    lookup                         shift and go to state 12
    quantifier                     shift and go to state 16
    lookup_expr                    shift and go to state 9
    string_expr                    shift and go to state 20

state 34

    (22) optionalize -> QUESTMARK of .

    WHITESPACE      reduce using rule 22 (optionalize -> QUESTMARK of .)
    COLON           reduce using rule 22 (optionalize -> QUESTMARK of .)


state 35

    (27) of -> WHITESPACE . VARNAME

    VARNAME         shift and go to state 38


state 36

    (5) oprex -> NEWLINE INDENT expression . DEDENT

    DEDENT          shift and go to state 51


state 37

    (20) repeat_range -> NUMBER WHITESPACE BACKTRACK . PLUS DOT DOT of
    (21) repeat_range -> NUMBER WHITESPACE BACKTRACK . PLUS DOT DOT NUMBER of

    PLUS            shift and go to state 52


state 38

    (27) of -> WHITESPACE VARNAME .

    WHITESPACE      reduce using rule 27 (of -> WHITESPACE VARNAME .)
    COLON           reduce using rule 27 (of -> WHITESPACE VARNAME .)


state 39

    (24) numrange -> NUMBER DOT DOT .
    (26) numrange -> NUMBER DOT DOT . NUMBER

    WHITESPACE      reduce using rule 24 (numrange -> NUMBER DOT DOT .)
    NUMBER          shift and go to state 53


state 40

    (25) numrange -> DOT DOT NUMBER .

    WHITESPACE      reduce using rule 25 (numrange -> DOT DOT NUMBER .)


state 41

    (32) optional_block -> begin_block . definitions end_block
    (36) definitions -> . definition
    (37) definitions -> . definition definitions
    (38) definition -> . assignment
    (39) definition -> . GLOBALMARK assignment
    (40) assignment -> . declaration EQUALSIGN assignment
    (41) assignment -> . declaration EQUALSIGN expression
    (42) assignment -> . declaration COLON charclass
    (43) declaration -> . VARNAME
    (44) declaration -> . DOT VARNAME
    (45) declaration -> . LPAREN VARNAME RPAREN
    (46) declaration -> . DOT LPAREN VARNAME RPAREN

    GLOBALMARK      shift and go to state 56
    VARNAME         shift and go to state 57
    DOT             shift and go to state 61
    LPAREN          shift and go to state 58

    definition                     shift and go to state 54
    assignment                     shift and go to state 55
    declaration                    shift and go to state 59
    definitions                    shift and go to state 60

state 42

    (34) begin_block -> INDENT .

    GLOBALMARK      reduce using rule 34 (begin_block -> INDENT .)
    VARNAME         reduce using rule 34 (begin_block -> INDENT .)
    DOT             reduce using rule 34 (begin_block -> INDENT .)
    LPAREN          reduce using rule 34 (begin_block -> INDENT .)


state 43

    (12) lookup_expr -> lookup NEWLINE optional_block .

    GLOBALMARK      reduce using rule 12 (lookup_expr -> lookup NEWLINE optional_block .)
    VARNAME         reduce using rule 12 (lookup_expr -> lookup NEWLINE optional_block .)
    DOT             reduce using rule 12 (lookup_expr -> lookup NEWLINE optional_block .)
    LPAREN          reduce using rule 12 (lookup_expr -> lookup NEWLINE optional_block .)
    DEDENT          reduce using rule 12 (lookup_expr -> lookup NEWLINE optional_block .)
    $end            reduce using rule 12 (lookup_expr -> lookup NEWLINE optional_block .)


state 44

    (11) string_expr -> STRING NEWLINE optional_block .

    GLOBALMARK      reduce using rule 11 (string_expr -> STRING NEWLINE optional_block .)
    VARNAME         reduce using rule 11 (string_expr -> STRING NEWLINE optional_block .)
    DOT             reduce using rule 11 (string_expr -> STRING NEWLINE optional_block .)
    LPAREN          reduce using rule 11 (string_expr -> STRING NEWLINE optional_block .)
    DEDENT          reduce using rule 11 (string_expr -> STRING NEWLINE optional_block .)
    $end            reduce using rule 11 (string_expr -> STRING NEWLINE optional_block .)


state 45

    (19) repeat_range -> numrange WHITESPACE BACKTRACK . MINUS of

    MINUS           shift and go to state 62


state 46

    (28) lookup_chain -> lookup SLASH .
    (29) lookup_chain -> lookup SLASH . lookup_chain
    (28) lookup_chain -> . lookup SLASH
    (29) lookup_chain -> . lookup SLASH lookup_chain
    (30) lookup -> . VARNAME
    (31) lookup -> . VARNAME QUESTMARK

    NEWLINE         reduce using rule 28 (lookup_chain -> lookup SLASH .)
    VARNAME         shift and go to state 6

    lookup_chain                   shift and go to state 63
    lookup                         shift and go to state 30

state 47

    (13) lookup_expr -> SLASH lookup_chain NEWLINE . optional_block
    (32) optional_block -> . begin_block definitions end_block
    (33) optional_block -> .
    (34) begin_block -> . INDENT

    $end            reduce using rule 33 (optional_block -> .)
    DEDENT          reduce using rule 33 (optional_block -> .)
    GLOBALMARK      reduce using rule 33 (optional_block -> .)
    VARNAME         reduce using rule 33 (optional_block -> .)
    DOT             reduce using rule 33 (optional_block -> .)
    LPAREN          reduce using rule 33 (optional_block -> .)
    INDENT          shift and go to state 42

    optional_block                 shift and go to state 64
    begin_block                    shift and go to state 41

state 48

    (10) repeat_expr -> quantifier COLON charclass .

    $end            reduce using rule 10 (repeat_expr -> quantifier COLON charclass .)
    DEDENT          reduce using rule 10 (repeat_expr -> quantifier COLON charclass .)
    GLOBALMARK      reduce using rule 10 (repeat_expr -> quantifier COLON charclass .)
    VARNAME         reduce using rule 10 (repeat_expr -> quantifier COLON charclass .)
    DOT             reduce using rule 10 (repeat_expr -> quantifier COLON charclass .)
    LPAREN          reduce using rule 10 (repeat_expr -> quantifier COLON charclass .)


state 49

    (47) charclass -> CHARCLASS . NEWLINE optional_block

    NEWLINE         shift and go to state 65


state 50

    (9) repeat_expr -> quantifier WHITESPACE expression .

    $end            reduce using rule 9 (repeat_expr -> quantifier WHITESPACE expression .)
    DEDENT          reduce using rule 9 (repeat_expr -> quantifier WHITESPACE expression .)
    GLOBALMARK      reduce using rule 9 (repeat_expr -> quantifier WHITESPACE expression .)
    VARNAME         reduce using rule 9 (repeat_expr -> quantifier WHITESPACE expression .)
    DOT             reduce using rule 9 (repeat_expr -> quantifier WHITESPACE expression .)
    LPAREN          reduce using rule 9 (repeat_expr -> quantifier WHITESPACE expression .)


state 51

    (5) oprex -> NEWLINE INDENT expression DEDENT .

    $end            reduce using rule 5 (oprex -> NEWLINE INDENT expression DEDENT .)


state 52

    (20) repeat_range -> NUMBER WHITESPACE BACKTRACK PLUS . DOT DOT of
    (21) repeat_range -> NUMBER WHITESPACE BACKTRACK PLUS . DOT DOT NUMBER of

    DOT             shift and go to state 66


state 53

    (26) numrange -> NUMBER DOT DOT NUMBER .

    WHITESPACE      reduce using rule 26 (numrange -> NUMBER DOT DOT NUMBER .)


state 54

    (36) definitions -> definition .
    (37) definitions -> definition . definitions
    (36) definitions -> . definition
    (37) definitions -> . definition definitions
    (38) definition -> . assignment
    (39) definition -> . GLOBALMARK assignment
    (40) assignment -> . declaration EQUALSIGN assignment
    (41) assignment -> . declaration EQUALSIGN expression
    (42) assignment -> . declaration COLON charclass
    (43) declaration -> . VARNAME
    (44) declaration -> . DOT VARNAME
    (45) declaration -> . LPAREN VARNAME RPAREN
    (46) declaration -> . DOT LPAREN VARNAME RPAREN

    DEDENT          reduce using rule 36 (definitions -> definition .)
    GLOBALMARK      shift and go to state 56
    VARNAME         shift and go to state 57
    DOT             shift and go to state 61
    LPAREN          shift and go to state 58

    definition                     shift and go to state 54
    assignment                     shift and go to state 55
    declaration                    shift and go to state 59
    definitions                    shift and go to state 67

state 55

    (38) definition -> assignment .

    GLOBALMARK      reduce using rule 38 (definition -> assignment .)
    VARNAME         reduce using rule 38 (definition -> assignment .)
    DOT             reduce using rule 38 (definition -> assignment .)
    LPAREN          reduce using rule 38 (definition -> assignment .)
    DEDENT          reduce using rule 38 (definition -> assignment .)


state 56

    (39) definition -> GLOBALMARK . assignment
    (40) assignment -> . declaration EQUALSIGN assignment
    (41) assignment -> . declaration EQUALSIGN expression
    (42) assignment -> . declaration COLON charclass
    (43) declaration -> . VARNAME
    (44) declaration -> . DOT VARNAME
    (45) declaration -> . LPAREN VARNAME RPAREN
    (46) declaration -> . DOT LPAREN VARNAME RPAREN

    VARNAME         shift and go to state 57
    DOT             shift and go to state 61
    LPAREN          shift and go to state 58

    assignment                     shift and go to state 68
    declaration                    shift and go to state 59

state 57

    (43) declaration -> VARNAME .

    EQUALSIGN       reduce using rule 43 (declaration -> VARNAME .)
    COLON           reduce using rule 43 (declaration -> VARNAME .)


state 58

    (45) declaration -> LPAREN . VARNAME RPAREN

    VARNAME         shift and go to state 69


state 59

    (40) assignment -> declaration . EQUALSIGN assignment
    (41) assignment -> declaration . EQUALSIGN expression
    (42) assignment -> declaration . COLON charclass

    EQUALSIGN       shift and go to state 71
    COLON           shift and go to state 70


state 60

    (32) optional_block -> begin_block definitions . end_block
    (35) end_block -> . DEDENT

    DEDENT          shift and go to state 73

    end_block                      shift and go to state 72

state 61

    (44) declaration -> DOT . VARNAME
    (46) declaration -> DOT . LPAREN VARNAME RPAREN

    VARNAME         shift and go to state 74
    LPAREN          shift and go to state 75


state 62

    (19) repeat_range -> numrange WHITESPACE BACKTRACK MINUS . of
    (27) of -> . WHITESPACE VARNAME

    WHITESPACE      shift and go to state 35

    of                             shift and go to state 76

state 63

    (29) lookup_chain -> lookup SLASH lookup_chain .

    NEWLINE         reduce using rule 29 (lookup_chain -> lookup SLASH lookup_chain .)


state 64

    (13) lookup_expr -> SLASH lookup_chain NEWLINE optional_block .

    GLOBALMARK      reduce using rule 13 (lookup_expr -> SLASH lookup_chain NEWLINE optional_block .)
    VARNAME         reduce using rule 13 (lookup_expr -> SLASH lookup_chain NEWLINE optional_block .)
    DOT             reduce using rule 13 (lookup_expr -> SLASH lookup_chain NEWLINE optional_block .)
    LPAREN          reduce using rule 13 (lookup_expr -> SLASH lookup_chain NEWLINE optional_block .)
    DEDENT          reduce using rule 13 (lookup_expr -> SLASH lookup_chain NEWLINE optional_block .)
    $end            reduce using rule 13 (lookup_expr -> SLASH lookup_chain NEWLINE optional_block .)


state 65

    (47) charclass -> CHARCLASS NEWLINE . optional_block
    (32) optional_block -> . begin_block definitions end_block
    (33) optional_block -> .
    (34) begin_block -> . INDENT

    $end            reduce using rule 33 (optional_block -> .)
    DEDENT          reduce using rule 33 (optional_block -> .)
    GLOBALMARK      reduce using rule 33 (optional_block -> .)
    VARNAME         reduce using rule 33 (optional_block -> .)
    DOT             reduce using rule 33 (optional_block -> .)
    LPAREN          reduce using rule 33 (optional_block -> .)
    INDENT          shift and go to state 42

    begin_block                    shift and go to state 41
    optional_block                 shift and go to state 77

state 66

    (20) repeat_range -> NUMBER WHITESPACE BACKTRACK PLUS DOT . DOT of
    (21) repeat_range -> NUMBER WHITESPACE BACKTRACK PLUS DOT . DOT NUMBER of

    DOT             shift and go to state 78


state 67

    (37) definitions -> definition definitions .

    DEDENT          reduce using rule 37 (definitions -> definition definitions .)


state 68

    (39) definition -> GLOBALMARK assignment .

    GLOBALMARK      reduce using rule 39 (definition -> GLOBALMARK assignment .)
    VARNAME         reduce using rule 39 (definition -> GLOBALMARK assignment .)
    DOT             reduce using rule 39 (definition -> GLOBALMARK assignment .)
    LPAREN          reduce using rule 39 (definition -> GLOBALMARK assignment .)
    DEDENT          reduce using rule 39 (definition -> GLOBALMARK assignment .)


state 69

    (45) declaration -> LPAREN VARNAME . RPAREN

    RPAREN          shift and go to state 79


state 70

    (42) assignment -> declaration COLON . charclass
    (47) charclass -> . CHARCLASS NEWLINE optional_block

    CHARCLASS       shift and go to state 49

    charclass                      shift and go to state 80

state 71

    (40) assignment -> declaration EQUALSIGN . assignment
    (41) assignment -> declaration EQUALSIGN . expression
    (40) assignment -> . declaration EQUALSIGN assignment
    (41) assignment -> . declaration EQUALSIGN expression
    (42) assignment -> . declaration COLON charclass
    (6) expression -> . repeat_expr
    (7) expression -> . string_expr
    (8) expression -> . lookup_expr
    (43) declaration -> . VARNAME
    (44) declaration -> . DOT VARNAME
    (45) declaration -> . LPAREN VARNAME RPAREN
    (46) declaration -> . DOT LPAREN VARNAME RPAREN
    (9) repeat_expr -> . quantifier WHITESPACE expression
    (10) repeat_expr -> . quantifier COLON charclass
    (11) string_expr -> . STRING NEWLINE optional_block
    (12) lookup_expr -> . lookup NEWLINE optional_block
    (13) lookup_expr -> . SLASH lookup_chain NEWLINE optional_block
    (14) quantifier -> . repeat_N_times
    (15) quantifier -> . repeat_range
    (16) quantifier -> . optionalize
    (30) lookup -> . VARNAME
    (31) lookup -> . VARNAME QUESTMARK
    (17) repeat_N_times -> . NUMBER of
    (18) repeat_range -> . numrange of
    (19) repeat_range -> . numrange WHITESPACE BACKTRACK MINUS of
    (20) repeat_range -> . NUMBER WHITESPACE BACKTRACK PLUS DOT DOT of
    (21) repeat_range -> . NUMBER WHITESPACE BACKTRACK PLUS DOT DOT NUMBER of
    (22) optionalize -> . QUESTMARK of
    (23) numrange -> . DOT DOT
    (24) numrange -> . NUMBER DOT DOT
    (25) numrange -> . DOT DOT NUMBER
    (26) numrange -> . NUMBER DOT DOT NUMBER

    VARNAME         shift and go to state 81
    DOT             shift and go to state 82
    LPAREN          shift and go to state 58
    STRING          shift and go to state 13
    SLASH           shift and go to state 15
    NUMBER          shift and go to state 8
    QUESTMARK       shift and go to state 17

    optionalize                    shift and go to state 11
    repeat_N_times                 shift and go to state 4
    assignment                     shift and go to state 83
    repeat_range                   shift and go to state 7
    numrange                       shift and go to state 14
    expression                     shift and go to state 84
    repeat_expr                    shift and go to state 5
    declaration                    shift and go to state 59
    lookup                         shift and go to state 12
    quantifier                     shift and go to state 16
    lookup_expr                    shift and go to state 9
    string_expr                    shift and go to state 20

state 72

    (32) optional_block -> begin_block definitions end_block .

    $end            reduce using rule 32 (optional_block -> begin_block definitions end_block .)
    DEDENT          reduce using rule 32 (optional_block -> begin_block definitions end_block .)
    GLOBALMARK      reduce using rule 32 (optional_block -> begin_block definitions end_block .)
    VARNAME         reduce using rule 32 (optional_block -> begin_block definitions end_block .)
    DOT             reduce using rule 32 (optional_block -> begin_block definitions end_block .)
    LPAREN          reduce using rule 32 (optional_block -> begin_block definitions end_block .)


state 73

    (35) end_block -> DEDENT .

    $end            reduce using rule 35 (end_block -> DEDENT .)
    DEDENT          reduce using rule 35 (end_block -> DEDENT .)
    GLOBALMARK      reduce using rule 35 (end_block -> DEDENT .)
    VARNAME         reduce using rule 35 (end_block -> DEDENT .)
    DOT             reduce using rule 35 (end_block -> DEDENT .)
    LPAREN          reduce using rule 35 (end_block -> DEDENT .)


state 74

    (44) declaration -> DOT VARNAME .

    EQUALSIGN       reduce using rule 44 (declaration -> DOT VARNAME .)
    COLON           reduce using rule 44 (declaration -> DOT VARNAME .)


state 75

    (46) declaration -> DOT LPAREN . VARNAME RPAREN

    VARNAME         shift and go to state 85


state 76

    (19) repeat_range -> numrange WHITESPACE BACKTRACK MINUS of .

    WHITESPACE      reduce using rule 19 (repeat_range -> numrange WHITESPACE BACKTRACK MINUS of .)
    COLON           reduce using rule 19 (repeat_range -> numrange WHITESPACE BACKTRACK MINUS of .)


state 77

    (47) charclass -> CHARCLASS NEWLINE optional_block .

    $end            reduce using rule 47 (charclass -> CHARCLASS NEWLINE optional_block .)
    DEDENT          reduce using rule 47 (charclass -> CHARCLASS NEWLINE optional_block .)
    GLOBALMARK      reduce using rule 47 (charclass -> CHARCLASS NEWLINE optional_block .)
    VARNAME         reduce using rule 47 (charclass -> CHARCLASS NEWLINE optional_block .)
    DOT             reduce using rule 47 (charclass -> CHARCLASS NEWLINE optional_block .)
    LPAREN          reduce using rule 47 (charclass -> CHARCLASS NEWLINE optional_block .)


state 78

    (20) repeat_range -> NUMBER WHITESPACE BACKTRACK PLUS DOT DOT . of
    (21) repeat_range -> NUMBER WHITESPACE BACKTRACK PLUS DOT DOT . NUMBER of
    (27) of -> . WHITESPACE VARNAME

    NUMBER          shift and go to state 87
    WHITESPACE      shift and go to state 35

    of                             shift and go to state 86

state 79

    (45) declaration -> LPAREN VARNAME RPAREN .

    EQUALSIGN       reduce using rule 45 (declaration -> LPAREN VARNAME RPAREN .)
    COLON           reduce using rule 45 (declaration -> LPAREN VARNAME RPAREN .)


state 80

    (42) assignment -> declaration COLON charclass .

    GLOBALMARK      reduce using rule 42 (assignment -> declaration COLON charclass .)
    VARNAME         reduce using rule 42 (assignment -> declaration COLON charclass .)
    DOT             reduce using rule 42 (assignment -> declaration COLON charclass .)
    LPAREN          reduce using rule 42 (assignment -> declaration COLON charclass .)
    DEDENT          reduce using rule 42 (assignment -> declaration COLON charclass .)


state 81

    (43) declaration -> VARNAME .
    (30) lookup -> VARNAME .
    (31) lookup -> VARNAME . QUESTMARK

    EQUALSIGN       reduce using rule 43 (declaration -> VARNAME .)
    COLON           reduce using rule 43 (declaration -> VARNAME .)
    NEWLINE         reduce using rule 30 (lookup -> VARNAME .)
    QUESTMARK       shift and go to state 21


state 82

    (44) declaration -> DOT . VARNAME
    (46) declaration -> DOT . LPAREN VARNAME RPAREN
    (23) numrange -> DOT . DOT
    (25) numrange -> DOT . DOT NUMBER

    VARNAME         shift and go to state 74
    LPAREN          shift and go to state 75
    DOT             shift and go to state 25


state 83

    (40) assignment -> declaration EQUALSIGN assignment .

    GLOBALMARK      reduce using rule 40 (assignment -> declaration EQUALSIGN assignment .)
    VARNAME         reduce using rule 40 (assignment -> declaration EQUALSIGN assignment .)
    DOT             reduce using rule 40 (assignment -> declaration EQUALSIGN assignment .)
    LPAREN          reduce using rule 40 (assignment -> declaration EQUALSIGN assignment .)
    DEDENT          reduce using rule 40 (assignment -> declaration EQUALSIGN assignment .)


state 84

    (41) assignment -> declaration EQUALSIGN expression .

    GLOBALMARK      reduce using rule 41 (assignment -> declaration EQUALSIGN expression .)
    VARNAME         reduce using rule 41 (assignment -> declaration EQUALSIGN expression .)
    DOT             reduce using rule 41 (assignment -> declaration EQUALSIGN expression .)
    LPAREN          reduce using rule 41 (assignment -> declaration EQUALSIGN expression .)
    DEDENT          reduce using rule 41 (assignment -> declaration EQUALSIGN expression .)


state 85

    (46) declaration -> DOT LPAREN VARNAME . RPAREN

    RPAREN          shift and go to state 88


state 86

    (20) repeat_range -> NUMBER WHITESPACE BACKTRACK PLUS DOT DOT of .

    WHITESPACE      reduce using rule 20 (repeat_range -> NUMBER WHITESPACE BACKTRACK PLUS DOT DOT of .)
    COLON           reduce using rule 20 (repeat_range -> NUMBER WHITESPACE BACKTRACK PLUS DOT DOT of .)


state 87

    (21) repeat_range -> NUMBER WHITESPACE BACKTRACK PLUS DOT DOT NUMBER . of
    (27) of -> . WHITESPACE VARNAME

    WHITESPACE      shift and go to state 35

    of                             shift and go to state 89

state 88

    (46) declaration -> DOT LPAREN VARNAME RPAREN .

    EQUALSIGN       reduce using rule 46 (declaration -> DOT LPAREN VARNAME RPAREN .)
    COLON           reduce using rule 46 (declaration -> DOT LPAREN VARNAME RPAREN .)


state 89

    (21) repeat_range -> NUMBER WHITESPACE BACKTRACK PLUS DOT DOT NUMBER of .

    WHITESPACE      reduce using rule 21 (repeat_range -> NUMBER WHITESPACE BACKTRACK PLUS DOT DOT NUMBER of .)
    COLON           reduce using rule 21 (repeat_range -> NUMBER WHITESPACE BACKTRACK PLUS DOT DOT NUMBER of .)

