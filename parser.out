Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> oprex
Rule 1     oprex -> <empty>
Rule 2     oprex -> WHITESPACE
Rule 3     oprex -> NEWLINE
Rule 4     oprex -> NEWLINE expression
Rule 5     oprex -> NEWLINE INDENT expression DEDENT
Rule 6     expression -> value NEWLINE optional_subblock
Rule 7     expression -> quantifier WHITESPACE STRING NEWLINE
Rule 8     expression -> quantifier WHITESPACE expression
Rule 9     expression -> quantifier COLON charclass
Rule 10    value -> VARNAME
Rule 11    value -> SLASH chain
Rule 12    quantifier -> NUMBER WHITESPACE VARNAME
Rule 13    quantifier -> NUMBER DOTDOT WHITESPACE VARNAME
Rule 14    quantifier -> NUMBER DOTDOT NUMBER WHITESPACE VARNAME
Rule 15    quantifier -> NUMBER DOTDOT WHITESPACE BACKTRACK MINUS WHITESPACE VARNAME
Rule 16    quantifier -> NUMBER DOTDOT NUMBER WHITESPACE BACKTRACK MINUS WHITESPACE VARNAME
Rule 17    quantifier -> NUMBER WHITESPACE BACKTRACK PLUS DOTDOT WHITESPACE VARNAME
Rule 18    quantifier -> NUMBER WHITESPACE BACKTRACK PLUS DOTDOT NUMBER WHITESPACE VARNAME
Rule 19    chain -> cell SLASH
Rule 20    chain -> chain cell SLASH
Rule 21    cell -> VARNAME
Rule 22    cell -> VARNAME QUESTMARK
Rule 23    cell -> LPAREN VARNAME RPAREN
Rule 24    cell -> LPAREN VARNAME RPAREN QUESTMARK
Rule 25    cell -> LPAREN VARNAME QUESTMARK RPAREN
Rule 26    optional_subblock -> begin_block definitions end_block
Rule 27    optional_subblock -> <empty>
Rule 28    begin_block -> INDENT
Rule 29    end_block -> DEDENT
Rule 30    definitions -> definition
Rule 31    definitions -> definition definitions
Rule 32    definition -> assignment
Rule 33    definition -> GLOBALMARK assignment
Rule 34    assignment -> VARNAME EQUALSIGN assignment
Rule 35    assignment -> VARNAME EQUALSIGN expression
Rule 36    assignment -> VARNAME EQUALSIGN STRING NEWLINE
Rule 37    assignment -> VARNAME COLON charclass
Rule 38    charclass -> CHARCLASS NEWLINE optional_subblock

Terminals, with rules where they appear

BACKTRACK            : 15 16 17 18
CHARCLASS            : 38
COLON                : 9 37
DEDENT               : 5 29
DOTDOT               : 13 14 15 16 17 18
EQUALSIGN            : 34 35 36
GLOBALMARK           : 33
INDENT               : 5 28
LPAREN               : 23 24 25
MINUS                : 15 16
NEWLINE              : 3 4 5 6 7 36 38
NUMBER               : 12 13 14 14 15 16 16 17 18 18
PLUS                 : 17 18
QUESTMARK            : 22 24 25
RPAREN               : 23 24 25
SLASH                : 11 19 20
STRING               : 7 36
VARNAME              : 10 12 13 14 15 16 17 18 21 22 23 24 25 34 35 36 37
WHITESPACE           : 2 7 8 12 13 14 15 15 16 16 17 17 18 18
error                : 

Nonterminals, with rules where they appear

assignment           : 32 33 34
begin_block          : 26
cell                 : 19 20
chain                : 11 20
charclass            : 9 37
definition           : 30 31
definitions          : 26 31
end_block            : 26
expression           : 4 5 8 35
oprex                : 0
optional_subblock    : 6 38
quantifier           : 7 8 9
value                : 6

Parsing method: LALR

state 0

    (0) S' -> . oprex
    (1) oprex -> .
    (2) oprex -> . WHITESPACE
    (3) oprex -> . NEWLINE
    (4) oprex -> . NEWLINE expression
    (5) oprex -> . NEWLINE INDENT expression DEDENT

    $end            reduce using rule 1 (oprex -> .)
    WHITESPACE      shift and go to state 2
    NEWLINE         shift and go to state 3

    oprex                          shift and go to state 1

state 1

    (0) S' -> oprex .



state 2

    (2) oprex -> WHITESPACE .

    $end            reduce using rule 2 (oprex -> WHITESPACE .)


state 3

    (3) oprex -> NEWLINE .
    (4) oprex -> NEWLINE . expression
    (5) oprex -> NEWLINE . INDENT expression DEDENT
    (6) expression -> . value NEWLINE optional_subblock
    (7) expression -> . quantifier WHITESPACE STRING NEWLINE
    (8) expression -> . quantifier WHITESPACE expression
    (9) expression -> . quantifier COLON charclass
    (10) value -> . VARNAME
    (11) value -> . SLASH chain
    (12) quantifier -> . NUMBER WHITESPACE VARNAME
    (13) quantifier -> . NUMBER DOTDOT WHITESPACE VARNAME
    (14) quantifier -> . NUMBER DOTDOT NUMBER WHITESPACE VARNAME
    (15) quantifier -> . NUMBER DOTDOT WHITESPACE BACKTRACK MINUS WHITESPACE VARNAME
    (16) quantifier -> . NUMBER DOTDOT NUMBER WHITESPACE BACKTRACK MINUS WHITESPACE VARNAME
    (17) quantifier -> . NUMBER WHITESPACE BACKTRACK PLUS DOTDOT WHITESPACE VARNAME
    (18) quantifier -> . NUMBER WHITESPACE BACKTRACK PLUS DOTDOT NUMBER WHITESPACE VARNAME

    $end            reduce using rule 3 (oprex -> NEWLINE .)
    INDENT          shift and go to state 4
    VARNAME         shift and go to state 5
    SLASH           shift and go to state 8
    NUMBER          shift and go to state 6

    value                          shift and go to state 7
    quantifier                     shift and go to state 9
    expression                     shift and go to state 10

state 4

    (5) oprex -> NEWLINE INDENT . expression DEDENT
    (6) expression -> . value NEWLINE optional_subblock
    (7) expression -> . quantifier WHITESPACE STRING NEWLINE
    (8) expression -> . quantifier WHITESPACE expression
    (9) expression -> . quantifier COLON charclass
    (10) value -> . VARNAME
    (11) value -> . SLASH chain
    (12) quantifier -> . NUMBER WHITESPACE VARNAME
    (13) quantifier -> . NUMBER DOTDOT WHITESPACE VARNAME
    (14) quantifier -> . NUMBER DOTDOT NUMBER WHITESPACE VARNAME
    (15) quantifier -> . NUMBER DOTDOT WHITESPACE BACKTRACK MINUS WHITESPACE VARNAME
    (16) quantifier -> . NUMBER DOTDOT NUMBER WHITESPACE BACKTRACK MINUS WHITESPACE VARNAME
    (17) quantifier -> . NUMBER WHITESPACE BACKTRACK PLUS DOTDOT WHITESPACE VARNAME
    (18) quantifier -> . NUMBER WHITESPACE BACKTRACK PLUS DOTDOT NUMBER WHITESPACE VARNAME

    VARNAME         shift and go to state 5
    SLASH           shift and go to state 8
    NUMBER          shift and go to state 6

    value                          shift and go to state 7
    quantifier                     shift and go to state 9
    expression                     shift and go to state 11

state 5

    (10) value -> VARNAME .

    NEWLINE         reduce using rule 10 (value -> VARNAME .)


state 6

    (12) quantifier -> NUMBER . WHITESPACE VARNAME
    (13) quantifier -> NUMBER . DOTDOT WHITESPACE VARNAME
    (14) quantifier -> NUMBER . DOTDOT NUMBER WHITESPACE VARNAME
    (15) quantifier -> NUMBER . DOTDOT WHITESPACE BACKTRACK MINUS WHITESPACE VARNAME
    (16) quantifier -> NUMBER . DOTDOT NUMBER WHITESPACE BACKTRACK MINUS WHITESPACE VARNAME
    (17) quantifier -> NUMBER . WHITESPACE BACKTRACK PLUS DOTDOT WHITESPACE VARNAME
    (18) quantifier -> NUMBER . WHITESPACE BACKTRACK PLUS DOTDOT NUMBER WHITESPACE VARNAME

    WHITESPACE      shift and go to state 12
    DOTDOT          shift and go to state 13


state 7

    (6) expression -> value . NEWLINE optional_subblock

    NEWLINE         shift and go to state 14


state 8

    (11) value -> SLASH . chain
    (19) chain -> . cell SLASH
    (20) chain -> . chain cell SLASH
    (21) cell -> . VARNAME
    (22) cell -> . VARNAME QUESTMARK
    (23) cell -> . LPAREN VARNAME RPAREN
    (24) cell -> . LPAREN VARNAME RPAREN QUESTMARK
    (25) cell -> . LPAREN VARNAME QUESTMARK RPAREN

    VARNAME         shift and go to state 16
    LPAREN          shift and go to state 18

    cell                           shift and go to state 17
    chain                          shift and go to state 15

state 9

    (7) expression -> quantifier . WHITESPACE STRING NEWLINE
    (8) expression -> quantifier . WHITESPACE expression
    (9) expression -> quantifier . COLON charclass

    WHITESPACE      shift and go to state 19
    COLON           shift and go to state 20


state 10

    (4) oprex -> NEWLINE expression .

    $end            reduce using rule 4 (oprex -> NEWLINE expression .)


state 11

    (5) oprex -> NEWLINE INDENT expression . DEDENT

    DEDENT          shift and go to state 21


state 12

    (12) quantifier -> NUMBER WHITESPACE . VARNAME
    (17) quantifier -> NUMBER WHITESPACE . BACKTRACK PLUS DOTDOT WHITESPACE VARNAME
    (18) quantifier -> NUMBER WHITESPACE . BACKTRACK PLUS DOTDOT NUMBER WHITESPACE VARNAME

    VARNAME         shift and go to state 23
    BACKTRACK       shift and go to state 22


state 13

    (13) quantifier -> NUMBER DOTDOT . WHITESPACE VARNAME
    (14) quantifier -> NUMBER DOTDOT . NUMBER WHITESPACE VARNAME
    (15) quantifier -> NUMBER DOTDOT . WHITESPACE BACKTRACK MINUS WHITESPACE VARNAME
    (16) quantifier -> NUMBER DOTDOT . NUMBER WHITESPACE BACKTRACK MINUS WHITESPACE VARNAME

    WHITESPACE      shift and go to state 24
    NUMBER          shift and go to state 25


state 14

    (6) expression -> value NEWLINE . optional_subblock
    (26) optional_subblock -> . begin_block definitions end_block
    (27) optional_subblock -> .
    (28) begin_block -> . INDENT

    $end            reduce using rule 27 (optional_subblock -> .)
    DEDENT          reduce using rule 27 (optional_subblock -> .)
    GLOBALMARK      reduce using rule 27 (optional_subblock -> .)
    VARNAME         reduce using rule 27 (optional_subblock -> .)
    INDENT          shift and go to state 27

    begin_block                    shift and go to state 26
    optional_subblock              shift and go to state 28

state 15

    (11) value -> SLASH chain .
    (20) chain -> chain . cell SLASH
    (21) cell -> . VARNAME
    (22) cell -> . VARNAME QUESTMARK
    (23) cell -> . LPAREN VARNAME RPAREN
    (24) cell -> . LPAREN VARNAME RPAREN QUESTMARK
    (25) cell -> . LPAREN VARNAME QUESTMARK RPAREN

    NEWLINE         reduce using rule 11 (value -> SLASH chain .)
    VARNAME         shift and go to state 16
    LPAREN          shift and go to state 18

    cell                           shift and go to state 29

state 16

    (21) cell -> VARNAME .
    (22) cell -> VARNAME . QUESTMARK

    SLASH           reduce using rule 21 (cell -> VARNAME .)
    QUESTMARK       shift and go to state 30


state 17

    (19) chain -> cell . SLASH

    SLASH           shift and go to state 31


state 18

    (23) cell -> LPAREN . VARNAME RPAREN
    (24) cell -> LPAREN . VARNAME RPAREN QUESTMARK
    (25) cell -> LPAREN . VARNAME QUESTMARK RPAREN

    VARNAME         shift and go to state 32


state 19

    (7) expression -> quantifier WHITESPACE . STRING NEWLINE
    (8) expression -> quantifier WHITESPACE . expression
    (6) expression -> . value NEWLINE optional_subblock
    (7) expression -> . quantifier WHITESPACE STRING NEWLINE
    (8) expression -> . quantifier WHITESPACE expression
    (9) expression -> . quantifier COLON charclass
    (10) value -> . VARNAME
    (11) value -> . SLASH chain
    (12) quantifier -> . NUMBER WHITESPACE VARNAME
    (13) quantifier -> . NUMBER DOTDOT WHITESPACE VARNAME
    (14) quantifier -> . NUMBER DOTDOT NUMBER WHITESPACE VARNAME
    (15) quantifier -> . NUMBER DOTDOT WHITESPACE BACKTRACK MINUS WHITESPACE VARNAME
    (16) quantifier -> . NUMBER DOTDOT NUMBER WHITESPACE BACKTRACK MINUS WHITESPACE VARNAME
    (17) quantifier -> . NUMBER WHITESPACE BACKTRACK PLUS DOTDOT WHITESPACE VARNAME
    (18) quantifier -> . NUMBER WHITESPACE BACKTRACK PLUS DOTDOT NUMBER WHITESPACE VARNAME

    STRING          shift and go to state 34
    VARNAME         shift and go to state 5
    SLASH           shift and go to state 8
    NUMBER          shift and go to state 6

    value                          shift and go to state 7
    quantifier                     shift and go to state 9
    expression                     shift and go to state 33

state 20

    (9) expression -> quantifier COLON . charclass
    (38) charclass -> . CHARCLASS NEWLINE optional_subblock

    CHARCLASS       shift and go to state 36

    charclass                      shift and go to state 35

state 21

    (5) oprex -> NEWLINE INDENT expression DEDENT .

    $end            reduce using rule 5 (oprex -> NEWLINE INDENT expression DEDENT .)


state 22

    (17) quantifier -> NUMBER WHITESPACE BACKTRACK . PLUS DOTDOT WHITESPACE VARNAME
    (18) quantifier -> NUMBER WHITESPACE BACKTRACK . PLUS DOTDOT NUMBER WHITESPACE VARNAME

    PLUS            shift and go to state 37


state 23

    (12) quantifier -> NUMBER WHITESPACE VARNAME .

    WHITESPACE      reduce using rule 12 (quantifier -> NUMBER WHITESPACE VARNAME .)
    COLON           reduce using rule 12 (quantifier -> NUMBER WHITESPACE VARNAME .)


state 24

    (13) quantifier -> NUMBER DOTDOT WHITESPACE . VARNAME
    (15) quantifier -> NUMBER DOTDOT WHITESPACE . BACKTRACK MINUS WHITESPACE VARNAME

    VARNAME         shift and go to state 39
    BACKTRACK       shift and go to state 38


state 25

    (14) quantifier -> NUMBER DOTDOT NUMBER . WHITESPACE VARNAME
    (16) quantifier -> NUMBER DOTDOT NUMBER . WHITESPACE BACKTRACK MINUS WHITESPACE VARNAME

    WHITESPACE      shift and go to state 40


state 26

    (26) optional_subblock -> begin_block . definitions end_block
    (30) definitions -> . definition
    (31) definitions -> . definition definitions
    (32) definition -> . assignment
    (33) definition -> . GLOBALMARK assignment
    (34) assignment -> . VARNAME EQUALSIGN assignment
    (35) assignment -> . VARNAME EQUALSIGN expression
    (36) assignment -> . VARNAME EQUALSIGN STRING NEWLINE
    (37) assignment -> . VARNAME COLON charclass

    GLOBALMARK      shift and go to state 43
    VARNAME         shift and go to state 44

    definition                     shift and go to state 41
    assignment                     shift and go to state 42
    definitions                    shift and go to state 45

state 27

    (28) begin_block -> INDENT .

    GLOBALMARK      reduce using rule 28 (begin_block -> INDENT .)
    VARNAME         reduce using rule 28 (begin_block -> INDENT .)


state 28

    (6) expression -> value NEWLINE optional_subblock .

    GLOBALMARK      reduce using rule 6 (expression -> value NEWLINE optional_subblock .)
    VARNAME         reduce using rule 6 (expression -> value NEWLINE optional_subblock .)
    DEDENT          reduce using rule 6 (expression -> value NEWLINE optional_subblock .)
    $end            reduce using rule 6 (expression -> value NEWLINE optional_subblock .)


state 29

    (20) chain -> chain cell . SLASH

    SLASH           shift and go to state 46


state 30

    (22) cell -> VARNAME QUESTMARK .

    SLASH           reduce using rule 22 (cell -> VARNAME QUESTMARK .)


state 31

    (19) chain -> cell SLASH .

    VARNAME         reduce using rule 19 (chain -> cell SLASH .)
    LPAREN          reduce using rule 19 (chain -> cell SLASH .)
    NEWLINE         reduce using rule 19 (chain -> cell SLASH .)


state 32

    (23) cell -> LPAREN VARNAME . RPAREN
    (24) cell -> LPAREN VARNAME . RPAREN QUESTMARK
    (25) cell -> LPAREN VARNAME . QUESTMARK RPAREN

    RPAREN          shift and go to state 48
    QUESTMARK       shift and go to state 47


state 33

    (8) expression -> quantifier WHITESPACE expression .

    GLOBALMARK      reduce using rule 8 (expression -> quantifier WHITESPACE expression .)
    VARNAME         reduce using rule 8 (expression -> quantifier WHITESPACE expression .)
    DEDENT          reduce using rule 8 (expression -> quantifier WHITESPACE expression .)
    $end            reduce using rule 8 (expression -> quantifier WHITESPACE expression .)


state 34

    (7) expression -> quantifier WHITESPACE STRING . NEWLINE

    NEWLINE         shift and go to state 49


state 35

    (9) expression -> quantifier COLON charclass .

    GLOBALMARK      reduce using rule 9 (expression -> quantifier COLON charclass .)
    VARNAME         reduce using rule 9 (expression -> quantifier COLON charclass .)
    DEDENT          reduce using rule 9 (expression -> quantifier COLON charclass .)
    $end            reduce using rule 9 (expression -> quantifier COLON charclass .)


state 36

    (38) charclass -> CHARCLASS . NEWLINE optional_subblock

    NEWLINE         shift and go to state 50


state 37

    (17) quantifier -> NUMBER WHITESPACE BACKTRACK PLUS . DOTDOT WHITESPACE VARNAME
    (18) quantifier -> NUMBER WHITESPACE BACKTRACK PLUS . DOTDOT NUMBER WHITESPACE VARNAME

    DOTDOT          shift and go to state 51


state 38

    (15) quantifier -> NUMBER DOTDOT WHITESPACE BACKTRACK . MINUS WHITESPACE VARNAME

    MINUS           shift and go to state 52


state 39

    (13) quantifier -> NUMBER DOTDOT WHITESPACE VARNAME .

    WHITESPACE      reduce using rule 13 (quantifier -> NUMBER DOTDOT WHITESPACE VARNAME .)
    COLON           reduce using rule 13 (quantifier -> NUMBER DOTDOT WHITESPACE VARNAME .)


state 40

    (14) quantifier -> NUMBER DOTDOT NUMBER WHITESPACE . VARNAME
    (16) quantifier -> NUMBER DOTDOT NUMBER WHITESPACE . BACKTRACK MINUS WHITESPACE VARNAME

    VARNAME         shift and go to state 54
    BACKTRACK       shift and go to state 53


state 41

    (30) definitions -> definition .
    (31) definitions -> definition . definitions
    (30) definitions -> . definition
    (31) definitions -> . definition definitions
    (32) definition -> . assignment
    (33) definition -> . GLOBALMARK assignment
    (34) assignment -> . VARNAME EQUALSIGN assignment
    (35) assignment -> . VARNAME EQUALSIGN expression
    (36) assignment -> . VARNAME EQUALSIGN STRING NEWLINE
    (37) assignment -> . VARNAME COLON charclass

    DEDENT          reduce using rule 30 (definitions -> definition .)
    GLOBALMARK      shift and go to state 43
    VARNAME         shift and go to state 44

    definition                     shift and go to state 41
    assignment                     shift and go to state 42
    definitions                    shift and go to state 55

state 42

    (32) definition -> assignment .

    GLOBALMARK      reduce using rule 32 (definition -> assignment .)
    VARNAME         reduce using rule 32 (definition -> assignment .)
    DEDENT          reduce using rule 32 (definition -> assignment .)


state 43

    (33) definition -> GLOBALMARK . assignment
    (34) assignment -> . VARNAME EQUALSIGN assignment
    (35) assignment -> . VARNAME EQUALSIGN expression
    (36) assignment -> . VARNAME EQUALSIGN STRING NEWLINE
    (37) assignment -> . VARNAME COLON charclass

    VARNAME         shift and go to state 44

    assignment                     shift and go to state 56

state 44

    (34) assignment -> VARNAME . EQUALSIGN assignment
    (35) assignment -> VARNAME . EQUALSIGN expression
    (36) assignment -> VARNAME . EQUALSIGN STRING NEWLINE
    (37) assignment -> VARNAME . COLON charclass

    EQUALSIGN       shift and go to state 58
    COLON           shift and go to state 57


state 45

    (26) optional_subblock -> begin_block definitions . end_block
    (29) end_block -> . DEDENT

    DEDENT          shift and go to state 60

    end_block                      shift and go to state 59

state 46

    (20) chain -> chain cell SLASH .

    VARNAME         reduce using rule 20 (chain -> chain cell SLASH .)
    LPAREN          reduce using rule 20 (chain -> chain cell SLASH .)
    NEWLINE         reduce using rule 20 (chain -> chain cell SLASH .)


state 47

    (25) cell -> LPAREN VARNAME QUESTMARK . RPAREN

    RPAREN          shift and go to state 61


state 48

    (23) cell -> LPAREN VARNAME RPAREN .
    (24) cell -> LPAREN VARNAME RPAREN . QUESTMARK

    SLASH           reduce using rule 23 (cell -> LPAREN VARNAME RPAREN .)
    QUESTMARK       shift and go to state 62


state 49

    (7) expression -> quantifier WHITESPACE STRING NEWLINE .

    GLOBALMARK      reduce using rule 7 (expression -> quantifier WHITESPACE STRING NEWLINE .)
    VARNAME         reduce using rule 7 (expression -> quantifier WHITESPACE STRING NEWLINE .)
    DEDENT          reduce using rule 7 (expression -> quantifier WHITESPACE STRING NEWLINE .)
    $end            reduce using rule 7 (expression -> quantifier WHITESPACE STRING NEWLINE .)


state 50

    (38) charclass -> CHARCLASS NEWLINE . optional_subblock
    (26) optional_subblock -> . begin_block definitions end_block
    (27) optional_subblock -> .
    (28) begin_block -> . INDENT

    $end            reduce using rule 27 (optional_subblock -> .)
    DEDENT          reduce using rule 27 (optional_subblock -> .)
    GLOBALMARK      reduce using rule 27 (optional_subblock -> .)
    VARNAME         reduce using rule 27 (optional_subblock -> .)
    INDENT          shift and go to state 27

    begin_block                    shift and go to state 26
    optional_subblock              shift and go to state 63

state 51

    (17) quantifier -> NUMBER WHITESPACE BACKTRACK PLUS DOTDOT . WHITESPACE VARNAME
    (18) quantifier -> NUMBER WHITESPACE BACKTRACK PLUS DOTDOT . NUMBER WHITESPACE VARNAME

    WHITESPACE      shift and go to state 64
    NUMBER          shift and go to state 65


state 52

    (15) quantifier -> NUMBER DOTDOT WHITESPACE BACKTRACK MINUS . WHITESPACE VARNAME

    WHITESPACE      shift and go to state 66


state 53

    (16) quantifier -> NUMBER DOTDOT NUMBER WHITESPACE BACKTRACK . MINUS WHITESPACE VARNAME

    MINUS           shift and go to state 67


state 54

    (14) quantifier -> NUMBER DOTDOT NUMBER WHITESPACE VARNAME .

    WHITESPACE      reduce using rule 14 (quantifier -> NUMBER DOTDOT NUMBER WHITESPACE VARNAME .)
    COLON           reduce using rule 14 (quantifier -> NUMBER DOTDOT NUMBER WHITESPACE VARNAME .)


state 55

    (31) definitions -> definition definitions .

    DEDENT          reduce using rule 31 (definitions -> definition definitions .)


state 56

    (33) definition -> GLOBALMARK assignment .

    GLOBALMARK      reduce using rule 33 (definition -> GLOBALMARK assignment .)
    VARNAME         reduce using rule 33 (definition -> GLOBALMARK assignment .)
    DEDENT          reduce using rule 33 (definition -> GLOBALMARK assignment .)


state 57

    (37) assignment -> VARNAME COLON . charclass
    (38) charclass -> . CHARCLASS NEWLINE optional_subblock

    CHARCLASS       shift and go to state 36

    charclass                      shift and go to state 68

state 58

    (34) assignment -> VARNAME EQUALSIGN . assignment
    (35) assignment -> VARNAME EQUALSIGN . expression
    (36) assignment -> VARNAME EQUALSIGN . STRING NEWLINE
    (34) assignment -> . VARNAME EQUALSIGN assignment
    (35) assignment -> . VARNAME EQUALSIGN expression
    (36) assignment -> . VARNAME EQUALSIGN STRING NEWLINE
    (37) assignment -> . VARNAME COLON charclass
    (6) expression -> . value NEWLINE optional_subblock
    (7) expression -> . quantifier WHITESPACE STRING NEWLINE
    (8) expression -> . quantifier WHITESPACE expression
    (9) expression -> . quantifier COLON charclass
    (10) value -> . VARNAME
    (11) value -> . SLASH chain
    (12) quantifier -> . NUMBER WHITESPACE VARNAME
    (13) quantifier -> . NUMBER DOTDOT WHITESPACE VARNAME
    (14) quantifier -> . NUMBER DOTDOT NUMBER WHITESPACE VARNAME
    (15) quantifier -> . NUMBER DOTDOT WHITESPACE BACKTRACK MINUS WHITESPACE VARNAME
    (16) quantifier -> . NUMBER DOTDOT NUMBER WHITESPACE BACKTRACK MINUS WHITESPACE VARNAME
    (17) quantifier -> . NUMBER WHITESPACE BACKTRACK PLUS DOTDOT WHITESPACE VARNAME
    (18) quantifier -> . NUMBER WHITESPACE BACKTRACK PLUS DOTDOT NUMBER WHITESPACE VARNAME

    STRING          shift and go to state 69
    VARNAME         shift and go to state 70
    SLASH           shift and go to state 8
    NUMBER          shift and go to state 6

    assignment                     shift and go to state 71
    value                          shift and go to state 7
    quantifier                     shift and go to state 9
    expression                     shift and go to state 72

state 59

    (26) optional_subblock -> begin_block definitions end_block .

    $end            reduce using rule 26 (optional_subblock -> begin_block definitions end_block .)
    DEDENT          reduce using rule 26 (optional_subblock -> begin_block definitions end_block .)
    GLOBALMARK      reduce using rule 26 (optional_subblock -> begin_block definitions end_block .)
    VARNAME         reduce using rule 26 (optional_subblock -> begin_block definitions end_block .)


state 60

    (29) end_block -> DEDENT .

    $end            reduce using rule 29 (end_block -> DEDENT .)
    DEDENT          reduce using rule 29 (end_block -> DEDENT .)
    GLOBALMARK      reduce using rule 29 (end_block -> DEDENT .)
    VARNAME         reduce using rule 29 (end_block -> DEDENT .)


state 61

    (25) cell -> LPAREN VARNAME QUESTMARK RPAREN .

    SLASH           reduce using rule 25 (cell -> LPAREN VARNAME QUESTMARK RPAREN .)


state 62

    (24) cell -> LPAREN VARNAME RPAREN QUESTMARK .

    SLASH           reduce using rule 24 (cell -> LPAREN VARNAME RPAREN QUESTMARK .)


state 63

    (38) charclass -> CHARCLASS NEWLINE optional_subblock .

    $end            reduce using rule 38 (charclass -> CHARCLASS NEWLINE optional_subblock .)
    DEDENT          reduce using rule 38 (charclass -> CHARCLASS NEWLINE optional_subblock .)
    GLOBALMARK      reduce using rule 38 (charclass -> CHARCLASS NEWLINE optional_subblock .)
    VARNAME         reduce using rule 38 (charclass -> CHARCLASS NEWLINE optional_subblock .)


state 64

    (17) quantifier -> NUMBER WHITESPACE BACKTRACK PLUS DOTDOT WHITESPACE . VARNAME

    VARNAME         shift and go to state 73


state 65

    (18) quantifier -> NUMBER WHITESPACE BACKTRACK PLUS DOTDOT NUMBER . WHITESPACE VARNAME

    WHITESPACE      shift and go to state 74


state 66

    (15) quantifier -> NUMBER DOTDOT WHITESPACE BACKTRACK MINUS WHITESPACE . VARNAME

    VARNAME         shift and go to state 75


state 67

    (16) quantifier -> NUMBER DOTDOT NUMBER WHITESPACE BACKTRACK MINUS . WHITESPACE VARNAME

    WHITESPACE      shift and go to state 76


state 68

    (37) assignment -> VARNAME COLON charclass .

    GLOBALMARK      reduce using rule 37 (assignment -> VARNAME COLON charclass .)
    VARNAME         reduce using rule 37 (assignment -> VARNAME COLON charclass .)
    DEDENT          reduce using rule 37 (assignment -> VARNAME COLON charclass .)


state 69

    (36) assignment -> VARNAME EQUALSIGN STRING . NEWLINE

    NEWLINE         shift and go to state 77


state 70

    (34) assignment -> VARNAME . EQUALSIGN assignment
    (35) assignment -> VARNAME . EQUALSIGN expression
    (36) assignment -> VARNAME . EQUALSIGN STRING NEWLINE
    (37) assignment -> VARNAME . COLON charclass
    (10) value -> VARNAME .

    EQUALSIGN       shift and go to state 58
    COLON           shift and go to state 57
    NEWLINE         reduce using rule 10 (value -> VARNAME .)


state 71

    (34) assignment -> VARNAME EQUALSIGN assignment .

    GLOBALMARK      reduce using rule 34 (assignment -> VARNAME EQUALSIGN assignment .)
    VARNAME         reduce using rule 34 (assignment -> VARNAME EQUALSIGN assignment .)
    DEDENT          reduce using rule 34 (assignment -> VARNAME EQUALSIGN assignment .)


state 72

    (35) assignment -> VARNAME EQUALSIGN expression .

    GLOBALMARK      reduce using rule 35 (assignment -> VARNAME EQUALSIGN expression .)
    VARNAME         reduce using rule 35 (assignment -> VARNAME EQUALSIGN expression .)
    DEDENT          reduce using rule 35 (assignment -> VARNAME EQUALSIGN expression .)


state 73

    (17) quantifier -> NUMBER WHITESPACE BACKTRACK PLUS DOTDOT WHITESPACE VARNAME .

    WHITESPACE      reduce using rule 17 (quantifier -> NUMBER WHITESPACE BACKTRACK PLUS DOTDOT WHITESPACE VARNAME .)
    COLON           reduce using rule 17 (quantifier -> NUMBER WHITESPACE BACKTRACK PLUS DOTDOT WHITESPACE VARNAME .)


state 74

    (18) quantifier -> NUMBER WHITESPACE BACKTRACK PLUS DOTDOT NUMBER WHITESPACE . VARNAME

    VARNAME         shift and go to state 78


state 75

    (15) quantifier -> NUMBER DOTDOT WHITESPACE BACKTRACK MINUS WHITESPACE VARNAME .

    WHITESPACE      reduce using rule 15 (quantifier -> NUMBER DOTDOT WHITESPACE BACKTRACK MINUS WHITESPACE VARNAME .)
    COLON           reduce using rule 15 (quantifier -> NUMBER DOTDOT WHITESPACE BACKTRACK MINUS WHITESPACE VARNAME .)


state 76

    (16) quantifier -> NUMBER DOTDOT NUMBER WHITESPACE BACKTRACK MINUS WHITESPACE . VARNAME

    VARNAME         shift and go to state 79


state 77

    (36) assignment -> VARNAME EQUALSIGN STRING NEWLINE .

    GLOBALMARK      reduce using rule 36 (assignment -> VARNAME EQUALSIGN STRING NEWLINE .)
    VARNAME         reduce using rule 36 (assignment -> VARNAME EQUALSIGN STRING NEWLINE .)
    DEDENT          reduce using rule 36 (assignment -> VARNAME EQUALSIGN STRING NEWLINE .)


state 78

    (18) quantifier -> NUMBER WHITESPACE BACKTRACK PLUS DOTDOT NUMBER WHITESPACE VARNAME .

    WHITESPACE      reduce using rule 18 (quantifier -> NUMBER WHITESPACE BACKTRACK PLUS DOTDOT NUMBER WHITESPACE VARNAME .)
    COLON           reduce using rule 18 (quantifier -> NUMBER WHITESPACE BACKTRACK PLUS DOTDOT NUMBER WHITESPACE VARNAME .)


state 79

    (16) quantifier -> NUMBER DOTDOT NUMBER WHITESPACE BACKTRACK MINUS WHITESPACE VARNAME .

    WHITESPACE      reduce using rule 16 (quantifier -> NUMBER DOTDOT NUMBER WHITESPACE BACKTRACK MINUS WHITESPACE VARNAME .)
    COLON           reduce using rule 16 (quantifier -> NUMBER DOTDOT NUMBER WHITESPACE BACKTRACK MINUS WHITESPACE VARNAME .)

