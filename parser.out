Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> oprex
Rule 1     oprex -> <empty>
Rule 2     oprex -> WHITESPACE
Rule 3     oprex -> NEWLINE
Rule 4     oprex -> NEWLINE expression
Rule 5     oprex -> NEWLINE INDENT expression DEDENT
Rule 6     expression -> repeat_expr
Rule 7     expression -> string_expr
Rule 8     expression -> lookup_expr
Rule 9     repeat_expr -> quantifier WHITESPACE expression
Rule 10    repeat_expr -> quantifier COLON charclass
Rule 11    string_expr -> STRING NEWLINE optional_block
Rule 12    lookup_expr -> lookup NEWLINE optional_block
Rule 13    lookup_expr -> SLASH lookup_chain NEWLINE optional_block
Rule 14    quantifier -> repeat_N_times
Rule 15    quantifier -> repeat_range
Rule 16    quantifier -> optionalize
Rule 17    repeat_N_times -> NUMBER of
Rule 18    repeat_range -> numrange of
Rule 19    repeat_range -> numrange WHITESPACE BACKTRACK MINUS of
Rule 20    repeat_range -> NUMBER WHITESPACE BACKTRACK PLUS DOT DOT of
Rule 21    repeat_range -> NUMBER WHITESPACE BACKTRACK PLUS DOT DOT NUMBER of
Rule 22    optionalize -> optional of
Rule 23    numrange -> DOT DOT
Rule 24    numrange -> NUMBER DOT DOT
Rule 25    numrange -> DOT DOT NUMBER
Rule 26    numrange -> NUMBER DOT DOT NUMBER
Rule 27    of -> WHITESPACE VARNAME
Rule 28    lookup_chain -> lookup SLASH
Rule 29    lookup_chain -> lookup SLASH lookup_chain
Rule 30    lookup -> VARNAME
Rule 31    lookup -> VARNAME optional
Rule 32    optional -> QUESTMARK
Rule 33    optional -> QUESTMARK QUESTMARK
Rule 34    optional -> QUESTMARK EXCLAMARK
Rule 35    optional_block -> begin_block definitions end_block
Rule 36    optional_block -> <empty>
Rule 37    begin_block -> INDENT
Rule 38    end_block -> DEDENT
Rule 39    definitions -> definition
Rule 40    definitions -> definition definitions
Rule 41    definition -> assignment
Rule 42    definition -> GLOBALMARK assignment
Rule 43    assignment -> declaration EQUALSIGN assignment
Rule 44    assignment -> declaration EQUALSIGN expression
Rule 45    assignment -> declaration COLON charclass
Rule 46    declaration -> VARNAME
Rule 47    declaration -> VARNAME DOT
Rule 48    declaration -> LPAREN VARNAME RPAREN
Rule 49    declaration -> LPAREN VARNAME RPAREN DOT
Rule 50    charclass -> CHARCLASS NEWLINE optional_block

Terminals, with rules where they appear

BACKTRACK            : 19 20 21
CHARCLASS            : 50
COLON                : 10 45
DEDENT               : 5 38
DOT                  : 20 20 21 21 23 23 24 24 25 25 26 26 47 49
EQUALSIGN            : 43 44
EXCLAMARK            : 34
GLOBALMARK           : 42
INDENT               : 5 37
LPAREN               : 48 49
MINUS                : 19
NEWLINE              : 3 4 5 11 12 13 50
NUMBER               : 17 20 21 21 24 25 26 26
PLUS                 : 20 21
QUESTMARK            : 32 33 33 34
RPAREN               : 48 49
SLASH                : 13 28 29
STRING               : 11
VARNAME              : 27 30 31 46 47 48 49
WHITESPACE           : 2 9 19 20 21 27
error                : 

Nonterminals, with rules where they appear

assignment           : 41 42 43
begin_block          : 35
charclass            : 10 45
declaration          : 43 44 45
definition           : 39 40
definitions          : 35 40
end_block            : 35
expression           : 4 5 9 44
lookup               : 12 28 29
lookup_chain         : 13 29
lookup_expr          : 8
numrange             : 18 19
of                   : 17 18 19 20 21 22
oprex                : 0
optional             : 22 31
optional_block       : 11 12 13 50
optionalize          : 16
quantifier           : 9 10
repeat_N_times       : 14
repeat_expr          : 6
repeat_range         : 15
string_expr          : 7

Parsing method: LALR

state 0

    (0) S' -> . oprex
    (1) oprex -> .
    (2) oprex -> . WHITESPACE
    (3) oprex -> . NEWLINE
    (4) oprex -> . NEWLINE expression
    (5) oprex -> . NEWLINE INDENT expression DEDENT

    $end            reduce using rule 1 (oprex -> .)
    WHITESPACE      shift and go to state 2
    NEWLINE         shift and go to state 3

    oprex                          shift and go to state 1

state 1

    (0) S' -> oprex .



state 2

    (2) oprex -> WHITESPACE .

    $end            reduce using rule 2 (oprex -> WHITESPACE .)


state 3

    (3) oprex -> NEWLINE .
    (4) oprex -> NEWLINE . expression
    (5) oprex -> NEWLINE . INDENT expression DEDENT
    (6) expression -> . repeat_expr
    (7) expression -> . string_expr
    (8) expression -> . lookup_expr
    (9) repeat_expr -> . quantifier WHITESPACE expression
    (10) repeat_expr -> . quantifier COLON charclass
    (11) string_expr -> . STRING NEWLINE optional_block
    (12) lookup_expr -> . lookup NEWLINE optional_block
    (13) lookup_expr -> . SLASH lookup_chain NEWLINE optional_block
    (14) quantifier -> . repeat_N_times
    (15) quantifier -> . repeat_range
    (16) quantifier -> . optionalize
    (30) lookup -> . VARNAME
    (31) lookup -> . VARNAME optional
    (17) repeat_N_times -> . NUMBER of
    (18) repeat_range -> . numrange of
    (19) repeat_range -> . numrange WHITESPACE BACKTRACK MINUS of
    (20) repeat_range -> . NUMBER WHITESPACE BACKTRACK PLUS DOT DOT of
    (21) repeat_range -> . NUMBER WHITESPACE BACKTRACK PLUS DOT DOT NUMBER of
    (22) optionalize -> . optional of
    (23) numrange -> . DOT DOT
    (24) numrange -> . NUMBER DOT DOT
    (25) numrange -> . DOT DOT NUMBER
    (26) numrange -> . NUMBER DOT DOT NUMBER
    (32) optional -> . QUESTMARK
    (33) optional -> . QUESTMARK QUESTMARK
    (34) optional -> . QUESTMARK EXCLAMARK

    $end            reduce using rule 3 (oprex -> NEWLINE .)
    INDENT          shift and go to state 19
    STRING          shift and go to state 13
    SLASH           shift and go to state 15
    VARNAME         shift and go to state 6
    NUMBER          shift and go to state 8
    DOT             shift and go to state 10
    QUESTMARK       shift and go to state 18

    optionalize                    shift and go to state 11
    repeat_N_times                 shift and go to state 4
    expression                     shift and go to state 20
    repeat_range                   shift and go to state 7
    optional                       shift and go to state 17
    numrange                       shift and go to state 14
    repeat_expr                    shift and go to state 5
    lookup                         shift and go to state 12
    quantifier                     shift and go to state 16
    lookup_expr                    shift and go to state 9
    string_expr                    shift and go to state 21

state 4

    (14) quantifier -> repeat_N_times .

    WHITESPACE      reduce using rule 14 (quantifier -> repeat_N_times .)
    COLON           reduce using rule 14 (quantifier -> repeat_N_times .)


state 5

    (6) expression -> repeat_expr .

    DEDENT          reduce using rule 6 (expression -> repeat_expr .)
    $end            reduce using rule 6 (expression -> repeat_expr .)
    GLOBALMARK      reduce using rule 6 (expression -> repeat_expr .)
    VARNAME         reduce using rule 6 (expression -> repeat_expr .)
    LPAREN          reduce using rule 6 (expression -> repeat_expr .)


state 6

    (30) lookup -> VARNAME .
    (31) lookup -> VARNAME . optional
    (32) optional -> . QUESTMARK
    (33) optional -> . QUESTMARK QUESTMARK
    (34) optional -> . QUESTMARK EXCLAMARK

    NEWLINE         reduce using rule 30 (lookup -> VARNAME .)
    SLASH           reduce using rule 30 (lookup -> VARNAME .)
    QUESTMARK       shift and go to state 18

    optional                       shift and go to state 22

state 7

    (15) quantifier -> repeat_range .

    WHITESPACE      reduce using rule 15 (quantifier -> repeat_range .)
    COLON           reduce using rule 15 (quantifier -> repeat_range .)


state 8

    (17) repeat_N_times -> NUMBER . of
    (20) repeat_range -> NUMBER . WHITESPACE BACKTRACK PLUS DOT DOT of
    (21) repeat_range -> NUMBER . WHITESPACE BACKTRACK PLUS DOT DOT NUMBER of
    (24) numrange -> NUMBER . DOT DOT
    (26) numrange -> NUMBER . DOT DOT NUMBER
    (27) of -> . WHITESPACE VARNAME

    WHITESPACE      shift and go to state 23
    DOT             shift and go to state 25

    of                             shift and go to state 24

state 9

    (8) expression -> lookup_expr .

    DEDENT          reduce using rule 8 (expression -> lookup_expr .)
    $end            reduce using rule 8 (expression -> lookup_expr .)
    GLOBALMARK      reduce using rule 8 (expression -> lookup_expr .)
    VARNAME         reduce using rule 8 (expression -> lookup_expr .)
    LPAREN          reduce using rule 8 (expression -> lookup_expr .)


state 10

    (23) numrange -> DOT . DOT
    (25) numrange -> DOT . DOT NUMBER

    DOT             shift and go to state 26


state 11

    (16) quantifier -> optionalize .

    WHITESPACE      reduce using rule 16 (quantifier -> optionalize .)
    COLON           reduce using rule 16 (quantifier -> optionalize .)


state 12

    (12) lookup_expr -> lookup . NEWLINE optional_block

    NEWLINE         shift and go to state 27


state 13

    (11) string_expr -> STRING . NEWLINE optional_block

    NEWLINE         shift and go to state 28


state 14

    (18) repeat_range -> numrange . of
    (19) repeat_range -> numrange . WHITESPACE BACKTRACK MINUS of
    (27) of -> . WHITESPACE VARNAME

    WHITESPACE      shift and go to state 29

    of                             shift and go to state 30

state 15

    (13) lookup_expr -> SLASH . lookup_chain NEWLINE optional_block
    (28) lookup_chain -> . lookup SLASH
    (29) lookup_chain -> . lookup SLASH lookup_chain
    (30) lookup -> . VARNAME
    (31) lookup -> . VARNAME optional

    VARNAME         shift and go to state 6

    lookup                         shift and go to state 31
    lookup_chain                   shift and go to state 32

state 16

    (9) repeat_expr -> quantifier . WHITESPACE expression
    (10) repeat_expr -> quantifier . COLON charclass

    WHITESPACE      shift and go to state 34
    COLON           shift and go to state 33


state 17

    (22) optionalize -> optional . of
    (27) of -> . WHITESPACE VARNAME

    WHITESPACE      shift and go to state 36

    of                             shift and go to state 35

state 18

    (32) optional -> QUESTMARK .
    (33) optional -> QUESTMARK . QUESTMARK
    (34) optional -> QUESTMARK . EXCLAMARK

    WHITESPACE      reduce using rule 32 (optional -> QUESTMARK .)
    NEWLINE         reduce using rule 32 (optional -> QUESTMARK .)
    SLASH           reduce using rule 32 (optional -> QUESTMARK .)
    QUESTMARK       shift and go to state 37
    EXCLAMARK       shift and go to state 38


state 19

    (5) oprex -> NEWLINE INDENT . expression DEDENT
    (6) expression -> . repeat_expr
    (7) expression -> . string_expr
    (8) expression -> . lookup_expr
    (9) repeat_expr -> . quantifier WHITESPACE expression
    (10) repeat_expr -> . quantifier COLON charclass
    (11) string_expr -> . STRING NEWLINE optional_block
    (12) lookup_expr -> . lookup NEWLINE optional_block
    (13) lookup_expr -> . SLASH lookup_chain NEWLINE optional_block
    (14) quantifier -> . repeat_N_times
    (15) quantifier -> . repeat_range
    (16) quantifier -> . optionalize
    (30) lookup -> . VARNAME
    (31) lookup -> . VARNAME optional
    (17) repeat_N_times -> . NUMBER of
    (18) repeat_range -> . numrange of
    (19) repeat_range -> . numrange WHITESPACE BACKTRACK MINUS of
    (20) repeat_range -> . NUMBER WHITESPACE BACKTRACK PLUS DOT DOT of
    (21) repeat_range -> . NUMBER WHITESPACE BACKTRACK PLUS DOT DOT NUMBER of
    (22) optionalize -> . optional of
    (23) numrange -> . DOT DOT
    (24) numrange -> . NUMBER DOT DOT
    (25) numrange -> . DOT DOT NUMBER
    (26) numrange -> . NUMBER DOT DOT NUMBER
    (32) optional -> . QUESTMARK
    (33) optional -> . QUESTMARK QUESTMARK
    (34) optional -> . QUESTMARK EXCLAMARK

    STRING          shift and go to state 13
    SLASH           shift and go to state 15
    VARNAME         shift and go to state 6
    NUMBER          shift and go to state 8
    DOT             shift and go to state 10
    QUESTMARK       shift and go to state 18

    optionalize                    shift and go to state 11
    repeat_N_times                 shift and go to state 4
    expression                     shift and go to state 39
    repeat_range                   shift and go to state 7
    optional                       shift and go to state 17
    numrange                       shift and go to state 14
    repeat_expr                    shift and go to state 5
    lookup                         shift and go to state 12
    quantifier                     shift and go to state 16
    lookup_expr                    shift and go to state 9
    string_expr                    shift and go to state 21

state 20

    (4) oprex -> NEWLINE expression .

    $end            reduce using rule 4 (oprex -> NEWLINE expression .)


state 21

    (7) expression -> string_expr .

    DEDENT          reduce using rule 7 (expression -> string_expr .)
    $end            reduce using rule 7 (expression -> string_expr .)
    GLOBALMARK      reduce using rule 7 (expression -> string_expr .)
    VARNAME         reduce using rule 7 (expression -> string_expr .)
    LPAREN          reduce using rule 7 (expression -> string_expr .)


state 22

    (31) lookup -> VARNAME optional .

    NEWLINE         reduce using rule 31 (lookup -> VARNAME optional .)
    SLASH           reduce using rule 31 (lookup -> VARNAME optional .)


state 23

    (20) repeat_range -> NUMBER WHITESPACE . BACKTRACK PLUS DOT DOT of
    (21) repeat_range -> NUMBER WHITESPACE . BACKTRACK PLUS DOT DOT NUMBER of
    (27) of -> WHITESPACE . VARNAME

    BACKTRACK       shift and go to state 40
    VARNAME         shift and go to state 41


state 24

    (17) repeat_N_times -> NUMBER of .

    WHITESPACE      reduce using rule 17 (repeat_N_times -> NUMBER of .)
    COLON           reduce using rule 17 (repeat_N_times -> NUMBER of .)


state 25

    (24) numrange -> NUMBER DOT . DOT
    (26) numrange -> NUMBER DOT . DOT NUMBER

    DOT             shift and go to state 42


state 26

    (23) numrange -> DOT DOT .
    (25) numrange -> DOT DOT . NUMBER

    WHITESPACE      reduce using rule 23 (numrange -> DOT DOT .)
    NUMBER          shift and go to state 43


state 27

    (12) lookup_expr -> lookup NEWLINE . optional_block
    (35) optional_block -> . begin_block definitions end_block
    (36) optional_block -> .
    (37) begin_block -> . INDENT

    $end            reduce using rule 36 (optional_block -> .)
    DEDENT          reduce using rule 36 (optional_block -> .)
    GLOBALMARK      reduce using rule 36 (optional_block -> .)
    VARNAME         reduce using rule 36 (optional_block -> .)
    LPAREN          reduce using rule 36 (optional_block -> .)
    INDENT          shift and go to state 45

    optional_block                 shift and go to state 46
    begin_block                    shift and go to state 44

state 28

    (11) string_expr -> STRING NEWLINE . optional_block
    (35) optional_block -> . begin_block definitions end_block
    (36) optional_block -> .
    (37) begin_block -> . INDENT

    $end            reduce using rule 36 (optional_block -> .)
    DEDENT          reduce using rule 36 (optional_block -> .)
    GLOBALMARK      reduce using rule 36 (optional_block -> .)
    VARNAME         reduce using rule 36 (optional_block -> .)
    LPAREN          reduce using rule 36 (optional_block -> .)
    INDENT          shift and go to state 45

    begin_block                    shift and go to state 44
    optional_block                 shift and go to state 47

state 29

    (19) repeat_range -> numrange WHITESPACE . BACKTRACK MINUS of
    (27) of -> WHITESPACE . VARNAME

    BACKTRACK       shift and go to state 48
    VARNAME         shift and go to state 41


state 30

    (18) repeat_range -> numrange of .

    WHITESPACE      reduce using rule 18 (repeat_range -> numrange of .)
    COLON           reduce using rule 18 (repeat_range -> numrange of .)


state 31

    (28) lookup_chain -> lookup . SLASH
    (29) lookup_chain -> lookup . SLASH lookup_chain

    SLASH           shift and go to state 49


state 32

    (13) lookup_expr -> SLASH lookup_chain . NEWLINE optional_block

    NEWLINE         shift and go to state 50


state 33

    (10) repeat_expr -> quantifier COLON . charclass
    (50) charclass -> . CHARCLASS NEWLINE optional_block

    CHARCLASS       shift and go to state 52

    charclass                      shift and go to state 51

state 34

    (9) repeat_expr -> quantifier WHITESPACE . expression
    (6) expression -> . repeat_expr
    (7) expression -> . string_expr
    (8) expression -> . lookup_expr
    (9) repeat_expr -> . quantifier WHITESPACE expression
    (10) repeat_expr -> . quantifier COLON charclass
    (11) string_expr -> . STRING NEWLINE optional_block
    (12) lookup_expr -> . lookup NEWLINE optional_block
    (13) lookup_expr -> . SLASH lookup_chain NEWLINE optional_block
    (14) quantifier -> . repeat_N_times
    (15) quantifier -> . repeat_range
    (16) quantifier -> . optionalize
    (30) lookup -> . VARNAME
    (31) lookup -> . VARNAME optional
    (17) repeat_N_times -> . NUMBER of
    (18) repeat_range -> . numrange of
    (19) repeat_range -> . numrange WHITESPACE BACKTRACK MINUS of
    (20) repeat_range -> . NUMBER WHITESPACE BACKTRACK PLUS DOT DOT of
    (21) repeat_range -> . NUMBER WHITESPACE BACKTRACK PLUS DOT DOT NUMBER of
    (22) optionalize -> . optional of
    (23) numrange -> . DOT DOT
    (24) numrange -> . NUMBER DOT DOT
    (25) numrange -> . DOT DOT NUMBER
    (26) numrange -> . NUMBER DOT DOT NUMBER
    (32) optional -> . QUESTMARK
    (33) optional -> . QUESTMARK QUESTMARK
    (34) optional -> . QUESTMARK EXCLAMARK

    STRING          shift and go to state 13
    SLASH           shift and go to state 15
    VARNAME         shift and go to state 6
    NUMBER          shift and go to state 8
    DOT             shift and go to state 10
    QUESTMARK       shift and go to state 18

    optionalize                    shift and go to state 11
    repeat_N_times                 shift and go to state 4
    expression                     shift and go to state 53
    repeat_range                   shift and go to state 7
    optional                       shift and go to state 17
    numrange                       shift and go to state 14
    repeat_expr                    shift and go to state 5
    lookup                         shift and go to state 12
    quantifier                     shift and go to state 16
    lookup_expr                    shift and go to state 9
    string_expr                    shift and go to state 21

state 35

    (22) optionalize -> optional of .

    WHITESPACE      reduce using rule 22 (optionalize -> optional of .)
    COLON           reduce using rule 22 (optionalize -> optional of .)


state 36

    (27) of -> WHITESPACE . VARNAME

    VARNAME         shift and go to state 41


state 37

    (33) optional -> QUESTMARK QUESTMARK .

    WHITESPACE      reduce using rule 33 (optional -> QUESTMARK QUESTMARK .)
    NEWLINE         reduce using rule 33 (optional -> QUESTMARK QUESTMARK .)
    SLASH           reduce using rule 33 (optional -> QUESTMARK QUESTMARK .)


state 38

    (34) optional -> QUESTMARK EXCLAMARK .

    WHITESPACE      reduce using rule 34 (optional -> QUESTMARK EXCLAMARK .)
    NEWLINE         reduce using rule 34 (optional -> QUESTMARK EXCLAMARK .)
    SLASH           reduce using rule 34 (optional -> QUESTMARK EXCLAMARK .)


state 39

    (5) oprex -> NEWLINE INDENT expression . DEDENT

    DEDENT          shift and go to state 54


state 40

    (20) repeat_range -> NUMBER WHITESPACE BACKTRACK . PLUS DOT DOT of
    (21) repeat_range -> NUMBER WHITESPACE BACKTRACK . PLUS DOT DOT NUMBER of

    PLUS            shift and go to state 55


state 41

    (27) of -> WHITESPACE VARNAME .

    WHITESPACE      reduce using rule 27 (of -> WHITESPACE VARNAME .)
    COLON           reduce using rule 27 (of -> WHITESPACE VARNAME .)


state 42

    (24) numrange -> NUMBER DOT DOT .
    (26) numrange -> NUMBER DOT DOT . NUMBER

    WHITESPACE      reduce using rule 24 (numrange -> NUMBER DOT DOT .)
    NUMBER          shift and go to state 56


state 43

    (25) numrange -> DOT DOT NUMBER .

    WHITESPACE      reduce using rule 25 (numrange -> DOT DOT NUMBER .)


state 44

    (35) optional_block -> begin_block . definitions end_block
    (39) definitions -> . definition
    (40) definitions -> . definition definitions
    (41) definition -> . assignment
    (42) definition -> . GLOBALMARK assignment
    (43) assignment -> . declaration EQUALSIGN assignment
    (44) assignment -> . declaration EQUALSIGN expression
    (45) assignment -> . declaration COLON charclass
    (46) declaration -> . VARNAME
    (47) declaration -> . VARNAME DOT
    (48) declaration -> . LPAREN VARNAME RPAREN
    (49) declaration -> . LPAREN VARNAME RPAREN DOT

    GLOBALMARK      shift and go to state 59
    VARNAME         shift and go to state 60
    LPAREN          shift and go to state 61

    definition                     shift and go to state 57
    assignment                     shift and go to state 58
    declaration                    shift and go to state 62
    definitions                    shift and go to state 63

state 45

    (37) begin_block -> INDENT .

    GLOBALMARK      reduce using rule 37 (begin_block -> INDENT .)
    VARNAME         reduce using rule 37 (begin_block -> INDENT .)
    LPAREN          reduce using rule 37 (begin_block -> INDENT .)


state 46

    (12) lookup_expr -> lookup NEWLINE optional_block .

    $end            reduce using rule 12 (lookup_expr -> lookup NEWLINE optional_block .)
    GLOBALMARK      reduce using rule 12 (lookup_expr -> lookup NEWLINE optional_block .)
    VARNAME         reduce using rule 12 (lookup_expr -> lookup NEWLINE optional_block .)
    LPAREN          reduce using rule 12 (lookup_expr -> lookup NEWLINE optional_block .)
    DEDENT          reduce using rule 12 (lookup_expr -> lookup NEWLINE optional_block .)


state 47

    (11) string_expr -> STRING NEWLINE optional_block .

    $end            reduce using rule 11 (string_expr -> STRING NEWLINE optional_block .)
    GLOBALMARK      reduce using rule 11 (string_expr -> STRING NEWLINE optional_block .)
    VARNAME         reduce using rule 11 (string_expr -> STRING NEWLINE optional_block .)
    LPAREN          reduce using rule 11 (string_expr -> STRING NEWLINE optional_block .)
    DEDENT          reduce using rule 11 (string_expr -> STRING NEWLINE optional_block .)


state 48

    (19) repeat_range -> numrange WHITESPACE BACKTRACK . MINUS of

    MINUS           shift and go to state 64


state 49

    (28) lookup_chain -> lookup SLASH .
    (29) lookup_chain -> lookup SLASH . lookup_chain
    (28) lookup_chain -> . lookup SLASH
    (29) lookup_chain -> . lookup SLASH lookup_chain
    (30) lookup -> . VARNAME
    (31) lookup -> . VARNAME optional

    NEWLINE         reduce using rule 28 (lookup_chain -> lookup SLASH .)
    VARNAME         shift and go to state 6

    lookup_chain                   shift and go to state 65
    lookup                         shift and go to state 31

state 50

    (13) lookup_expr -> SLASH lookup_chain NEWLINE . optional_block
    (35) optional_block -> . begin_block definitions end_block
    (36) optional_block -> .
    (37) begin_block -> . INDENT

    $end            reduce using rule 36 (optional_block -> .)
    DEDENT          reduce using rule 36 (optional_block -> .)
    GLOBALMARK      reduce using rule 36 (optional_block -> .)
    VARNAME         reduce using rule 36 (optional_block -> .)
    LPAREN          reduce using rule 36 (optional_block -> .)
    INDENT          shift and go to state 45

    optional_block                 shift and go to state 66
    begin_block                    shift and go to state 44

state 51

    (10) repeat_expr -> quantifier COLON charclass .

    GLOBALMARK      reduce using rule 10 (repeat_expr -> quantifier COLON charclass .)
    VARNAME         reduce using rule 10 (repeat_expr -> quantifier COLON charclass .)
    LPAREN          reduce using rule 10 (repeat_expr -> quantifier COLON charclass .)
    DEDENT          reduce using rule 10 (repeat_expr -> quantifier COLON charclass .)
    $end            reduce using rule 10 (repeat_expr -> quantifier COLON charclass .)


state 52

    (50) charclass -> CHARCLASS . NEWLINE optional_block

    NEWLINE         shift and go to state 67


state 53

    (9) repeat_expr -> quantifier WHITESPACE expression .

    GLOBALMARK      reduce using rule 9 (repeat_expr -> quantifier WHITESPACE expression .)
    VARNAME         reduce using rule 9 (repeat_expr -> quantifier WHITESPACE expression .)
    LPAREN          reduce using rule 9 (repeat_expr -> quantifier WHITESPACE expression .)
    DEDENT          reduce using rule 9 (repeat_expr -> quantifier WHITESPACE expression .)
    $end            reduce using rule 9 (repeat_expr -> quantifier WHITESPACE expression .)


state 54

    (5) oprex -> NEWLINE INDENT expression DEDENT .

    $end            reduce using rule 5 (oprex -> NEWLINE INDENT expression DEDENT .)


state 55

    (20) repeat_range -> NUMBER WHITESPACE BACKTRACK PLUS . DOT DOT of
    (21) repeat_range -> NUMBER WHITESPACE BACKTRACK PLUS . DOT DOT NUMBER of

    DOT             shift and go to state 68


state 56

    (26) numrange -> NUMBER DOT DOT NUMBER .

    WHITESPACE      reduce using rule 26 (numrange -> NUMBER DOT DOT NUMBER .)


state 57

    (39) definitions -> definition .
    (40) definitions -> definition . definitions
    (39) definitions -> . definition
    (40) definitions -> . definition definitions
    (41) definition -> . assignment
    (42) definition -> . GLOBALMARK assignment
    (43) assignment -> . declaration EQUALSIGN assignment
    (44) assignment -> . declaration EQUALSIGN expression
    (45) assignment -> . declaration COLON charclass
    (46) declaration -> . VARNAME
    (47) declaration -> . VARNAME DOT
    (48) declaration -> . LPAREN VARNAME RPAREN
    (49) declaration -> . LPAREN VARNAME RPAREN DOT

    DEDENT          reduce using rule 39 (definitions -> definition .)
    GLOBALMARK      shift and go to state 59
    VARNAME         shift and go to state 60
    LPAREN          shift and go to state 61

    definition                     shift and go to state 57
    assignment                     shift and go to state 58
    declaration                    shift and go to state 62
    definitions                    shift and go to state 69

state 58

    (41) definition -> assignment .

    GLOBALMARK      reduce using rule 41 (definition -> assignment .)
    VARNAME         reduce using rule 41 (definition -> assignment .)
    LPAREN          reduce using rule 41 (definition -> assignment .)
    DEDENT          reduce using rule 41 (definition -> assignment .)


state 59

    (42) definition -> GLOBALMARK . assignment
    (43) assignment -> . declaration EQUALSIGN assignment
    (44) assignment -> . declaration EQUALSIGN expression
    (45) assignment -> . declaration COLON charclass
    (46) declaration -> . VARNAME
    (47) declaration -> . VARNAME DOT
    (48) declaration -> . LPAREN VARNAME RPAREN
    (49) declaration -> . LPAREN VARNAME RPAREN DOT

    VARNAME         shift and go to state 60
    LPAREN          shift and go to state 61

    assignment                     shift and go to state 70
    declaration                    shift and go to state 62

state 60

    (46) declaration -> VARNAME .
    (47) declaration -> VARNAME . DOT

    EQUALSIGN       reduce using rule 46 (declaration -> VARNAME .)
    COLON           reduce using rule 46 (declaration -> VARNAME .)
    DOT             shift and go to state 71


state 61

    (48) declaration -> LPAREN . VARNAME RPAREN
    (49) declaration -> LPAREN . VARNAME RPAREN DOT

    VARNAME         shift and go to state 72


state 62

    (43) assignment -> declaration . EQUALSIGN assignment
    (44) assignment -> declaration . EQUALSIGN expression
    (45) assignment -> declaration . COLON charclass

    EQUALSIGN       shift and go to state 74
    COLON           shift and go to state 73


state 63

    (35) optional_block -> begin_block definitions . end_block
    (38) end_block -> . DEDENT

    DEDENT          shift and go to state 76

    end_block                      shift and go to state 75

state 64

    (19) repeat_range -> numrange WHITESPACE BACKTRACK MINUS . of
    (27) of -> . WHITESPACE VARNAME

    WHITESPACE      shift and go to state 36

    of                             shift and go to state 77

state 65

    (29) lookup_chain -> lookup SLASH lookup_chain .

    NEWLINE         reduce using rule 29 (lookup_chain -> lookup SLASH lookup_chain .)


state 66

    (13) lookup_expr -> SLASH lookup_chain NEWLINE optional_block .

    $end            reduce using rule 13 (lookup_expr -> SLASH lookup_chain NEWLINE optional_block .)
    GLOBALMARK      reduce using rule 13 (lookup_expr -> SLASH lookup_chain NEWLINE optional_block .)
    VARNAME         reduce using rule 13 (lookup_expr -> SLASH lookup_chain NEWLINE optional_block .)
    LPAREN          reduce using rule 13 (lookup_expr -> SLASH lookup_chain NEWLINE optional_block .)
    DEDENT          reduce using rule 13 (lookup_expr -> SLASH lookup_chain NEWLINE optional_block .)


state 67

    (50) charclass -> CHARCLASS NEWLINE . optional_block
    (35) optional_block -> . begin_block definitions end_block
    (36) optional_block -> .
    (37) begin_block -> . INDENT

    $end            reduce using rule 36 (optional_block -> .)
    DEDENT          reduce using rule 36 (optional_block -> .)
    GLOBALMARK      reduce using rule 36 (optional_block -> .)
    VARNAME         reduce using rule 36 (optional_block -> .)
    LPAREN          reduce using rule 36 (optional_block -> .)
    INDENT          shift and go to state 45

    begin_block                    shift and go to state 44
    optional_block                 shift and go to state 78

state 68

    (20) repeat_range -> NUMBER WHITESPACE BACKTRACK PLUS DOT . DOT of
    (21) repeat_range -> NUMBER WHITESPACE BACKTRACK PLUS DOT . DOT NUMBER of

    DOT             shift and go to state 79


state 69

    (40) definitions -> definition definitions .

    DEDENT          reduce using rule 40 (definitions -> definition definitions .)


state 70

    (42) definition -> GLOBALMARK assignment .

    GLOBALMARK      reduce using rule 42 (definition -> GLOBALMARK assignment .)
    VARNAME         reduce using rule 42 (definition -> GLOBALMARK assignment .)
    LPAREN          reduce using rule 42 (definition -> GLOBALMARK assignment .)
    DEDENT          reduce using rule 42 (definition -> GLOBALMARK assignment .)


state 71

    (47) declaration -> VARNAME DOT .

    EQUALSIGN       reduce using rule 47 (declaration -> VARNAME DOT .)
    COLON           reduce using rule 47 (declaration -> VARNAME DOT .)


state 72

    (48) declaration -> LPAREN VARNAME . RPAREN
    (49) declaration -> LPAREN VARNAME . RPAREN DOT

    RPAREN          shift and go to state 80


state 73

    (45) assignment -> declaration COLON . charclass
    (50) charclass -> . CHARCLASS NEWLINE optional_block

    CHARCLASS       shift and go to state 52

    charclass                      shift and go to state 81

state 74

    (43) assignment -> declaration EQUALSIGN . assignment
    (44) assignment -> declaration EQUALSIGN . expression
    (43) assignment -> . declaration EQUALSIGN assignment
    (44) assignment -> . declaration EQUALSIGN expression
    (45) assignment -> . declaration COLON charclass
    (6) expression -> . repeat_expr
    (7) expression -> . string_expr
    (8) expression -> . lookup_expr
    (46) declaration -> . VARNAME
    (47) declaration -> . VARNAME DOT
    (48) declaration -> . LPAREN VARNAME RPAREN
    (49) declaration -> . LPAREN VARNAME RPAREN DOT
    (9) repeat_expr -> . quantifier WHITESPACE expression
    (10) repeat_expr -> . quantifier COLON charclass
    (11) string_expr -> . STRING NEWLINE optional_block
    (12) lookup_expr -> . lookup NEWLINE optional_block
    (13) lookup_expr -> . SLASH lookup_chain NEWLINE optional_block
    (14) quantifier -> . repeat_N_times
    (15) quantifier -> . repeat_range
    (16) quantifier -> . optionalize
    (30) lookup -> . VARNAME
    (31) lookup -> . VARNAME optional
    (17) repeat_N_times -> . NUMBER of
    (18) repeat_range -> . numrange of
    (19) repeat_range -> . numrange WHITESPACE BACKTRACK MINUS of
    (20) repeat_range -> . NUMBER WHITESPACE BACKTRACK PLUS DOT DOT of
    (21) repeat_range -> . NUMBER WHITESPACE BACKTRACK PLUS DOT DOT NUMBER of
    (22) optionalize -> . optional of
    (23) numrange -> . DOT DOT
    (24) numrange -> . NUMBER DOT DOT
    (25) numrange -> . DOT DOT NUMBER
    (26) numrange -> . NUMBER DOT DOT NUMBER
    (32) optional -> . QUESTMARK
    (33) optional -> . QUESTMARK QUESTMARK
    (34) optional -> . QUESTMARK EXCLAMARK

    VARNAME         shift and go to state 82
    LPAREN          shift and go to state 61
    STRING          shift and go to state 13
    SLASH           shift and go to state 15
    NUMBER          shift and go to state 8
    DOT             shift and go to state 10
    QUESTMARK       shift and go to state 18

    optionalize                    shift and go to state 11
    repeat_N_times                 shift and go to state 4
    assignment                     shift and go to state 83
    repeat_range                   shift and go to state 7
    optional                       shift and go to state 17
    numrange                       shift and go to state 14
    expression                     shift and go to state 84
    repeat_expr                    shift and go to state 5
    declaration                    shift and go to state 62
    lookup                         shift and go to state 12
    quantifier                     shift and go to state 16
    lookup_expr                    shift and go to state 9
    string_expr                    shift and go to state 21

state 75

    (35) optional_block -> begin_block definitions end_block .

    $end            reduce using rule 35 (optional_block -> begin_block definitions end_block .)
    DEDENT          reduce using rule 35 (optional_block -> begin_block definitions end_block .)
    GLOBALMARK      reduce using rule 35 (optional_block -> begin_block definitions end_block .)
    VARNAME         reduce using rule 35 (optional_block -> begin_block definitions end_block .)
    LPAREN          reduce using rule 35 (optional_block -> begin_block definitions end_block .)


state 76

    (38) end_block -> DEDENT .

    $end            reduce using rule 38 (end_block -> DEDENT .)
    DEDENT          reduce using rule 38 (end_block -> DEDENT .)
    GLOBALMARK      reduce using rule 38 (end_block -> DEDENT .)
    VARNAME         reduce using rule 38 (end_block -> DEDENT .)
    LPAREN          reduce using rule 38 (end_block -> DEDENT .)


state 77

    (19) repeat_range -> numrange WHITESPACE BACKTRACK MINUS of .

    WHITESPACE      reduce using rule 19 (repeat_range -> numrange WHITESPACE BACKTRACK MINUS of .)
    COLON           reduce using rule 19 (repeat_range -> numrange WHITESPACE BACKTRACK MINUS of .)


state 78

    (50) charclass -> CHARCLASS NEWLINE optional_block .

    $end            reduce using rule 50 (charclass -> CHARCLASS NEWLINE optional_block .)
    DEDENT          reduce using rule 50 (charclass -> CHARCLASS NEWLINE optional_block .)
    GLOBALMARK      reduce using rule 50 (charclass -> CHARCLASS NEWLINE optional_block .)
    VARNAME         reduce using rule 50 (charclass -> CHARCLASS NEWLINE optional_block .)
    LPAREN          reduce using rule 50 (charclass -> CHARCLASS NEWLINE optional_block .)


state 79

    (20) repeat_range -> NUMBER WHITESPACE BACKTRACK PLUS DOT DOT . of
    (21) repeat_range -> NUMBER WHITESPACE BACKTRACK PLUS DOT DOT . NUMBER of
    (27) of -> . WHITESPACE VARNAME

    NUMBER          shift and go to state 86
    WHITESPACE      shift and go to state 36

    of                             shift and go to state 85

state 80

    (48) declaration -> LPAREN VARNAME RPAREN .
    (49) declaration -> LPAREN VARNAME RPAREN . DOT

    EQUALSIGN       reduce using rule 48 (declaration -> LPAREN VARNAME RPAREN .)
    COLON           reduce using rule 48 (declaration -> LPAREN VARNAME RPAREN .)
    DOT             shift and go to state 87


state 81

    (45) assignment -> declaration COLON charclass .

    GLOBALMARK      reduce using rule 45 (assignment -> declaration COLON charclass .)
    VARNAME         reduce using rule 45 (assignment -> declaration COLON charclass .)
    LPAREN          reduce using rule 45 (assignment -> declaration COLON charclass .)
    DEDENT          reduce using rule 45 (assignment -> declaration COLON charclass .)


state 82

    (46) declaration -> VARNAME .
    (47) declaration -> VARNAME . DOT
    (30) lookup -> VARNAME .
    (31) lookup -> VARNAME . optional
    (32) optional -> . QUESTMARK
    (33) optional -> . QUESTMARK QUESTMARK
    (34) optional -> . QUESTMARK EXCLAMARK

    EQUALSIGN       reduce using rule 46 (declaration -> VARNAME .)
    COLON           reduce using rule 46 (declaration -> VARNAME .)
    DOT             shift and go to state 71
    NEWLINE         reduce using rule 30 (lookup -> VARNAME .)
    QUESTMARK       shift and go to state 18

    optional                       shift and go to state 22

state 83

    (43) assignment -> declaration EQUALSIGN assignment .

    GLOBALMARK      reduce using rule 43 (assignment -> declaration EQUALSIGN assignment .)
    VARNAME         reduce using rule 43 (assignment -> declaration EQUALSIGN assignment .)
    LPAREN          reduce using rule 43 (assignment -> declaration EQUALSIGN assignment .)
    DEDENT          reduce using rule 43 (assignment -> declaration EQUALSIGN assignment .)


state 84

    (44) assignment -> declaration EQUALSIGN expression .

    GLOBALMARK      reduce using rule 44 (assignment -> declaration EQUALSIGN expression .)
    VARNAME         reduce using rule 44 (assignment -> declaration EQUALSIGN expression .)
    LPAREN          reduce using rule 44 (assignment -> declaration EQUALSIGN expression .)
    DEDENT          reduce using rule 44 (assignment -> declaration EQUALSIGN expression .)


state 85

    (20) repeat_range -> NUMBER WHITESPACE BACKTRACK PLUS DOT DOT of .

    WHITESPACE      reduce using rule 20 (repeat_range -> NUMBER WHITESPACE BACKTRACK PLUS DOT DOT of .)
    COLON           reduce using rule 20 (repeat_range -> NUMBER WHITESPACE BACKTRACK PLUS DOT DOT of .)


state 86

    (21) repeat_range -> NUMBER WHITESPACE BACKTRACK PLUS DOT DOT NUMBER . of
    (27) of -> . WHITESPACE VARNAME

    WHITESPACE      shift and go to state 36

    of                             shift and go to state 88

state 87

    (49) declaration -> LPAREN VARNAME RPAREN DOT .

    EQUALSIGN       reduce using rule 49 (declaration -> LPAREN VARNAME RPAREN DOT .)
    COLON           reduce using rule 49 (declaration -> LPAREN VARNAME RPAREN DOT .)


state 88

    (21) repeat_range -> NUMBER WHITESPACE BACKTRACK PLUS DOT DOT NUMBER of .

    WHITESPACE      reduce using rule 21 (repeat_range -> NUMBER WHITESPACE BACKTRACK PLUS DOT DOT NUMBER of .)
    COLON           reduce using rule 21 (repeat_range -> NUMBER WHITESPACE BACKTRACK PLUS DOT DOT NUMBER of .)

