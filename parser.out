Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> oprex
Rule 1     oprex -> <empty>
Rule 2     oprex -> WHITESPACE
Rule 3     oprex -> NEWLINE
Rule 4     oprex -> NEWLINE expression
Rule 5     oprex -> NEWLINE INDENT expression DEDENT
Rule 6     expression -> value NEWLINE optional_subblock
Rule 7     expression -> quantifier WHITESPACE expression
Rule 8     expression -> quantifier COLON charclass
Rule 9     value -> STRING
Rule 10    value -> simple_lookup
Rule 11    value -> SLASH chain
Rule 12    simple_lookup -> VARNAME
Rule 13    quantifier -> NUMBER WHITESPACE VARNAME
Rule 14    quantifier -> NUMBER DOTDOT WHITESPACE VARNAME
Rule 15    quantifier -> NUMBER DOTDOT NUMBER WHITESPACE VARNAME
Rule 16    quantifier -> NUMBER DOTDOT WHITESPACE BACKTRACK MINUS WHITESPACE VARNAME
Rule 17    quantifier -> NUMBER DOTDOT NUMBER WHITESPACE BACKTRACK MINUS WHITESPACE VARNAME
Rule 18    quantifier -> NUMBER WHITESPACE BACKTRACK PLUS DOTDOT WHITESPACE VARNAME
Rule 19    quantifier -> NUMBER WHITESPACE BACKTRACK PLUS DOTDOT NUMBER WHITESPACE VARNAME
Rule 20    chain -> cell SLASH
Rule 21    chain -> chain cell SLASH
Rule 22    cell -> VARNAME
Rule 23    cell -> VARNAME QUESTMARK
Rule 24    cell -> LPAREN VARNAME RPAREN
Rule 25    cell -> LPAREN VARNAME RPAREN QUESTMARK
Rule 26    cell -> LPAREN VARNAME QUESTMARK RPAREN
Rule 27    optional_subblock -> begin_block definitions end_block
Rule 28    optional_subblock -> <empty>
Rule 29    begin_block -> INDENT
Rule 30    end_block -> DEDENT
Rule 31    definitions -> definition
Rule 32    definitions -> definition definitions
Rule 33    definition -> assignment
Rule 34    definition -> GLOBALMARK assignment
Rule 35    assignment -> VARNAME EQUALSIGN assignment
Rule 36    assignment -> VARNAME EQUALSIGN expression
Rule 37    assignment -> VARNAME EQUALSIGN STRING NEWLINE
Rule 38    assignment -> VARNAME COLON charclass
Rule 39    charclass -> CHARCLASS NEWLINE optional_subblock

Terminals, with rules where they appear

BACKTRACK            : 16 17 18 19
CHARCLASS            : 39
COLON                : 8 38
DEDENT               : 5 30
DOTDOT               : 14 15 16 17 18 19
EQUALSIGN            : 35 36 37
GLOBALMARK           : 34
INDENT               : 5 29
LPAREN               : 24 25 26
MINUS                : 16 17
NEWLINE              : 3 4 5 6 37 39
NUMBER               : 13 14 15 15 16 17 17 18 19 19
PLUS                 : 18 19
QUESTMARK            : 23 25 26
RPAREN               : 24 25 26
SLASH                : 11 20 21
STRING               : 9 37
VARNAME              : 12 13 14 15 16 17 18 19 22 23 24 25 26 35 36 37 38
WHITESPACE           : 2 7 13 14 15 16 16 17 17 18 18 19 19
error                : 

Nonterminals, with rules where they appear

assignment           : 33 34 35
begin_block          : 27
cell                 : 20 21
chain                : 11 21
charclass            : 8 38
definition           : 31 32
definitions          : 27 32
end_block            : 27
expression           : 4 5 7 36
oprex                : 0
optional_subblock    : 6 39
quantifier           : 7 8
simple_lookup        : 10
value                : 6

Parsing method: LALR

state 0

    (0) S' -> . oprex
    (1) oprex -> .
    (2) oprex -> . WHITESPACE
    (3) oprex -> . NEWLINE
    (4) oprex -> . NEWLINE expression
    (5) oprex -> . NEWLINE INDENT expression DEDENT

    $end            reduce using rule 1 (oprex -> .)
    WHITESPACE      shift and go to state 2
    NEWLINE         shift and go to state 3

    oprex                          shift and go to state 1

state 1

    (0) S' -> oprex .



state 2

    (2) oprex -> WHITESPACE .

    $end            reduce using rule 2 (oprex -> WHITESPACE .)


state 3

    (3) oprex -> NEWLINE .
    (4) oprex -> NEWLINE . expression
    (5) oprex -> NEWLINE . INDENT expression DEDENT
    (6) expression -> . value NEWLINE optional_subblock
    (7) expression -> . quantifier WHITESPACE expression
    (8) expression -> . quantifier COLON charclass
    (9) value -> . STRING
    (10) value -> . simple_lookup
    (11) value -> . SLASH chain
    (13) quantifier -> . NUMBER WHITESPACE VARNAME
    (14) quantifier -> . NUMBER DOTDOT WHITESPACE VARNAME
    (15) quantifier -> . NUMBER DOTDOT NUMBER WHITESPACE VARNAME
    (16) quantifier -> . NUMBER DOTDOT WHITESPACE BACKTRACK MINUS WHITESPACE VARNAME
    (17) quantifier -> . NUMBER DOTDOT NUMBER WHITESPACE BACKTRACK MINUS WHITESPACE VARNAME
    (18) quantifier -> . NUMBER WHITESPACE BACKTRACK PLUS DOTDOT WHITESPACE VARNAME
    (19) quantifier -> . NUMBER WHITESPACE BACKTRACK PLUS DOTDOT NUMBER WHITESPACE VARNAME
    (12) simple_lookup -> . VARNAME

    $end            reduce using rule 3 (oprex -> NEWLINE .)
    INDENT          shift and go to state 4
    STRING          shift and go to state 12
    SLASH           shift and go to state 9
    NUMBER          shift and go to state 6
    VARNAME         shift and go to state 5

    value                          shift and go to state 7
    simple_lookup                  shift and go to state 8
    quantifier                     shift and go to state 10
    expression                     shift and go to state 11

state 4

    (5) oprex -> NEWLINE INDENT . expression DEDENT
    (6) expression -> . value NEWLINE optional_subblock
    (7) expression -> . quantifier WHITESPACE expression
    (8) expression -> . quantifier COLON charclass
    (9) value -> . STRING
    (10) value -> . simple_lookup
    (11) value -> . SLASH chain
    (13) quantifier -> . NUMBER WHITESPACE VARNAME
    (14) quantifier -> . NUMBER DOTDOT WHITESPACE VARNAME
    (15) quantifier -> . NUMBER DOTDOT NUMBER WHITESPACE VARNAME
    (16) quantifier -> . NUMBER DOTDOT WHITESPACE BACKTRACK MINUS WHITESPACE VARNAME
    (17) quantifier -> . NUMBER DOTDOT NUMBER WHITESPACE BACKTRACK MINUS WHITESPACE VARNAME
    (18) quantifier -> . NUMBER WHITESPACE BACKTRACK PLUS DOTDOT WHITESPACE VARNAME
    (19) quantifier -> . NUMBER WHITESPACE BACKTRACK PLUS DOTDOT NUMBER WHITESPACE VARNAME
    (12) simple_lookup -> . VARNAME

    STRING          shift and go to state 12
    SLASH           shift and go to state 9
    NUMBER          shift and go to state 6
    VARNAME         shift and go to state 5

    value                          shift and go to state 7
    simple_lookup                  shift and go to state 8
    quantifier                     shift and go to state 10
    expression                     shift and go to state 13

state 5

    (12) simple_lookup -> VARNAME .

    NEWLINE         reduce using rule 12 (simple_lookup -> VARNAME .)


state 6

    (13) quantifier -> NUMBER . WHITESPACE VARNAME
    (14) quantifier -> NUMBER . DOTDOT WHITESPACE VARNAME
    (15) quantifier -> NUMBER . DOTDOT NUMBER WHITESPACE VARNAME
    (16) quantifier -> NUMBER . DOTDOT WHITESPACE BACKTRACK MINUS WHITESPACE VARNAME
    (17) quantifier -> NUMBER . DOTDOT NUMBER WHITESPACE BACKTRACK MINUS WHITESPACE VARNAME
    (18) quantifier -> NUMBER . WHITESPACE BACKTRACK PLUS DOTDOT WHITESPACE VARNAME
    (19) quantifier -> NUMBER . WHITESPACE BACKTRACK PLUS DOTDOT NUMBER WHITESPACE VARNAME

    WHITESPACE      shift and go to state 14
    DOTDOT          shift and go to state 15


state 7

    (6) expression -> value . NEWLINE optional_subblock

    NEWLINE         shift and go to state 16


state 8

    (10) value -> simple_lookup .

    NEWLINE         reduce using rule 10 (value -> simple_lookup .)


state 9

    (11) value -> SLASH . chain
    (20) chain -> . cell SLASH
    (21) chain -> . chain cell SLASH
    (22) cell -> . VARNAME
    (23) cell -> . VARNAME QUESTMARK
    (24) cell -> . LPAREN VARNAME RPAREN
    (25) cell -> . LPAREN VARNAME RPAREN QUESTMARK
    (26) cell -> . LPAREN VARNAME QUESTMARK RPAREN

    VARNAME         shift and go to state 18
    LPAREN          shift and go to state 20

    cell                           shift and go to state 19
    chain                          shift and go to state 17

state 10

    (7) expression -> quantifier . WHITESPACE expression
    (8) expression -> quantifier . COLON charclass

    WHITESPACE      shift and go to state 22
    COLON           shift and go to state 21


state 11

    (4) oprex -> NEWLINE expression .

    $end            reduce using rule 4 (oprex -> NEWLINE expression .)


state 12

    (9) value -> STRING .

    NEWLINE         reduce using rule 9 (value -> STRING .)


state 13

    (5) oprex -> NEWLINE INDENT expression . DEDENT

    DEDENT          shift and go to state 23


state 14

    (13) quantifier -> NUMBER WHITESPACE . VARNAME
    (18) quantifier -> NUMBER WHITESPACE . BACKTRACK PLUS DOTDOT WHITESPACE VARNAME
    (19) quantifier -> NUMBER WHITESPACE . BACKTRACK PLUS DOTDOT NUMBER WHITESPACE VARNAME

    VARNAME         shift and go to state 25
    BACKTRACK       shift and go to state 24


state 15

    (14) quantifier -> NUMBER DOTDOT . WHITESPACE VARNAME
    (15) quantifier -> NUMBER DOTDOT . NUMBER WHITESPACE VARNAME
    (16) quantifier -> NUMBER DOTDOT . WHITESPACE BACKTRACK MINUS WHITESPACE VARNAME
    (17) quantifier -> NUMBER DOTDOT . NUMBER WHITESPACE BACKTRACK MINUS WHITESPACE VARNAME

    WHITESPACE      shift and go to state 26
    NUMBER          shift and go to state 27


state 16

    (6) expression -> value NEWLINE . optional_subblock
    (27) optional_subblock -> . begin_block definitions end_block
    (28) optional_subblock -> .
    (29) begin_block -> . INDENT

    $end            reduce using rule 28 (optional_subblock -> .)
    DEDENT          reduce using rule 28 (optional_subblock -> .)
    GLOBALMARK      reduce using rule 28 (optional_subblock -> .)
    VARNAME         reduce using rule 28 (optional_subblock -> .)
    INDENT          shift and go to state 29

    begin_block                    shift and go to state 28
    optional_subblock              shift and go to state 30

state 17

    (11) value -> SLASH chain .
    (21) chain -> chain . cell SLASH
    (22) cell -> . VARNAME
    (23) cell -> . VARNAME QUESTMARK
    (24) cell -> . LPAREN VARNAME RPAREN
    (25) cell -> . LPAREN VARNAME RPAREN QUESTMARK
    (26) cell -> . LPAREN VARNAME QUESTMARK RPAREN

    NEWLINE         reduce using rule 11 (value -> SLASH chain .)
    VARNAME         shift and go to state 18
    LPAREN          shift and go to state 20

    cell                           shift and go to state 31

state 18

    (22) cell -> VARNAME .
    (23) cell -> VARNAME . QUESTMARK

    SLASH           reduce using rule 22 (cell -> VARNAME .)
    QUESTMARK       shift and go to state 32


state 19

    (20) chain -> cell . SLASH

    SLASH           shift and go to state 33


state 20

    (24) cell -> LPAREN . VARNAME RPAREN
    (25) cell -> LPAREN . VARNAME RPAREN QUESTMARK
    (26) cell -> LPAREN . VARNAME QUESTMARK RPAREN

    VARNAME         shift and go to state 34


state 21

    (8) expression -> quantifier COLON . charclass
    (39) charclass -> . CHARCLASS NEWLINE optional_subblock

    CHARCLASS       shift and go to state 36

    charclass                      shift and go to state 35

state 22

    (7) expression -> quantifier WHITESPACE . expression
    (6) expression -> . value NEWLINE optional_subblock
    (7) expression -> . quantifier WHITESPACE expression
    (8) expression -> . quantifier COLON charclass
    (9) value -> . STRING
    (10) value -> . simple_lookup
    (11) value -> . SLASH chain
    (13) quantifier -> . NUMBER WHITESPACE VARNAME
    (14) quantifier -> . NUMBER DOTDOT WHITESPACE VARNAME
    (15) quantifier -> . NUMBER DOTDOT NUMBER WHITESPACE VARNAME
    (16) quantifier -> . NUMBER DOTDOT WHITESPACE BACKTRACK MINUS WHITESPACE VARNAME
    (17) quantifier -> . NUMBER DOTDOT NUMBER WHITESPACE BACKTRACK MINUS WHITESPACE VARNAME
    (18) quantifier -> . NUMBER WHITESPACE BACKTRACK PLUS DOTDOT WHITESPACE VARNAME
    (19) quantifier -> . NUMBER WHITESPACE BACKTRACK PLUS DOTDOT NUMBER WHITESPACE VARNAME
    (12) simple_lookup -> . VARNAME

    STRING          shift and go to state 12
    SLASH           shift and go to state 9
    NUMBER          shift and go to state 6
    VARNAME         shift and go to state 5

    value                          shift and go to state 7
    simple_lookup                  shift and go to state 8
    quantifier                     shift and go to state 10
    expression                     shift and go to state 37

state 23

    (5) oprex -> NEWLINE INDENT expression DEDENT .

    $end            reduce using rule 5 (oprex -> NEWLINE INDENT expression DEDENT .)


state 24

    (18) quantifier -> NUMBER WHITESPACE BACKTRACK . PLUS DOTDOT WHITESPACE VARNAME
    (19) quantifier -> NUMBER WHITESPACE BACKTRACK . PLUS DOTDOT NUMBER WHITESPACE VARNAME

    PLUS            shift and go to state 38


state 25

    (13) quantifier -> NUMBER WHITESPACE VARNAME .

    WHITESPACE      reduce using rule 13 (quantifier -> NUMBER WHITESPACE VARNAME .)
    COLON           reduce using rule 13 (quantifier -> NUMBER WHITESPACE VARNAME .)


state 26

    (14) quantifier -> NUMBER DOTDOT WHITESPACE . VARNAME
    (16) quantifier -> NUMBER DOTDOT WHITESPACE . BACKTRACK MINUS WHITESPACE VARNAME

    VARNAME         shift and go to state 40
    BACKTRACK       shift and go to state 39


state 27

    (15) quantifier -> NUMBER DOTDOT NUMBER . WHITESPACE VARNAME
    (17) quantifier -> NUMBER DOTDOT NUMBER . WHITESPACE BACKTRACK MINUS WHITESPACE VARNAME

    WHITESPACE      shift and go to state 41


state 28

    (27) optional_subblock -> begin_block . definitions end_block
    (31) definitions -> . definition
    (32) definitions -> . definition definitions
    (33) definition -> . assignment
    (34) definition -> . GLOBALMARK assignment
    (35) assignment -> . VARNAME EQUALSIGN assignment
    (36) assignment -> . VARNAME EQUALSIGN expression
    (37) assignment -> . VARNAME EQUALSIGN STRING NEWLINE
    (38) assignment -> . VARNAME COLON charclass

    GLOBALMARK      shift and go to state 44
    VARNAME         shift and go to state 45

    definition                     shift and go to state 42
    assignment                     shift and go to state 43
    definitions                    shift and go to state 46

state 29

    (29) begin_block -> INDENT .

    GLOBALMARK      reduce using rule 29 (begin_block -> INDENT .)
    VARNAME         reduce using rule 29 (begin_block -> INDENT .)


state 30

    (6) expression -> value NEWLINE optional_subblock .

    $end            reduce using rule 6 (expression -> value NEWLINE optional_subblock .)
    DEDENT          reduce using rule 6 (expression -> value NEWLINE optional_subblock .)
    GLOBALMARK      reduce using rule 6 (expression -> value NEWLINE optional_subblock .)
    VARNAME         reduce using rule 6 (expression -> value NEWLINE optional_subblock .)


state 31

    (21) chain -> chain cell . SLASH

    SLASH           shift and go to state 47


state 32

    (23) cell -> VARNAME QUESTMARK .

    SLASH           reduce using rule 23 (cell -> VARNAME QUESTMARK .)


state 33

    (20) chain -> cell SLASH .

    VARNAME         reduce using rule 20 (chain -> cell SLASH .)
    LPAREN          reduce using rule 20 (chain -> cell SLASH .)
    NEWLINE         reduce using rule 20 (chain -> cell SLASH .)


state 34

    (24) cell -> LPAREN VARNAME . RPAREN
    (25) cell -> LPAREN VARNAME . RPAREN QUESTMARK
    (26) cell -> LPAREN VARNAME . QUESTMARK RPAREN

    RPAREN          shift and go to state 49
    QUESTMARK       shift and go to state 48


state 35

    (8) expression -> quantifier COLON charclass .

    $end            reduce using rule 8 (expression -> quantifier COLON charclass .)
    DEDENT          reduce using rule 8 (expression -> quantifier COLON charclass .)
    GLOBALMARK      reduce using rule 8 (expression -> quantifier COLON charclass .)
    VARNAME         reduce using rule 8 (expression -> quantifier COLON charclass .)


state 36

    (39) charclass -> CHARCLASS . NEWLINE optional_subblock

    NEWLINE         shift and go to state 50


state 37

    (7) expression -> quantifier WHITESPACE expression .

    $end            reduce using rule 7 (expression -> quantifier WHITESPACE expression .)
    DEDENT          reduce using rule 7 (expression -> quantifier WHITESPACE expression .)
    GLOBALMARK      reduce using rule 7 (expression -> quantifier WHITESPACE expression .)
    VARNAME         reduce using rule 7 (expression -> quantifier WHITESPACE expression .)


state 38

    (18) quantifier -> NUMBER WHITESPACE BACKTRACK PLUS . DOTDOT WHITESPACE VARNAME
    (19) quantifier -> NUMBER WHITESPACE BACKTRACK PLUS . DOTDOT NUMBER WHITESPACE VARNAME

    DOTDOT          shift and go to state 51


state 39

    (16) quantifier -> NUMBER DOTDOT WHITESPACE BACKTRACK . MINUS WHITESPACE VARNAME

    MINUS           shift and go to state 52


state 40

    (14) quantifier -> NUMBER DOTDOT WHITESPACE VARNAME .

    WHITESPACE      reduce using rule 14 (quantifier -> NUMBER DOTDOT WHITESPACE VARNAME .)
    COLON           reduce using rule 14 (quantifier -> NUMBER DOTDOT WHITESPACE VARNAME .)


state 41

    (15) quantifier -> NUMBER DOTDOT NUMBER WHITESPACE . VARNAME
    (17) quantifier -> NUMBER DOTDOT NUMBER WHITESPACE . BACKTRACK MINUS WHITESPACE VARNAME

    VARNAME         shift and go to state 54
    BACKTRACK       shift and go to state 53


state 42

    (31) definitions -> definition .
    (32) definitions -> definition . definitions
    (31) definitions -> . definition
    (32) definitions -> . definition definitions
    (33) definition -> . assignment
    (34) definition -> . GLOBALMARK assignment
    (35) assignment -> . VARNAME EQUALSIGN assignment
    (36) assignment -> . VARNAME EQUALSIGN expression
    (37) assignment -> . VARNAME EQUALSIGN STRING NEWLINE
    (38) assignment -> . VARNAME COLON charclass

    DEDENT          reduce using rule 31 (definitions -> definition .)
    GLOBALMARK      shift and go to state 44
    VARNAME         shift and go to state 45

    definition                     shift and go to state 42
    assignment                     shift and go to state 43
    definitions                    shift and go to state 55

state 43

    (33) definition -> assignment .

    GLOBALMARK      reduce using rule 33 (definition -> assignment .)
    VARNAME         reduce using rule 33 (definition -> assignment .)
    DEDENT          reduce using rule 33 (definition -> assignment .)


state 44

    (34) definition -> GLOBALMARK . assignment
    (35) assignment -> . VARNAME EQUALSIGN assignment
    (36) assignment -> . VARNAME EQUALSIGN expression
    (37) assignment -> . VARNAME EQUALSIGN STRING NEWLINE
    (38) assignment -> . VARNAME COLON charclass

    VARNAME         shift and go to state 45

    assignment                     shift and go to state 56

state 45

    (35) assignment -> VARNAME . EQUALSIGN assignment
    (36) assignment -> VARNAME . EQUALSIGN expression
    (37) assignment -> VARNAME . EQUALSIGN STRING NEWLINE
    (38) assignment -> VARNAME . COLON charclass

    EQUALSIGN       shift and go to state 58
    COLON           shift and go to state 57


state 46

    (27) optional_subblock -> begin_block definitions . end_block
    (30) end_block -> . DEDENT

    DEDENT          shift and go to state 60

    end_block                      shift and go to state 59

state 47

    (21) chain -> chain cell SLASH .

    VARNAME         reduce using rule 21 (chain -> chain cell SLASH .)
    LPAREN          reduce using rule 21 (chain -> chain cell SLASH .)
    NEWLINE         reduce using rule 21 (chain -> chain cell SLASH .)


state 48

    (26) cell -> LPAREN VARNAME QUESTMARK . RPAREN

    RPAREN          shift and go to state 61


state 49

    (24) cell -> LPAREN VARNAME RPAREN .
    (25) cell -> LPAREN VARNAME RPAREN . QUESTMARK

    SLASH           reduce using rule 24 (cell -> LPAREN VARNAME RPAREN .)
    QUESTMARK       shift and go to state 62


state 50

    (39) charclass -> CHARCLASS NEWLINE . optional_subblock
    (27) optional_subblock -> . begin_block definitions end_block
    (28) optional_subblock -> .
    (29) begin_block -> . INDENT

    $end            reduce using rule 28 (optional_subblock -> .)
    DEDENT          reduce using rule 28 (optional_subblock -> .)
    GLOBALMARK      reduce using rule 28 (optional_subblock -> .)
    VARNAME         reduce using rule 28 (optional_subblock -> .)
    INDENT          shift and go to state 29

    begin_block                    shift and go to state 28
    optional_subblock              shift and go to state 63

state 51

    (18) quantifier -> NUMBER WHITESPACE BACKTRACK PLUS DOTDOT . WHITESPACE VARNAME
    (19) quantifier -> NUMBER WHITESPACE BACKTRACK PLUS DOTDOT . NUMBER WHITESPACE VARNAME

    WHITESPACE      shift and go to state 64
    NUMBER          shift and go to state 65


state 52

    (16) quantifier -> NUMBER DOTDOT WHITESPACE BACKTRACK MINUS . WHITESPACE VARNAME

    WHITESPACE      shift and go to state 66


state 53

    (17) quantifier -> NUMBER DOTDOT NUMBER WHITESPACE BACKTRACK . MINUS WHITESPACE VARNAME

    MINUS           shift and go to state 67


state 54

    (15) quantifier -> NUMBER DOTDOT NUMBER WHITESPACE VARNAME .

    WHITESPACE      reduce using rule 15 (quantifier -> NUMBER DOTDOT NUMBER WHITESPACE VARNAME .)
    COLON           reduce using rule 15 (quantifier -> NUMBER DOTDOT NUMBER WHITESPACE VARNAME .)


state 55

    (32) definitions -> definition definitions .

    DEDENT          reduce using rule 32 (definitions -> definition definitions .)


state 56

    (34) definition -> GLOBALMARK assignment .

    GLOBALMARK      reduce using rule 34 (definition -> GLOBALMARK assignment .)
    VARNAME         reduce using rule 34 (definition -> GLOBALMARK assignment .)
    DEDENT          reduce using rule 34 (definition -> GLOBALMARK assignment .)


state 57

    (38) assignment -> VARNAME COLON . charclass
    (39) charclass -> . CHARCLASS NEWLINE optional_subblock

    CHARCLASS       shift and go to state 36

    charclass                      shift and go to state 68

state 58

    (35) assignment -> VARNAME EQUALSIGN . assignment
    (36) assignment -> VARNAME EQUALSIGN . expression
    (37) assignment -> VARNAME EQUALSIGN . STRING NEWLINE
    (35) assignment -> . VARNAME EQUALSIGN assignment
    (36) assignment -> . VARNAME EQUALSIGN expression
    (37) assignment -> . VARNAME EQUALSIGN STRING NEWLINE
    (38) assignment -> . VARNAME COLON charclass
    (6) expression -> . value NEWLINE optional_subblock
    (7) expression -> . quantifier WHITESPACE expression
    (8) expression -> . quantifier COLON charclass
    (9) value -> . STRING
    (10) value -> . simple_lookup
    (11) value -> . SLASH chain
    (13) quantifier -> . NUMBER WHITESPACE VARNAME
    (14) quantifier -> . NUMBER DOTDOT WHITESPACE VARNAME
    (15) quantifier -> . NUMBER DOTDOT NUMBER WHITESPACE VARNAME
    (16) quantifier -> . NUMBER DOTDOT WHITESPACE BACKTRACK MINUS WHITESPACE VARNAME
    (17) quantifier -> . NUMBER DOTDOT NUMBER WHITESPACE BACKTRACK MINUS WHITESPACE VARNAME
    (18) quantifier -> . NUMBER WHITESPACE BACKTRACK PLUS DOTDOT WHITESPACE VARNAME
    (19) quantifier -> . NUMBER WHITESPACE BACKTRACK PLUS DOTDOT NUMBER WHITESPACE VARNAME
    (12) simple_lookup -> . VARNAME

    STRING          shift and go to state 69
    VARNAME         shift and go to state 70
    SLASH           shift and go to state 9
    NUMBER          shift and go to state 6

    assignment                     shift and go to state 71
    value                          shift and go to state 7
    simple_lookup                  shift and go to state 8
    quantifier                     shift and go to state 10
    expression                     shift and go to state 72

state 59

    (27) optional_subblock -> begin_block definitions end_block .

    $end            reduce using rule 27 (optional_subblock -> begin_block definitions end_block .)
    DEDENT          reduce using rule 27 (optional_subblock -> begin_block definitions end_block .)
    GLOBALMARK      reduce using rule 27 (optional_subblock -> begin_block definitions end_block .)
    VARNAME         reduce using rule 27 (optional_subblock -> begin_block definitions end_block .)


state 60

    (30) end_block -> DEDENT .

    $end            reduce using rule 30 (end_block -> DEDENT .)
    DEDENT          reduce using rule 30 (end_block -> DEDENT .)
    GLOBALMARK      reduce using rule 30 (end_block -> DEDENT .)
    VARNAME         reduce using rule 30 (end_block -> DEDENT .)


state 61

    (26) cell -> LPAREN VARNAME QUESTMARK RPAREN .

    SLASH           reduce using rule 26 (cell -> LPAREN VARNAME QUESTMARK RPAREN .)


state 62

    (25) cell -> LPAREN VARNAME RPAREN QUESTMARK .

    SLASH           reduce using rule 25 (cell -> LPAREN VARNAME RPAREN QUESTMARK .)


state 63

    (39) charclass -> CHARCLASS NEWLINE optional_subblock .

    $end            reduce using rule 39 (charclass -> CHARCLASS NEWLINE optional_subblock .)
    DEDENT          reduce using rule 39 (charclass -> CHARCLASS NEWLINE optional_subblock .)
    GLOBALMARK      reduce using rule 39 (charclass -> CHARCLASS NEWLINE optional_subblock .)
    VARNAME         reduce using rule 39 (charclass -> CHARCLASS NEWLINE optional_subblock .)


state 64

    (18) quantifier -> NUMBER WHITESPACE BACKTRACK PLUS DOTDOT WHITESPACE . VARNAME

    VARNAME         shift and go to state 73


state 65

    (19) quantifier -> NUMBER WHITESPACE BACKTRACK PLUS DOTDOT NUMBER . WHITESPACE VARNAME

    WHITESPACE      shift and go to state 74


state 66

    (16) quantifier -> NUMBER DOTDOT WHITESPACE BACKTRACK MINUS WHITESPACE . VARNAME

    VARNAME         shift and go to state 75


state 67

    (17) quantifier -> NUMBER DOTDOT NUMBER WHITESPACE BACKTRACK MINUS . WHITESPACE VARNAME

    WHITESPACE      shift and go to state 76


state 68

    (38) assignment -> VARNAME COLON charclass .

    GLOBALMARK      reduce using rule 38 (assignment -> VARNAME COLON charclass .)
    VARNAME         reduce using rule 38 (assignment -> VARNAME COLON charclass .)
    DEDENT          reduce using rule 38 (assignment -> VARNAME COLON charclass .)


state 69

    (37) assignment -> VARNAME EQUALSIGN STRING . NEWLINE
    (9) value -> STRING .

  ! shift/reduce conflict for NEWLINE resolved as shift
    NEWLINE         shift and go to state 77

  ! NEWLINE         [ reduce using rule 9 (value -> STRING .) ]


state 70

    (35) assignment -> VARNAME . EQUALSIGN assignment
    (36) assignment -> VARNAME . EQUALSIGN expression
    (37) assignment -> VARNAME . EQUALSIGN STRING NEWLINE
    (38) assignment -> VARNAME . COLON charclass
    (12) simple_lookup -> VARNAME .

    EQUALSIGN       shift and go to state 58
    COLON           shift and go to state 57
    NEWLINE         reduce using rule 12 (simple_lookup -> VARNAME .)


state 71

    (35) assignment -> VARNAME EQUALSIGN assignment .

    GLOBALMARK      reduce using rule 35 (assignment -> VARNAME EQUALSIGN assignment .)
    VARNAME         reduce using rule 35 (assignment -> VARNAME EQUALSIGN assignment .)
    DEDENT          reduce using rule 35 (assignment -> VARNAME EQUALSIGN assignment .)


state 72

    (36) assignment -> VARNAME EQUALSIGN expression .

    GLOBALMARK      reduce using rule 36 (assignment -> VARNAME EQUALSIGN expression .)
    VARNAME         reduce using rule 36 (assignment -> VARNAME EQUALSIGN expression .)
    DEDENT          reduce using rule 36 (assignment -> VARNAME EQUALSIGN expression .)


state 73

    (18) quantifier -> NUMBER WHITESPACE BACKTRACK PLUS DOTDOT WHITESPACE VARNAME .

    WHITESPACE      reduce using rule 18 (quantifier -> NUMBER WHITESPACE BACKTRACK PLUS DOTDOT WHITESPACE VARNAME .)
    COLON           reduce using rule 18 (quantifier -> NUMBER WHITESPACE BACKTRACK PLUS DOTDOT WHITESPACE VARNAME .)


state 74

    (19) quantifier -> NUMBER WHITESPACE BACKTRACK PLUS DOTDOT NUMBER WHITESPACE . VARNAME

    VARNAME         shift and go to state 78


state 75

    (16) quantifier -> NUMBER DOTDOT WHITESPACE BACKTRACK MINUS WHITESPACE VARNAME .

    WHITESPACE      reduce using rule 16 (quantifier -> NUMBER DOTDOT WHITESPACE BACKTRACK MINUS WHITESPACE VARNAME .)
    COLON           reduce using rule 16 (quantifier -> NUMBER DOTDOT WHITESPACE BACKTRACK MINUS WHITESPACE VARNAME .)


state 76

    (17) quantifier -> NUMBER DOTDOT NUMBER WHITESPACE BACKTRACK MINUS WHITESPACE . VARNAME

    VARNAME         shift and go to state 79


state 77

    (37) assignment -> VARNAME EQUALSIGN STRING NEWLINE .

    GLOBALMARK      reduce using rule 37 (assignment -> VARNAME EQUALSIGN STRING NEWLINE .)
    VARNAME         reduce using rule 37 (assignment -> VARNAME EQUALSIGN STRING NEWLINE .)
    DEDENT          reduce using rule 37 (assignment -> VARNAME EQUALSIGN STRING NEWLINE .)


state 78

    (19) quantifier -> NUMBER WHITESPACE BACKTRACK PLUS DOTDOT NUMBER WHITESPACE VARNAME .

    WHITESPACE      reduce using rule 19 (quantifier -> NUMBER WHITESPACE BACKTRACK PLUS DOTDOT NUMBER WHITESPACE VARNAME .)
    COLON           reduce using rule 19 (quantifier -> NUMBER WHITESPACE BACKTRACK PLUS DOTDOT NUMBER WHITESPACE VARNAME .)


state 79

    (17) quantifier -> NUMBER DOTDOT NUMBER WHITESPACE BACKTRACK MINUS WHITESPACE VARNAME .

    WHITESPACE      reduce using rule 17 (quantifier -> NUMBER DOTDOT NUMBER WHITESPACE BACKTRACK MINUS WHITESPACE VARNAME .)
    COLON           reduce using rule 17 (quantifier -> NUMBER DOTDOT NUMBER WHITESPACE BACKTRACK MINUS WHITESPACE VARNAME .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for NEWLINE in state 69 resolved as shift
